

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Dec 03 13:34:57 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00287E                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _bouton
    56  00287E  30                 	db	48
    57  0000                     _ANSELA	set	3896
    58  0000                     _ANSELB	set	3897
    59  0000                     _ANSELC	set	3898
    60  0000                     _ANSELCbits	set	3898
    61  0000                     _ANSELD	set	3899
    62  0000                     _ANSELDbits	set	3899
    63  0000                     _ANSELE	set	3900
    64  0000                     _BAUDCON1bits	set	4024
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCONbits	set	4082
    67  0000                     _IPR1bits	set	3999
    68  0000                     _LATAbits	set	3977
    69  0000                     _LATDbits	set	3980
    70  0000                     _OSCCONbits	set	4051
    71  0000                     _PIE1bits	set	3997
    72  0000                     _PIR1bits	set	3998
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTCbits	set	3970
    75  0000                     _PORTD	set	3971
    76  0000                     _RCONbits	set	4048
    77  0000                     _RCSTA1bits	set	4011
    78  0000                     _SPBRG1	set	4015
    79  0000                     _T0CONbits	set	4053
    80  0000                     _T1CONbits	set	4045
    81  0000                     _T1GCONbits	set	4044
    82  0000                     _TMR0L	set	4054
    83  0000                     _TMR1H	set	4047
    84  0000                     _TMR1L	set	4046
    85  0000                     _TRISAbits	set	3986
    86  0000                     _TRISBbits	set	3987
    87  0000                     _TRISCbits	set	3988
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISDbits	set	3989
    90  0000                     _TRISEbits	set	3990
    91  0000                     _TXREG1	set	4013
    92  0000                     _TXSTA1bits	set	4012
    93                           
    94                           	psect	smallconst
    95  001000                     __psmallconst:
    96                           	opt stack 0
    97  001000                     __stringdata:
    98                           	opt stack 0
    99  001000                     STR_1:
   100  001000  48                 	db	72	;'H'
   101  001001  65                 	db	101	;'e'
   102  001002  6C                 	db	108	;'l'
   103  001003  6C                 	db	108	;'l'
   104  001004  6F                 	db	111	;'o'
   105  001005  00                 	db	0
   106  001006                     __end_of__stringdata:
   107                           	opt stack 0
   108                           
   109                           ; #config settings
   110  001006  00                 	db	0	; dummy byte at the end
   111  0000                     
   112                           	psect	cinit
   113  00278E                     __pcinit:
   114                           	opt stack 0
   115  00278E                     start_initialization:
   116                           	opt stack 0
   117  00278E                     __initialization:
   118                           	opt stack 0
   119                           
   120                           ; Clear objects allocated to COMRAM (12 bytes)
   121  00278E  EE00  F033         	lfsr	0,__pbssCOMRAM
   122  002792  0E0C               	movlw	12
   123  002794                     clear_0:
   124  002794  6AEE               	clrf	postinc0,c
   125  002796  06E8               	decf	wreg,f,c
   126  002798  E1FD               	bnz	clear_0
   127                           
   128                           ; Initialize objects allocated to COMRAM (1 bytes)
   129                           ; load TBLPTR registers with __pidataCOMRAM
   130  00279A  0E7E               	movlw	low __pidataCOMRAM
   131  00279C  6EF6               	movwf	tblptrl,c
   132  00279E  0E28               	movlw	high __pidataCOMRAM
   133  0027A0  6EF7               	movwf	tblptrh,c
   134  0027A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   135  0027A4  6EF8               	movwf	tblptru,c
   136  0027A6  0009               	tblrd		*+	;fetch initializer
   137  0027A8  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   138  0027AC                     end_of_initialization:
   139                           	opt stack 0
   140  0027AC                     __end_of__initialization:
   141                           	opt stack 0
   142  0027AC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   143  0027AE  6EF8               	movwf	tblptru,c
   144  0027B0  0E10               	movlw	high __Lsmallconst
   145  0027B2  6EF7               	movwf	tblptrh,c
   146  0027B4  0100               	movlb	0
   147  0027B6  EF24  F00D         	goto	_main	;jump to C main() function
   148                           tblptru	equ	0xFF8
   149                           tblptrh	equ	0xFF7
   150                           tblptrl	equ	0xFF6
   151                           tablat	equ	0xFF5
   152                           postinc0	equ	0xFEE
   153                           wreg	equ	0xFE8
   154                           
   155                           	psect	bssCOMRAM
   156  000033                     __pbssCOMRAM:
   157                           	opt stack 0
   158  000033                     _temp:
   159                           	opt stack 0
   160  000033                     	ds	3
   161  000036                     _flagtimer:
   162                           	opt stack 0
   163  000036                     	ds	2
   164  000038                     _i:
   165                           	opt stack 0
   166  000038                     	ds	2
   167  00003A                     _capteur:
   168                           	opt stack 0
   169  00003A                     	ds	5
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           	psect	dataCOMRAM
   178  00003F                     __pdataCOMRAM:
   179                           	opt stack 0
   180  00003F                     _bouton:
   181                           	opt stack 0
   182  00003F                     	ds	1
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           postinc0	equ	0xFEE
   188                           wreg	equ	0xFE8
   189                           
   190                           	psect	cstackBANK0
   191  000060                     __pcstackBANK0:
   192                           	opt stack 0
   193  000060                     ?___ftmul:
   194                           	opt stack 0
   195  000060                     ___ftmul@f1:
   196                           	opt stack 0
   197                           
   198                           ; 3 bytes @ 0x0
   199  000060                     	ds	3
   200  000063                     ___ftmul@f2:
   201                           	opt stack 0
   202                           
   203                           ; 3 bytes @ 0x3
   204  000063                     	ds	3
   205  000066                     ___ftmul@exp:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x6
   209  000066                     	ds	1
   210  000067                     ___ftmul@f3_as_product:
   211                           	opt stack 0
   212                           
   213                           ; 3 bytes @ 0x7
   214  000067                     	ds	3
   215  00006A                     ___ftmul@cntr:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0xA
   219  00006A                     	ds	1
   220  00006B                     ___ftmul@sign:
   221                           	opt stack 0
   222                           
   223                           ; 1 bytes @ 0xB
   224  00006B                     	ds	1
   225  00006C                     ?___ftadd:
   226                           	opt stack 0
   227  00006C                     ?_Read_Temperature:
   228                           	opt stack 0
   229  00006C                     ___ftadd@f1:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0xC
   233  00006C                     	ds	3
   234  00006F                     ??_Read_Temperature:
   235  00006F                     ___ftadd@f2:
   236                           	opt stack 0
   237                           
   238                           ; 3 bytes @ 0xF
   239  00006F                     	ds	1
   240  000070                     Read_Temperature@scratchpad:
   241                           	opt stack 0
   242                           
   243                           ; 10 bytes @ 0x10
   244  000070                     	ds	2
   245  000072                     ??___ftadd:
   246                           
   247                           ; 0 bytes @ 0x12
   248  000072                     	ds	5
   249  000077                     ___ftadd@sign:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x17
   253  000077                     	ds	1
   254  000078                     ___ftadd@exp2:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x18
   258  000078                     	ds	1
   259  000079                     ___ftadd@exp1:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x19
   263  000079                     	ds	1
   264  00007A                     ?_ftoa:
   265                           	opt stack 0
   266  00007A                     ftoa@x:
   267                           	opt stack 0
   268  00007A                     Read_Temperature@temperature:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0x1A
   272  00007A                     	ds	3
   273  00007D                     ftoa@str:
   274                           	opt stack 0
   275  00007D                     Read_Temperature@lsb:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x1D
   279  00007D                     	ds	2
   280  00007F                     ftoa@prec:
   281                           	opt stack 0
   282  00007F                     Read_Temperature@result:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x1F
   286  00007F                     	ds	1
   287  000080                     ftoa@format:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x20
   291  000080                     	ds	1
   292  000081                     ??_ftoa:
   293  000081                     Read_Temperature@i:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x21
   297  000081                     	ds	2
   298  000083                     ftoa@start:
   299                           	opt stack 0
   300  000083                     Read_Temperature@msb:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x23
   304  000083                     	ds	2
   305  000085                     ftoa@t:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x25
   309  000085                     	ds	1
   310  000086                     ftoa@y:
   311                           	opt stack 0
   312                           
   313                           ; 3 bytes @ 0x26
   314  000086                     	ds	3
   315  000089                     ftoa@b:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x29
   319  000089                     	ds	3
   320  00008C                     ftoa@i:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x2C
   324  00008C                     	ds	2
   325  00008E                     ftoa@fstyle:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x2E
   329  00008E                     	ds	2
   330  000090                     ftoa@ndig:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x30
   334  000090                     	ds	2
   335  000092                     ftoa@k:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x32
   339  000092                     	ds	2
   340  000094                     ftoa@ie:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x34
   344  000094                     	ds	2
   345  000096                     ??_main:
   346                           
   347                           ; 0 bytes @ 0x36
   348  000096                     	ds	2
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ??_BASSEPRIORITEInterrupt:
   360  000001                     
   361                           ; 2 bytes @ 0x0
   362  000001                     	ds	17
   363  000012                     ??_HAUTEPRIORITEInterrupt:
   364                           
   365                           ; 0 bytes @ 0x11
   366  000012                     	ds	15
   367  000021                     ?_WriteCmdXLCD:
   368                           	opt stack 0
   369  000021                     ?_Delay10KTCYx:
   370                           	opt stack 0
   371  000021                     ?_SetDDRamAddr:
   372                           	opt stack 0
   373  000021                     ?_WriteDataXLCD:
   374                           	opt stack 0
   375  000021                     ?_Delay10TCYx:
   376                           	opt stack 0
   377  000021                     ?_sendToUsart:
   378                           	opt stack 0
   379  000021                     ?___ftge:
   380                           	opt stack 0
   381  000021                     ?___awdiv:
   382                           	opt stack 0
   383  000021                     ?___wmul:
   384                           	opt stack 0
   385  000021                     ?___ftpack:
   386                           	opt stack 0
   387  000021                     ?___ftneg:
   388                           	opt stack 0
   389  000021                     ?___fttol:
   390                           	opt stack 0
   391  000021                     SetDDRamAddr@DDaddr:
   392                           	opt stack 0
   393  000021                     WriteCmdXLCD@cmd:
   394                           	opt stack 0
   395  000021                     WriteDataXLCD@data:
   396                           	opt stack 0
   397  000021                     sendToUsart@lettre:
   398                           	opt stack 0
   399  000021                     Delay10KTCYx@unit:
   400                           	opt stack 0
   401  000021                     Delay10TCYx@unit:
   402                           	opt stack 0
   403  000021                     ___awdiv@dividend:
   404                           	opt stack 0
   405  000021                     ___wmul@multiplier:
   406                           	opt stack 0
   407  000021                     ___ftpack@arg:
   408                           	opt stack 0
   409  000021                     ___ftge@ff1:
   410                           	opt stack 0
   411  000021                     ___ftneg@f1:
   412                           	opt stack 0
   413  000021                     ___fttol@f1:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0x20
   417  000021                     	ds	1
   418  000022                     ??_Delay10KTCYx:
   419  000022                     ??_SetDDRamAddr:
   420  000022                     ??_envoyerMessage:
   421  000022                     ?_putrsXLCD:
   422                           	opt stack 0
   423  000022                     ?_putsXLCD:
   424                           	opt stack 0
   425  000022                     ??_OWInit:
   426  000022                     ?_OWWriteBit:
   427                           	opt stack 0
   428  000022                     ?_OWReadBit:
   429                           	opt stack 0
   430  000022                     putrsXLCD@buffer:
   431                           	opt stack 0
   432  000022                     putsXLCD@buffer:
   433                           	opt stack 0
   434  000022                     OWWriteBit@bite:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x21
   438  000022                     	ds	1
   439  000023                     ??_DelayPORXLCD:
   440  000023                     OWInit@state:
   441                           	opt stack 0
   442  000023                     ___awdiv@divisor:
   443                           	opt stack 0
   444  000023                     ___wmul@multiplicand:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x22
   448  000023                     	ds	1
   449  000024                     ??_OWWriteBit:
   450  000024                     ??_OWReadBit:
   451  000024                     ___ftpack@exp:
   452                           	opt stack 0
   453  000024                     ___ftge@ff2:
   454                           	opt stack 0
   455                           
   456                           ; 3 bytes @ 0x23
   457  000024                     	ds	1
   458  000025                     ?_OpenXLCD:
   459                           	opt stack 0
   460  000025                     ?_OWWriteByte:
   461                           	opt stack 0
   462  000025                     ??___awdiv:
   463  000025                     ??___fttol:
   464  000025                     OpenXLCD@lcdtype:
   465                           	opt stack 0
   466  000025                     ___ftpack@sign:
   467                           	opt stack 0
   468  000025                     OWReadBit@bite:
   469                           	opt stack 0
   470  000025                     OWWriteByte@byte:
   471                           	opt stack 0
   472  000025                     ___wmul@product:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x24
   476  000025                     	ds	1
   477  000026                     ??___ftpack:
   478  000026                     ??_OpenXLCD:
   479  000026                     ___awdiv@counter:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x25
   483  000026                     	ds	1
   484  000027                     ??___ftge:
   485  000027                     ?_OWReadByte:
   486                           	opt stack 0
   487  000027                     ___awdiv@sign:
   488                           	opt stack 0
   489  000027                     OWWriteByte@i:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x26
   493  000027                     	ds	1
   494  000028                     ___awdiv@quotient:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x27
   498  000028                     	ds	1
   499  000029                     ?___awtoft:
   500                           	opt stack 0
   501  000029                     OWReadByte@byte:
   502                           	opt stack 0
   503  000029                     ___awtoft@c:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x28
   507  000029                     	ds	1
   508  00002A                     ___fttol@sign1:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x29
   512  00002A                     	ds	1
   513  00002B                     OWReadByte@i:
   514                           	opt stack 0
   515  00002B                     ___fttol@lval:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x2A
   519  00002B                     	ds	1
   520  00002C                     ??___awtoft:
   521                           
   522                           ; 0 bytes @ 0x2B
   523  00002C                     	ds	1
   524  00002D                     ___awtoft@sign:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x2C
   528  00002D                     	ds	1
   529  00002E                     ??___ftmul:
   530                           
   531                           ; 0 bytes @ 0x2D
   532  00002E                     	ds	1
   533  00002F                     ___fttol@exp1:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x2E
   537  00002F                     	ds	4
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 40 in file "C:/Users/etu20261/Desktop/1wire+usart/Main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;		None               void
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:        2 bytes
   569 ;; Hardware stack levels required when called:    6
   570 ;; This function calls:
   571 ;;		_ftoa
   572 ;;		_BusyXLCD
   573 ;;		_OpenXLCD
   574 ;;		_WriteCmdXLCD
   575 ;;		_Delay10KTCYx
   576 ;;		_SetDDRamAddr
   577 ;;		_putrsXLCD
   578 ;;		_putsXLCD
   579 ;;		_initBout
   580 ;;		_initLCD
   581 ;;		_Convert_Temperature
   582 ;;		_Read_Temperature
   583 ;;		_envoyerMessage
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text0
   590  001A48                     __ptext0:
   591                           	opt stack 0
   592  001A48                     _main:
   593                           	opt stack 25
   594                           
   595                           ;Main.c: 42: OSCCONbits.IRCF=0b111;
   596                           
   597                           ;incstack = 0
   598                           ;incstack = 0
   599  001A48  88D3               	bsf	4051,4,c	;volatile
   600  001A4A  8AD3               	bsf	4051,5,c	;volatile
   601  001A4C  8CD3               	bsf	4051,6,c	;volatile
   602                           
   603                           ;Main.c: 45: ANSELA=0;
   604  001A4E  0E00               	movlw	0
   605  001A50  010F               	movlb	15	; () banked
   606  001A52  010F               	movlb	15	; () banked
   607  001A54  6F38               	movwf	56,b	;volatile
   608                           
   609                           ;Main.c: 46: ANSELB=0;
   610  001A56  0E00               	movlw	0
   611  001A58  010F               	movlb	15	; () banked
   612  001A5A  010F               	movlb	15	; () banked
   613  001A5C  6F39               	movwf	57,b	;volatile
   614                           
   615                           ;Main.c: 47: ANSELC=0;
   616  001A5E  0E00               	movlw	0
   617  001A60  010F               	movlb	15	; () banked
   618  001A62  010F               	movlb	15	; () banked
   619  001A64  6F3A               	movwf	58,b	;volatile
   620                           
   621                           ;Main.c: 48: ANSELD=0;
   622  001A66  0E00               	movlw	0
   623  001A68  010F               	movlb	15	; () banked
   624  001A6A  010F               	movlb	15	; () banked
   625  001A6C  6F3B               	movwf	59,b	;volatile
   626                           
   627                           ;Main.c: 49: ANSELE=0;
   628  001A6E  0E00               	movlw	0
   629  001A70  010F               	movlb	15	; () banked
   630  001A72  010F               	movlb	15	; () banked
   631  001A74  6F3C               	movwf	60,b	;volatile
   632                           
   633                           ; BSR set to: 15
   634                           ;Main.c: 50: ANSELDbits.ANSD4=0;
   635  001A76  010F               	movlb	15	; () banked
   636  001A78  010F               	movlb	15	; () banked
   637  001A7A  993B               	bcf	59,4,b	;volatile
   638                           
   639                           ; BSR set to: 15
   640                           ;Main.c: 51: ANSELCbits.ANSC6=0;
   641  001A7C  010F               	movlb	15	; () banked
   642  001A7E  010F               	movlb	15	; () banked
   643  001A80  9D3A               	bcf	58,6,b	;volatile
   644                           
   645                           ; BSR set to: 15
   646                           ;Main.c: 52: ANSELCbits.ANSC7=0;
   647  001A82  010F               	movlb	15	; () banked
   648  001A84  010F               	movlb	15	; () banked
   649  001A86  9F3A               	bcf	58,7,b	;volatile
   650                           
   651                           ; BSR set to: 15
   652                           ;Main.c: 56: TRISBbits.TRISB1=1;
   653  001A88  8293               	bsf	3987,1,c	;volatile
   654                           
   655                           ; BSR set to: 15
   656                           ;Main.c: 57: TRISEbits.RE0=1;
   657  001A8A  8096               	bsf	3990,0,c	;volatile
   658                           
   659                           ; BSR set to: 15
   660                           ;Main.c: 58: TRISEbits.RE1=1;
   661  001A8C  8296               	bsf	3990,1,c	;volatile
   662                           
   663                           ; BSR set to: 15
   664                           ;Main.c: 59: TRISEbits.RE2=1;
   665  001A8E  8496               	bsf	3990,2,c	;volatile
   666                           
   667                           ; BSR set to: 15
   668                           ;Main.c: 60: TRISCbits.RC0=1;
   669  001A90  8094               	bsf	3988,0,c	;volatile
   670                           
   671                           ; BSR set to: 15
   672                           ;Main.c: 61: TRISCbits.RC1=1;
   673  001A92  8294               	bsf	3988,1,c	;volatile
   674                           
   675                           ; BSR set to: 15
   676                           ;Main.c: 62: TRISCbits.RC2=0;
   677  001A94  9494               	bcf	3988,2,c	;volatile
   678                           
   679                           ; BSR set to: 15
   680                           ;Main.c: 63: TRISBbits.RB4=0;
   681  001A96  9893               	bcf	3987,4,c	;volatile
   682                           
   683                           ; BSR set to: 15
   684                           ;Main.c: 64: TRISCbits.RC6=1;
   685  001A98  8C94               	bsf	3988,6,c	;volatile
   686                           
   687                           ; BSR set to: 15
   688                           ;Main.c: 65: TRISCbits.RC7=1;
   689  001A9A  8E94               	bsf	3988,7,c	;volatile
   690                           
   691                           ; BSR set to: 15
   692                           ;Main.c: 66: TRISDbits.RD4=1;
   693  001A9C  8895               	bsf	3989,4,c	;volatile
   694                           
   695                           ; BSR set to: 15
   696                           ;Main.c: 67: TRISBbits.RB0=1;
   697  001A9E  8093               	bsf	3987,0,c	;volatile
   698                           
   699                           ; BSR set to: 15
   700                           ;Main.c: 68: TRISBbits.TRISB5=1;
   701  001AA0  8A93               	bsf	3987,5,c	;volatile
   702                           
   703                           ; BSR set to: 15
   704                           ;Main.c: 71: PORTCbits.RC2=0;
   705  001AA2  9482               	bcf	3970,2,c	;volatile
   706                           
   707                           ; BSR set to: 15
   708                           ;Main.c: 75: INTCONbits.GIE=1;
   709  001AA4  8EF2               	bsf	intcon,7,c	;volatile
   710                           
   711                           ; BSR set to: 15
   712                           ;Main.c: 76: INTCONbits.PEIE=1;
   713  001AA6  8CF2               	bsf	intcon,6,c	;volatile
   714                           
   715                           ; BSR set to: 15
   716                           ;Main.c: 77: RCONbits.IPEN=1;
   717  001AA8  8ED0               	bsf	4048,7,c	;volatile
   718                           
   719                           ;Main.c: 78: T1CONbits.TMR1CS=0b00;
   720  001AAA  0E3F               	movlw	-193
   721  001AAC  16CD               	andwf	4045,f,c	;volatile
   722                           
   723                           ;Main.c: 79: T1CONbits.T1CKPS=0b01;
   724  001AAE  50CD               	movf	4045,w,c	;volatile
   725  001AB0  0BCF               	andlw	-49
   726  001AB2  0910               	iorlw	16
   727  001AB4  6ECD               	movwf	4045,c	;volatile
   728                           
   729                           ; BSR set to: 15
   730                           ;Main.c: 80: T1CONbits.T1SYNC=1;
   731  001AB6  84CD               	bsf	4045,2,c	;volatile
   732                           
   733                           ; BSR set to: 15
   734                           ;Main.c: 81: T1CONbits.TMR1ON=1;
   735  001AB8  80CD               	bsf	4045,0,c	;volatile
   736                           
   737                           ; BSR set to: 15
   738                           ;Main.c: 82: T1GCONbits.TMR1GE=0;
   739  001ABA  9ECC               	bcf	4044,7,c	;volatile
   740                           
   741                           ; BSR set to: 15
   742                           ;Main.c: 83: PIE1bits.TMR1IE=1;
   743  001ABC  809D               	bsf	3997,0,c	;volatile
   744                           
   745                           ; BSR set to: 15
   746                           ;Main.c: 84: PIR1bits.TMR1IF=1;
   747  001ABE  809E               	bsf	3998,0,c	;volatile
   748                           
   749                           ; BSR set to: 15
   750                           ;Main.c: 85: IPR1bits.TMR1IP=1;
   751  001AC0  809F               	bsf	3999,0,c	;volatile
   752                           
   753                           ;Main.c: 86: TMR1H=0x3C;
   754  001AC2  0E3C               	movlw	60
   755  001AC4  6ECF               	movwf	4047,c	;volatile
   756                           
   757                           ;Main.c: 87: TMR1L=0xAF;
   758  001AC6  0EAF               	movlw	175
   759  001AC8  6ECE               	movwf	4046,c	;volatile
   760                           
   761                           ; BSR set to: 15
   762                           ;Main.c: 91: INTCONbits.TMR0IE=1;
   763  001ACA  8AF2               	bsf	intcon,5,c	;volatile
   764                           
   765                           ; BSR set to: 15
   766                           ;Main.c: 92: INTCONbits.TMR0IF=0;
   767  001ACC  94F2               	bcf	intcon,2,c	;volatile
   768                           
   769                           ; BSR set to: 15
   770                           ;Main.c: 93: INTCON2bits.TMR0IP=1;
   771  001ACE  84F1               	bsf	intcon2,2,c	;volatile
   772                           
   773                           ; BSR set to: 15
   774                           ;Main.c: 94: T0CONbits.T08BIT=0;
   775  001AD0  9CD5               	bcf	4053,6,c	;volatile
   776                           
   777                           ; BSR set to: 15
   778                           ;Main.c: 95: T0CONbits.T0CS=0;
   779  001AD2  9AD5               	bcf	4053,5,c	;volatile
   780                           
   781                           ; BSR set to: 15
   782                           ;Main.c: 96: T0CONbits.PSA=0;
   783  001AD4  96D5               	bcf	4053,3,c	;volatile
   784                           
   785                           ;Main.c: 97: T0CONbits.T0PS=0b101;
   786  001AD6  50D5               	movf	4053,w,c	;volatile
   787  001AD8  0BF8               	andlw	-8
   788  001ADA  0905               	iorlw	5
   789  001ADC  6ED5               	movwf	4053,c	;volatile
   790                           
   791                           ; BSR set to: 15
   792                           
   793                           ;Main.c: 98: TMR0H:TMR0L=0x0BDB;
   794  001ADE  0EDB               	movlw	219
   795  001AE0  6ED6               	movwf	4054,c	;volatile
   796                           
   797                           ; BSR set to: 15
   798                           ;Main.c: 99: T0CONbits.TMR0ON=1;
   799  001AE2  8ED5               	bsf	4053,7,c	;volatile
   800                           
   801                           ; BSR set to: 15
   802                           ;Main.c: 103: INTCON2bits.INTEDG0=0;
   803  001AE4  9CF1               	bcf	intcon2,6,c	;volatile
   804                           
   805                           ; BSR set to: 15
   806                           ;Main.c: 104: INTCONbits.INT0E=1;
   807  001AE6  88F2               	bsf	intcon,4,c	;volatile
   808                           
   809                           ; BSR set to: 15
   810                           ;Main.c: 105: INTCONbits.INT0F=0;
   811  001AE8  92F2               	bcf	intcon,1,c	;volatile
   812                           
   813                           ; BSR set to: 15
   814                           ;Main.c: 109: TXSTA1bits.SYNC = 0;
   815  001AEA  98AC               	bcf	4012,4,c	;volatile
   816                           
   817                           ; BSR set to: 15
   818                           ;Main.c: 110: TXSTA1bits.BRGH = 0;
   819  001AEC  94AC               	bcf	4012,2,c	;volatile
   820                           
   821                           ; BSR set to: 15
   822                           ;Main.c: 111: BAUDCON1bits.BRG16 = 0;
   823  001AEE  96B8               	bcf	4024,3,c	;volatile
   824                           
   825                           ; BSR set to: 15
   826                           ;Main.c: 112: TXSTA1bits.TXEN = 1;
   827  001AF0  8AAC               	bsf	4012,5,c	;volatile
   828                           
   829                           ; BSR set to: 15
   830                           ;Main.c: 113: TXSTA1bits.TX9 = 0;
   831  001AF2  9CAC               	bcf	4012,6,c	;volatile
   832                           
   833                           ;Main.c: 114: SPBRG1 = 25;
   834  001AF4  0E19               	movlw	25
   835  001AF6  6EAF               	movwf	4015,c	;volatile
   836                           
   837                           ; BSR set to: 15
   838                           ;Main.c: 115: RCSTA1bits.SPEN = 1;
   839  001AF8  8EAB               	bsf	4011,7,c	;volatile
   840                           
   841                           ; BSR set to: 15
   842                           ;Main.c: 116: RCSTA1bits.CREN = 1;
   843  001AFA  88AB               	bsf	4011,4,c	;volatile
   844                           
   845                           ; BSR set to: 15
   846                           ;Main.c: 123: initLCD();
   847  001AFC  EC24  F014         	call	_initLCD	;wreg free
   848                           
   849                           ;Main.c: 124: initBout();
   850  001B00  EC1B  F014         	call	_initBout	;wreg free
   851                           
   852                           ;Main.c: 128: OpenXLCD(0b00101100 & 0b00111000);
   853  001B04  0100               	movlb	0	; () banked
   854  001B06  6F96               	movwf	??_main& (0+255),b
   855  001B08  0E28               	movlw	40
   856  001B0A  6E25               	movwf	?_OpenXLCD,c
   857  001B0C  0100               	movlb	0	; () banked
   858  001B0E  5196               	movf	??_main& (0+255),w,b
   859  001B10  EC64  F010         	call	_OpenXLCD	;wreg free
   860  001B14                     l3476:
   861  001B14  EC40  F013         	call	_BusyXLCD	;wreg free
   862  001B18  0900               	iorlw	0
   863  001B1A  A4D8               	btfss	status,2,c
   864  001B1C  D7FB               	goto	l3476
   865                           
   866                           ;Main.c: 130: WriteCmdXLCD(0x01 & 0b00001110 & 0b00001101);
   867  001B1E  0100               	movlb	0	; () banked
   868  001B20  6F96               	movwf	??_main& (0+255),b
   869  001B22  0E00               	movlw	0
   870  001B24  6E21               	movwf	?_WriteCmdXLCD,c
   871  001B26  0100               	movlb	0	; () banked
   872  001B28  5196               	movf	??_main& (0+255),w,b
   873  001B2A  EC05  F013         	call	_WriteCmdXLCD	;wreg free
   874                           
   875                           ;Main.c: 131: SetDDRamAddr(0x01);
   876  001B2E  0100               	movlb	0	; () banked
   877  001B30  6F96               	movwf	??_main& (0+255),b
   878  001B32  0E01               	movlw	1
   879  001B34  6E21               	movwf	?_SetDDRamAddr,c
   880  001B36  0100               	movlb	0	; () banked
   881  001B38  5196               	movf	??_main& (0+255),w,b
   882  001B3A  EC10  F012         	call	_SetDDRamAddr	;wreg free
   883  001B3E                     l3480:
   884  001B3E  EC40  F013         	call	_BusyXLCD	;wreg free
   885  001B42  0900               	iorlw	0
   886  001B44  A4D8               	btfss	status,2,c
   887  001B46  D7FB               	goto	l3480
   888                           
   889                           ;Main.c: 133: putrsXLCD("Hello");
   890  001B48  0E10               	movlw	high STR_1
   891  001B4A  6E23               	movwf	?_putrsXLCD+1,c
   892  001B4C  0E00               	movlw	low STR_1
   893  001B4E  6E22               	movwf	?_putrsXLCD,c
   894  001B50  EC7A  F013         	call	_putrsXLCD	;wreg free
   895                           
   896                           ;Main.c: 134: Convert_Temperature();
   897  001B54  EC01  F014         	call	_Convert_Temperature	;wreg free
   898                           
   899                           ;Main.c: 135: Delay10KTCYx(200);
   900  001B58  0100               	movlb	0	; () banked
   901  001B5A  6F96               	movwf	??_main& (0+255),b
   902  001B5C  0EC8               	movlw	200
   903  001B5E  6E21               	movwf	?_Delay10KTCYx,c
   904  001B60  0100               	movlb	0	; () banked
   905  001B62  5196               	movf	??_main& (0+255),w,b
   906  001B64  EC10  F014         	call	_Delay10KTCYx	;wreg free
   907                           
   908                           ;Main.c: 136: Delay10KTCYx(200);
   909  001B68  0100               	movlb	0	; () banked
   910  001B6A  6F96               	movwf	??_main& (0+255),b
   911  001B6C  0EC8               	movlw	200
   912  001B6E  6E21               	movwf	?_Delay10KTCYx,c
   913  001B70  0100               	movlb	0	; () banked
   914  001B72  5196               	movf	??_main& (0+255),w,b
   915  001B74  EC10  F014         	call	_Delay10KTCYx	;wreg free
   916                           
   917                           ;Main.c: 137: temp = Read_Temperature();
   918  001B78  EC4A  F00F         	call	_Read_Temperature	;wreg free
   919  001B7C  C06E  F035         	movff	?_Read_Temperature+2,_temp+2	;volatile
   920  001B80  C06D  F034         	movff	?_Read_Temperature+1,_temp+1	;volatile
   921  001B84  C06C  F033         	movff	?_Read_Temperature,_temp	;volatile
   922                           
   923                           ;Main.c: 138: ftoa (temp, &capteur[0], 2, 'f');
   924  001B88  C033  F07A         	movff	_temp,?_ftoa	;volatile
   925  001B8C  C034  F07B         	movff	_temp+1,?_ftoa+1	;volatile
   926  001B90  C035  F07C         	movff	_temp+2,?_ftoa+2	;volatile
   927  001B94  0E00               	movlw	high _capteur	;volatile
   928  001B96  0100               	movlb	0	; () banked
   929  001B98  0100               	movlb	0	; () banked
   930  001B9A  6F7E               	movwf	(?_ftoa+4)& (0+255),b
   931  001B9C  0E3A               	movlw	low _capteur	;volatile
   932  001B9E  0100               	movlb	0	; () banked
   933  001BA0  6F7D               	movwf	(?_ftoa+3)& (0+255),b
   934  001BA2  0100               	movlb	0	; () banked
   935  001BA4  6F96               	movwf	??_main& (0+255),b
   936  001BA6  0E02               	movlw	2
   937  001BA8  0100               	movlb	0	; () banked
   938  001BAA  0100               	movlb	0	; () banked
   939  001BAC  6F7F               	movwf	(?_ftoa+5)& (0+255),b
   940  001BAE  0100               	movlb	0	; () banked
   941  001BB0  5196               	movf	??_main& (0+255),w,b
   942  001BB2  0100               	movlb	0	; () banked
   943  001BB4  6F97               	movwf	(??_main+1)& (0+255),b
   944  001BB6  0E66               	movlw	102
   945  001BB8  0100               	movlb	0	; () banked
   946  001BBA  0100               	movlb	0	; () banked
   947  001BBC  6F80               	movwf	(?_ftoa+6)& (0+255),b
   948  001BBE  0100               	movlb	0	; () banked
   949  001BC0  5197               	movf	(??_main+1)& (0+255),w,b
   950  001BC2  EC04  F008         	call	_ftoa	;wreg free
   951  001BC6                     l3494:
   952  001BC6  EC40  F013         	call	_BusyXLCD	;wreg free
   953  001BCA  0900               	iorlw	0
   954  001BCC  A4D8               	btfss	status,2,c
   955  001BCE  D7FB               	goto	l3494
   956                           
   957                           ;Main.c: 140: SetDDRamAddr(0x40);
   958  001BD0  0100               	movlb	0	; () banked
   959  001BD2  6F96               	movwf	??_main& (0+255),b
   960  001BD4  0E40               	movlw	64
   961  001BD6  6E21               	movwf	?_SetDDRamAddr,c
   962  001BD8  0100               	movlb	0	; () banked
   963  001BDA  5196               	movf	??_main& (0+255),w,b
   964  001BDC  EC10  F012         	call	_SetDDRamAddr	;wreg free
   965  001BE0                     l3498:
   966  001BE0  EC40  F013         	call	_BusyXLCD	;wreg free
   967  001BE4  0900               	iorlw	0
   968  001BE6  A4D8               	btfss	status,2,c
   969  001BE8  D7FB               	goto	l3498
   970                           
   971                           ;Main.c: 142: putsXLCD(&capteur);
   972  001BEA  0E00               	movlw	high _capteur	;volatile
   973  001BEC  6E23               	movwf	?_putsXLCD+1,c
   974  001BEE  0E3A               	movlw	low _capteur	;volatile
   975  001BF0  6E22               	movwf	?_putsXLCD,c
   976  001BF2  ECAF  F013         	call	_putsXLCD	;wreg free
   977  001BF6                     l3502:
   978                           
   979                           ;Main.c: 147: if (bouton == 'g'){
   980  001BF6  503F               	movf	_bouton,w,c
   981  001BF8  0A67               	xorlw	103
   982  001BFA  B4D8               	btfsc	status,2,c
   983                           
   984                           ;Main.c: 148: envoyerMessage();
   985  001BFC  ECC8  F012         	call	_envoyerMessage	;wreg free
   986                           
   987                           ;Main.c: 150: }
   988                           ;Main.c: 152: if (flagtimer){
   989  001C00  5037               	movf	_flagtimer+1,w,c	;volatile
   990  001C02  1036               	iorwf	_flagtimer,w,c	;volatile
   991  001C04  B4D8               	btfsc	status,2,c
   992  001C06  D7F7               	goto	l3502
   993                           
   994                           ;Main.c: 153: flagtimer=0;
   995  001C08  0E00               	movlw	0
   996  001C0A  6E37               	movwf	_flagtimer+1,c	;volatile
   997  001C0C  0E00               	movlw	0
   998  001C0E  6E36               	movwf	_flagtimer,c	;volatile
   999                           
  1000                           ;Main.c: 154: if (i>4){
  1001  001C10  5039               	movf	_i+1,w,c	;volatile
  1002  001C12  0A80               	xorlw	128
  1003  001C14  0F80               	addlw	-128
  1004  001C16  0E05               	movlw	5
  1005  001C18  B4D8               	btfsc	status,2,c
  1006  001C1A  5C38               	subwf	_i,w,c	;volatile
  1007  001C1C  A0D8               	btfss	status,0,c
  1008  001C1E  D7EB               	goto	l3502
  1009                           
  1010                           ;Main.c: 155: temp = Read_Temperature();
  1011  001C20  EC4A  F00F         	call	_Read_Temperature	;wreg free
  1012  001C24  C06E  F035         	movff	?_Read_Temperature+2,_temp+2	;volatile
  1013  001C28  C06D  F034         	movff	?_Read_Temperature+1,_temp+1	;volatile
  1014  001C2C  C06C  F033         	movff	?_Read_Temperature,_temp	;volatile
  1015                           
  1016                           ;Main.c: 156: Convert_Temperature();
  1017  001C30  EC01  F014         	call	_Convert_Temperature	;wreg free
  1018                           
  1019                           ;Main.c: 157: ftoa (temp, &capteur[0], 2, 'f');
  1020  001C34  C033  F07A         	movff	_temp,?_ftoa	;volatile
  1021  001C38  C034  F07B         	movff	_temp+1,?_ftoa+1	;volatile
  1022  001C3C  C035  F07C         	movff	_temp+2,?_ftoa+2	;volatile
  1023  001C40  0E00               	movlw	high _capteur	;volatile
  1024  001C42  0100               	movlb	0	; () banked
  1025  001C44  0100               	movlb	0	; () banked
  1026  001C46  6F7E               	movwf	(?_ftoa+4)& (0+255),b
  1027  001C48  0E3A               	movlw	low _capteur	;volatile
  1028  001C4A  0100               	movlb	0	; () banked
  1029  001C4C  6F7D               	movwf	(?_ftoa+3)& (0+255),b
  1030  001C4E  0100               	movlb	0	; () banked
  1031  001C50  6F96               	movwf	??_main& (0+255),b
  1032  001C52  0E02               	movlw	2
  1033  001C54  0100               	movlb	0	; () banked
  1034  001C56  0100               	movlb	0	; () banked
  1035  001C58  6F7F               	movwf	(?_ftoa+5)& (0+255),b
  1036  001C5A  0100               	movlb	0	; () banked
  1037  001C5C  5196               	movf	??_main& (0+255),w,b
  1038  001C5E  0100               	movlb	0	; () banked
  1039  001C60  6F97               	movwf	(??_main+1)& (0+255),b
  1040  001C62  0E66               	movlw	102
  1041  001C64  0100               	movlb	0	; () banked
  1042  001C66  0100               	movlb	0	; () banked
  1043  001C68  6F80               	movwf	(?_ftoa+6)& (0+255),b
  1044  001C6A  0100               	movlb	0	; () banked
  1045  001C6C  5197               	movf	(??_main+1)& (0+255),w,b
  1046  001C6E  EC04  F008         	call	_ftoa	;wreg free
  1047  001C72                     l3518:
  1048  001C72  EC40  F013         	call	_BusyXLCD	;wreg free
  1049  001C76  0900               	iorlw	0
  1050  001C78  A4D8               	btfss	status,2,c
  1051  001C7A  D7FB               	goto	l3518
  1052                           
  1053                           ;Main.c: 159: SetDDRamAddr(0x40);
  1054  001C7C  0100               	movlb	0	; () banked
  1055  001C7E  6F96               	movwf	??_main& (0+255),b
  1056  001C80  0E40               	movlw	64
  1057  001C82  6E21               	movwf	?_SetDDRamAddr,c
  1058  001C84  0100               	movlb	0	; () banked
  1059  001C86  5196               	movf	??_main& (0+255),w,b
  1060  001C88  EC10  F012         	call	_SetDDRamAddr	;wreg free
  1061  001C8C                     l3522:
  1062  001C8C  EC40  F013         	call	_BusyXLCD	;wreg free
  1063  001C90  0900               	iorlw	0
  1064  001C92  A4D8               	btfss	status,2,c
  1065  001C94  D7FB               	goto	l3522
  1066                           
  1067                           ;Main.c: 161: putsXLCD(&capteur);
  1068  001C96  0E00               	movlw	high _capteur	;volatile
  1069  001C98  6E23               	movwf	?_putsXLCD+1,c
  1070  001C9A  0E3A               	movlw	low _capteur	;volatile
  1071  001C9C  6E22               	movwf	?_putsXLCD,c
  1072  001C9E  ECAF  F013         	call	_putsXLCD	;wreg free
  1073                           
  1074                           ;Main.c: 162: PORTCbits.RC2=0;
  1075  001CA2  9482               	bcf	3970,2,c	;volatile
  1076                           
  1077                           ;Main.c: 163: i=0;
  1078  001CA4  0E00               	movlw	0
  1079  001CA6  6E39               	movwf	_i+1,c	;volatile
  1080  001CA8  0E00               	movlw	0
  1081  001CAA  6E38               	movwf	_i,c	;volatile
  1082  001CAC  D7A4               	goto	l3502
  1083  001CAE                     __end_of_main:
  1084                           	opt stack 0
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           tblptrl	equ	0xFF6
  1088                           tablat	equ	0xFF5
  1089                           intcon	equ	0xFF2
  1090                           intcon2	equ	0xFF1
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _envoyerMessage *****************
  1096 ;; Defined at:
  1097 ;;		line 194 in file "C:/Users/etu20261/Desktop/1wire+usart/Main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    3
  1118 ;; This function calls:
  1119 ;;		_sendToUsart
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text1
  1126  002590                     __ptext1:
  1127                           	opt stack 0
  1128  002590                     _envoyerMessage:
  1129                           	opt stack 27
  1130                           
  1131                           ;Main.c: 195: sendToUsart(capteur[0]);
  1132                           
  1133                           ;incstack = 0
  1134                           ;incstack = 0
  1135  002590  C03A  F021         	movff	_capteur,?_sendToUsart	;volatile
  1136  002594  EC3A  F014         	call	_sendToUsart	;wreg free
  1137                           
  1138                           ;Main.c: 196: sendToUsart(capteur[1]);
  1139  002598  C03B  F021         	movff	_capteur+1,?_sendToUsart	;volatile
  1140  00259C  EC3A  F014         	call	_sendToUsart	;wreg free
  1141                           
  1142                           ;Main.c: 197: sendToUsart(capteur[2]);
  1143  0025A0  C03C  F021         	movff	_capteur+2,?_sendToUsart	;volatile
  1144  0025A4  EC3A  F014         	call	_sendToUsart	;wreg free
  1145                           
  1146                           ;Main.c: 198: sendToUsart(capteur[3]);
  1147  0025A8  C03D  F021         	movff	_capteur+3,?_sendToUsart	;volatile
  1148  0025AC  EC3A  F014         	call	_sendToUsart	;wreg free
  1149                           
  1150                           ;Main.c: 199: sendToUsart(capteur[4]);
  1151  0025B0  C03E  F021         	movff	_capteur+4,?_sendToUsart	;volatile
  1152  0025B4  EC3A  F014         	call	_sendToUsart	;wreg free
  1153                           
  1154                           ;Main.c: 200: sendToUsart(0b00001010);
  1155  0025B8  6E22               	movwf	??_envoyerMessage& (0+255),c
  1156  0025BA  0E0A               	movlw	10
  1157  0025BC  6E21               	movwf	?_sendToUsart,c
  1158  0025BE  5022               	movf	??_envoyerMessage& (0+255),w,c
  1159  0025C0  EC3A  F014         	call	_sendToUsart	;wreg free
  1160                           
  1161                           ;Main.c: 201: bouton = 'n';
  1162  0025C4  6E22               	movwf	??_envoyerMessage& (0+255),c
  1163  0025C6  0E6E               	movlw	110
  1164  0025C8  6E3F               	movwf	_bouton,c
  1165  0025CA  5022               	movf	??_envoyerMessage& (0+255),w,c
  1166  0025CC  0012               	return	
  1167  0025CE                     __end_of_envoyerMessage:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           intcon	equ	0xFF2
  1174                           intcon2	equ	0xFF1
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _sendToUsart *****************
  1180 ;; Defined at:
  1181 ;;		line 204 in file "C:/Users/etu20261/Desktop/1wire+usart/Main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  lettre          1   32[COMRAM] unsigned char 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;		None               void
  1188 ;; Registers used:
  1189 ;;		None
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;Total ram usage:        1 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    2
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_envoyerMessage
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text2
  1210  002874                     __ptext2:
  1211                           	opt stack 0
  1212  002874                     _sendToUsart:
  1213                           	opt stack 27
  1214  002874                     l413:
  1215  002874  A2AC               	btfss	4012,1,c	;volatile
  1216  002876  D7FE               	goto	l413
  1217                           
  1218                           ;Main.c: 206: TXREG1 = lettre;
  1219  002878  C021  FFAD         	movff	sendToUsart@lettre,4013	;volatile
  1220  00287C  0012               	return	
  1221  00287E                     __end_of_sendToUsart:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           intcon	equ	0xFF2
  1228                           intcon2	equ	0xFF1
  1229                           postinc0	equ	0xFEE
  1230                           wreg	equ	0xFE8
  1231                           status	equ	0xFD8
  1232                           
  1233 ;; *************** function _Read_Temperature *****************
  1234 ;; Defined at:
  1235 ;;		line 128 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  scratchpad     10   16[BANK0 ] unsigned char [10]
  1240 ;;  temperature     3   26[BANK0 ] float 
  1241 ;;  msb             2   35[BANK0 ] int 
  1242 ;;  i               2   33[BANK0 ] int 
  1243 ;;  result          2   31[BANK0 ] int 
  1244 ;;  lsb             2   29[BANK0 ] int 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  3   12[BANK0 ] float 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:       25 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    5
  1261 ;; This function calls:
  1262 ;;		_OWInit
  1263 ;;		_OWWriteByte
  1264 ;;		_OWReadByte
  1265 ;;		___ftmul
  1266 ;;		___awtoft
  1267 ;;		___wmul
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text3
  1274  001E94                     __ptext3:
  1275                           	opt stack 0
  1276  001E94                     _Read_Temperature:
  1277                           	opt stack 25
  1278                           
  1279                           ;1wire.c: 130: unsigned char scratchpad[10];
  1280                           ;1wire.c: 131: int i, msb, lsb, result;
  1281                           ;1wire.c: 132: float temperature;
  1282                           ;1wire.c: 135: OWInit();
  1283                           
  1284                           ;incstack = 0
  1285                           ;incstack = 0
  1286  001E94  EC23  F013         	call	_OWInit	;wreg free
  1287                           
  1288                           ;1wire.c: 136: OWWriteByte(0xCC);
  1289  001E98  0E00               	movlw	0
  1290  001E9A  6E26               	movwf	?_OWWriteByte+1,c
  1291  001E9C  0ECC               	movlw	204
  1292  001E9E  6E25               	movwf	?_OWWriteByte,c
  1293  001EA0  EC95  F013         	call	_OWWriteByte	;wreg free
  1294                           
  1295                           ;1wire.c: 137: OWWriteByte(0xBE);
  1296  001EA4  0E00               	movlw	0
  1297  001EA6  6E26               	movwf	?_OWWriteByte+1,c
  1298  001EA8  0EBE               	movlw	190
  1299  001EAA  6E25               	movwf	?_OWWriteByte,c
  1300  001EAC  EC95  F013         	call	_OWWriteByte	;wreg free
  1301                           
  1302                           ;1wire.c: 139: for (i = 0; i < 9; i++)
  1303  001EB0  0E00               	movlw	0
  1304  001EB2  0100               	movlb	0	; () banked
  1305  001EB4  0100               	movlb	0	; () banked
  1306  001EB6  6F82               	movwf	(Read_Temperature@i+1)& (0+255),b
  1307  001EB8  0E00               	movlw	0
  1308  001EBA  0100               	movlb	0	; () banked
  1309  001EBC  6F81               	movwf	Read_Temperature@i& (0+255),b
  1310  001EBE                     
  1311                           ; BSR set to: 0
  1312  001EBE  0100               	movlb	0	; () banked
  1313  001EC0  0100               	movlb	0	; () banked
  1314  001EC2  5182               	movf	(Read_Temperature@i+1)& (0+255),w,b
  1315  001EC4  0A80               	xorlw	128
  1316  001EC6  0F80               	addlw	-128
  1317  001EC8  0E09               	movlw	9
  1318  001ECA  B4D8               	btfsc	status,2,c
  1319  001ECC  5D81               	subwf	Read_Temperature@i& (0+255),w,b
  1320  001ECE  B0D8               	btfsc	status,0,c
  1321  001ED0  D015               	goto	l3362
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;1wire.c: 140: scratchpad[i] = OWReadByte();
  1325                           
  1326                           ; BSR set to: 0
  1327                           
  1328                           ; BSR set to: 0
  1329  001ED2  0100               	movlb	0	; () banked
  1330  001ED4  0E70               	movlw	low Read_Temperature@scratchpad
  1331  001ED6  0100               	movlb	0	; () banked
  1332  001ED8  0100               	movlb	0	; () banked
  1333  001EDA  2581               	addwf	Read_Temperature@i& (0+255),w,b
  1334  001EDC  6ED9               	movwf	fsr2l,c
  1335  001EDE  0100               	movlb	0	; () banked
  1336  001EE0  0E00               	movlw	high Read_Temperature@scratchpad
  1337  001EE2  0100               	movlb	0	; () banked
  1338  001EE4  0100               	movlb	0	; () banked
  1339  001EE6  2182               	addwfc	(Read_Temperature@i+1)& (0+255),w,b
  1340  001EE8  6EDA               	movwf	fsr2h,c
  1341  001EEA  ECA7  F012         	call	_OWReadByte	;wreg free
  1342  001EEE  5027               	movf	?_OWReadByte,w,c
  1343  001EF0  6EDF               	movwf	indf2,c
  1344  001EF2  0100               	movlb	0	; () banked
  1345  001EF4  0100               	movlb	0	; () banked
  1346  001EF6  4B81               	infsnz	Read_Temperature@i& (0+255),f,b
  1347  001EF8  2B82               	incf	(Read_Temperature@i+1)& (0+255),f,b
  1348  001EFA  D7E1               	goto	L1
  1349  001EFC                     l3362:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;1wire.c: 142: msb = scratchpad[1] & 0x7;
  1353  001EFC  C071  F06F         	movff	Read_Temperature@scratchpad+1,??_Read_Temperature
  1354  001F00  0E07               	movlw	7
  1355  001F02  0100               	movlb	0	; () banked
  1356  001F04  176F               	andwf	??_Read_Temperature& (0+255),f,b
  1357  001F06  0100               	movlb	0	; () banked
  1358  001F08  516F               	movf	??_Read_Temperature& (0+255),w,b
  1359  001F0A  0100               	movlb	0	; () banked
  1360  001F0C  0100               	movlb	0	; () banked
  1361  001F0E  6F83               	movwf	Read_Temperature@msb& (0+255),b
  1362  001F10  0100               	movlb	0	; () banked
  1363  001F12  6B84               	clrf	(Read_Temperature@msb+1)& (0+255),b
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;1wire.c: 143: msb = msb << 8;
  1367  001F14  0100               	movlb	0	; () banked
  1368  001F16  0100               	movlb	0	; () banked
  1369  001F18  5183               	movf	Read_Temperature@msb& (0+255),w,b
  1370  001F1A  0100               	movlb	0	; () banked
  1371  001F1C  0100               	movlb	0	; () banked
  1372  001F1E  6F84               	movwf	(Read_Temperature@msb+1)& (0+255),b
  1373  001F20  0100               	movlb	0	; () banked
  1374  001F22  6B83               	clrf	Read_Temperature@msb& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;1wire.c: 144: lsb = scratchpad[0];
  1378  001F24  0100               	movlb	0	; () banked
  1379  001F26  0100               	movlb	0	; () banked
  1380  001F28  C070  F07D         	movff	Read_Temperature@scratchpad,Read_Temperature@lsb
  1381  001F2C  0100               	movlb	0	; () banked
  1382  001F2E  0100               	movlb	0	; () banked
  1383  001F30  6B7E               	clrf	(Read_Temperature@lsb+1)& (0+255),b
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;1wire.c: 145: result = (msb | lsb);
  1387  001F32  0100               	movlb	0	; () banked
  1388  001F34  0100               	movlb	0	; () banked
  1389  001F36  517D               	movf	Read_Temperature@lsb& (0+255),w,b
  1390  001F38  0100               	movlb	0	; () banked
  1391  001F3A  0100               	movlb	0	; () banked
  1392  001F3C  1183               	iorwf	Read_Temperature@msb& (0+255),w,b
  1393  001F3E  0100               	movlb	0	; () banked
  1394  001F40  0100               	movlb	0	; () banked
  1395  001F42  6F7F               	movwf	Read_Temperature@result& (0+255),b
  1396  001F44  0100               	movlb	0	; () banked
  1397  001F46  0100               	movlb	0	; () banked
  1398  001F48  517E               	movf	(Read_Temperature@lsb+1)& (0+255),w,b
  1399  001F4A  0100               	movlb	0	; () banked
  1400  001F4C  0100               	movlb	0	; () banked
  1401  001F4E  1184               	iorwf	(Read_Temperature@msb+1)& (0+255),w,b
  1402  001F50  0100               	movlb	0	; () banked
  1403  001F52  6F80               	movwf	(Read_Temperature@result+1)& (0+255),b
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;1wire.c: 147: if (msb & 0x80)
  1407  001F54  0100               	movlb	0	; () banked
  1408  001F56  0100               	movlb	0	; () banked
  1409  001F58  AF83               	btfss	Read_Temperature@msb& (0+255),7,b
  1410  001F5A  D00E               	goto	l3374
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;1wire.c: 148: result *= -1;
  1414  001F5C  C07F  F021         	movff	Read_Temperature@result,?___wmul
  1415  001F60  C080  F022         	movff	Read_Temperature@result+1,?___wmul+1
  1416  001F64  0EFF               	movlw	255
  1417  001F66  6E24               	movwf	?___wmul+3,c
  1418  001F68  0EFF               	movlw	255
  1419  001F6A  6E23               	movwf	?___wmul+2,c
  1420  001F6C  EC5D  F013         	call	___wmul	;wreg free
  1421  001F70  C021  F07F         	movff	?___wmul,Read_Temperature@result
  1422  001F74  C022  F080         	movff	?___wmul+1,Read_Temperature@result+1
  1423  001F78                     l3374:
  1424                           
  1425                           ;1wire.c: 150: temperature = (float)result * 0.0625;
  1426  001F78  C07F  F029         	movff	Read_Temperature@result,?___awtoft
  1427  001F7C  C080  F02A         	movff	Read_Temperature@result+1,?___awtoft+1
  1428  001F80  EC85  F012         	call	___awtoft	;wreg free
  1429  001F84  C02B  F062         	movff	?___awtoft+2,?___ftmul+2
  1430  001F88  C02A  F061         	movff	?___awtoft+1,?___ftmul+1
  1431  001F8C  C029  F060         	movff	?___awtoft,?___ftmul
  1432  001F90  0E00               	movlw	0
  1433  001F92  0100               	movlb	0	; () banked
  1434  001F94  0100               	movlb	0	; () banked
  1435  001F96  6F63               	movwf	(?___ftmul+3)& (0+255),b
  1436  001F98  0E80               	movlw	128
  1437  001F9A  0100               	movlb	0	; () banked
  1438  001F9C  0100               	movlb	0	; () banked
  1439  001F9E  6F64               	movwf	(?___ftmul+4)& (0+255),b
  1440  001FA0  0E3D               	movlw	61
  1441  001FA2  0100               	movlb	0	; () banked
  1442  001FA4  0100               	movlb	0	; () banked
  1443  001FA6  6F65               	movwf	(?___ftmul+5)& (0+255),b
  1444  001FA8  EC57  F00E         	call	___ftmul	;wreg free
  1445  001FAC  C062  F07C         	movff	?___ftmul+2,Read_Temperature@temperature+2
  1446  001FB0  C061  F07B         	movff	?___ftmul+1,Read_Temperature@temperature+1
  1447  001FB4  C060  F07A         	movff	?___ftmul,Read_Temperature@temperature
  1448                           
  1449                           ;1wire.c: 152: return temperature;
  1450  001FB8  C07A  F06C         	movff	Read_Temperature@temperature,?_Read_Temperature
  1451  001FBC  C07B  F06D         	movff	Read_Temperature@temperature+1,?_Read_Temperature+1
  1452  001FC0  C07C  F06E         	movff	Read_Temperature@temperature+2,?_Read_Temperature+2
  1453  001FC4  0012               	return	
  1454  001FC6                     __end_of_Read_Temperature:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           tblptrh	equ	0xFF7
  1458                           tblptrl	equ	0xFF6
  1459                           tablat	equ	0xFF5
  1460                           intcon	equ	0xFF2
  1461                           intcon2	equ	0xFF1
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           indf2	equ	0xFDF
  1465                           fsr2h	equ	0xFDA
  1466                           fsr2l	equ	0xFD9
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _OWReadByte *****************
  1470 ;; Defined at:
  1471 ;;		line 97 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  i               2   42[COMRAM] int 
  1476 ;;  byte            2   40[COMRAM] int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   38[COMRAM] int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    4
  1493 ;; This function calls:
  1494 ;;		_OWReadBit
  1495 ;; This function is called by:
  1496 ;;		_Read_Temperature
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text4
  1501  00254E                     __ptext4:
  1502                           	opt stack 0
  1503  00254E                     _OWReadByte:
  1504                           	opt stack 25
  1505                           
  1506                           ;1wire.c: 99: int i, byte = 0;
  1507                           
  1508                           ;incstack = 0
  1509                           ;incstack = 0
  1510  00254E  0E00               	movlw	0
  1511  002550  6E2A               	movwf	OWReadByte@byte+1,c
  1512  002552  0E00               	movlw	0
  1513  002554  6E29               	movwf	OWReadByte@byte,c
  1514                           
  1515                           ;1wire.c: 102: for (i = 0; i < 8; i++)
  1516  002556  0E00               	movlw	0
  1517  002558  6E2C               	movwf	OWReadByte@i+1,c
  1518  00255A  0E00               	movlw	0
  1519  00255C  6E2B               	movwf	OWReadByte@i,c
  1520  00255E  502C               	movf	OWReadByte@i+1,w,c
  1521  002560  0A80               	xorlw	128
  1522  002562  0F80               	addlw	-128
  1523  002564  0E08               	movlw	8
  1524  002566  B4D8               	btfsc	status,2,c
  1525  002568  5C2B               	subwf	OWReadByte@i,w,c
  1526  00256A  B0D8               	btfsc	status,0,c
  1527  00256C  D00C               	goto	l261
  1528                           
  1529                           ;1wire.c: 103: {
  1530                           ;1wire.c: 105: byte >>= 1;
  1531  00256E  342A               	rlcf	OWReadByte@byte+1,w,c
  1532  002570  322A               	rrcf	OWReadByte@byte+1,f,c
  1533  002572  3229               	rrcf	OWReadByte@byte,f,c
  1534                           
  1535                           ;1wire.c: 108: if (OWReadBit())
  1536  002574  EC3B  F012         	call	_OWReadBit	;wreg free
  1537  002578  5023               	movf	?_OWReadBit+1,w,c
  1538  00257A  1022               	iorwf	?_OWReadBit,w,c
  1539  00257C  A4D8               	btfss	status,2,c
  1540                           
  1541                           ;1wire.c: 109: byte |= 0x80;
  1542  00257E  8E29               	bsf	OWReadByte@byte,7,c
  1543  002580  4A2B               	infsnz	OWReadByte@i,f,c
  1544  002582  2A2C               	incf	OWReadByte@i+1,f,c
  1545  002584  D7EC               	goto	L2
  1546  002586                     l261:
  1547                           
  1548                           ;1wire.c: 110: }
  1549                           ;1wire.c: 111: return byte;
  1550  002586  C029  F027         	movff	OWReadByte@byte,?_OWReadByte
  1551  00258A  C02A  F028         	movff	OWReadByte@byte+1,?_OWReadByte+1
  1552  00258E  0012               	return	
  1553  002590                     __end_of_OWReadByte:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           intcon	equ	0xFF2
  1560                           intcon2	equ	0xFF1
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _OWReadBit *****************
  1569 ;; Defined at:
  1570 ;;		line 61 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  bite            2   36[COMRAM] int 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  2   33[COMRAM] int 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    3
  1591 ;; This function calls:
  1592 ;;		_Delay10TCYx
  1593 ;; This function is called by:
  1594 ;;		_OWReadByte
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text5
  1599  002476                     __ptext5:
  1600                           	opt stack 0
  1601  002476                     _OWReadBit:
  1602                           	opt stack 25
  1603                           
  1604                           ;1wire.c: 63: int bite;
  1605                           ;1wire.c: 66: TRISBbits.TRISB5 = 0; PORTBbits.RB5 = 0;
  1606                           
  1607                           ;incstack = 0
  1608                           ;incstack = 0
  1609  002476  9A93               	bcf	3987,5,c	;volatile
  1610  002478  9A81               	bcf	3969,5,c	;volatile
  1611  00247A  F000               	nop		;# 
  1612  00247C  F000               	nop		;# 
  1613  00247E  F000               	nop		;# 
  1614  002480  F000               	nop		;# 
  1615                           
  1616                           ;1wire.c: 70: TRISBbits.TRISB5 = 1;
  1617  002482  8A93               	bsf	3987,5,c	;volatile
  1618                           
  1619                           ;1wire.c: 72: Delay10TCYx(4);
  1620  002484  6E24               	movwf	??_OWReadBit& (0+255),c
  1621  002486  0E04               	movlw	4
  1622  002488  6E21               	movwf	?_Delay10TCYx,c
  1623  00248A  5024               	movf	??_OWReadBit& (0+255),w,c
  1624  00248C  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1625                           
  1626                           ;1wire.c: 74: bite = (int)PORTBbits.RB5;
  1627  002490  3881               	swapf	3969,w,c	;volatile
  1628  002492  32E8               	rrcf	wreg,f,c
  1629  002494  0B01               	andlw	1
  1630  002496  6E24               	movwf	??_OWReadBit& (0+255),c
  1631  002498  5024               	movf	??_OWReadBit,w,c
  1632  00249A  6E25               	movwf	OWReadBit@bite,c
  1633  00249C  6A26               	clrf	OWReadBit@bite+1,c
  1634                           
  1635                           ;1wire.c: 76: Delay10TCYx(24);
  1636  00249E  6E24               	movwf	??_OWReadBit& (0+255),c
  1637  0024A0  0E18               	movlw	24
  1638  0024A2  6E21               	movwf	?_Delay10TCYx,c
  1639  0024A4  5024               	movf	??_OWReadBit& (0+255),w,c
  1640  0024A6  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1641                           
  1642                           ;1wire.c: 78: Delay10TCYx(4);
  1643  0024AA  6E24               	movwf	??_OWReadBit& (0+255),c
  1644  0024AC  0E04               	movlw	4
  1645  0024AE  6E21               	movwf	?_Delay10TCYx,c
  1646  0024B0  5024               	movf	??_OWReadBit& (0+255),w,c
  1647  0024B2  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1648                           
  1649                           ;1wire.c: 80: return bite;
  1650  0024B6  C025  F022         	movff	OWReadBit@bite,?_OWReadBit
  1651  0024BA  C026  F023         	movff	OWReadBit@bite+1,?_OWReadBit+1
  1652  0024BE  0012               	return	
  1653  0024C0                     __end_of_OWReadBit:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           intcon	equ	0xFF2
  1660                           intcon2	equ	0xFF1
  1661                           postinc0	equ	0xFEE
  1662                           wreg	equ	0xFE8
  1663                           indf2	equ	0xFDF
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _Convert_Temperature *****************
  1669 ;; Defined at:
  1670 ;;		line 114 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;		None               void
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    5
  1691 ;; This function calls:
  1692 ;;		_OWInit
  1693 ;;		_OWWriteByte
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text6
  1700  002802                     __ptext6:
  1701                           	opt stack 0
  1702  002802                     _Convert_Temperature:
  1703                           	opt stack 25
  1704                           
  1705                           ;1wire.c: 118: OWInit();
  1706                           
  1707                           ;incstack = 0
  1708                           ;incstack = 0
  1709  002802  EC23  F013         	call	_OWInit	;wreg free
  1710                           
  1711                           ;1wire.c: 119: OWWriteByte(0xCC);
  1712  002806  0E00               	movlw	0
  1713  002808  6E26               	movwf	?_OWWriteByte+1,c
  1714  00280A  0ECC               	movlw	204
  1715  00280C  6E25               	movwf	?_OWWriteByte,c
  1716  00280E  EC95  F013         	call	_OWWriteByte	;wreg free
  1717                           
  1718                           ;1wire.c: 120: OWWriteByte(0x44);
  1719  002812  0E00               	movlw	0
  1720  002814  6E26               	movwf	?_OWWriteByte+1,c
  1721  002816  0E44               	movlw	68
  1722  002818  6E25               	movwf	?_OWWriteByte,c
  1723  00281A  EC95  F013         	call	_OWWriteByte	;wreg free
  1724  00281E  0012               	return	
  1725  002820                     __end_of_Convert_Temperature:
  1726                           	opt stack 0
  1727                           tblptru	equ	0xFF8
  1728                           tblptrh	equ	0xFF7
  1729                           tblptrl	equ	0xFF6
  1730                           tablat	equ	0xFF5
  1731                           intcon	equ	0xFF2
  1732                           intcon2	equ	0xFF1
  1733                           postinc0	equ	0xFEE
  1734                           wreg	equ	0xFE8
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _OWWriteByte *****************
  1741 ;; Defined at:
  1742 ;;		line 83 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  byte            2   36[COMRAM] int 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  i               2   38[COMRAM] int 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        4 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    4
  1763 ;; This function calls:
  1764 ;;		_OWWriteBit
  1765 ;; This function is called by:
  1766 ;;		_Convert_Temperature
  1767 ;;		_Read_Temperature
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text7
  1772  00272A                     __ptext7:
  1773                           	opt stack 0
  1774  00272A                     _OWWriteByte:
  1775                           	opt stack 25
  1776                           
  1777                           ;1wire.c: 85: int i;
  1778                           ;1wire.c: 89: for (i = 0; i < 8; i++) {
  1779                           
  1780                           ;incstack = 0
  1781                           ;incstack = 0
  1782  00272A  0E00               	movlw	0
  1783  00272C  6E28               	movwf	OWWriteByte@i+1,c
  1784  00272E  0E00               	movlw	0
  1785  002730  6E27               	movwf	OWWriteByte@i,c
  1786  002732  5028               	movf	OWWriteByte@i+1,w,c
  1787  002734  0A80               	xorlw	128
  1788  002736  0F80               	addlw	-128
  1789  002738  0E08               	movlw	8
  1790  00273A  B4D8               	btfsc	status,2,c
  1791  00273C  5C27               	subwf	OWWriteByte@i,w,c
  1792  00273E  B0D8               	btfsc	status,0,c
  1793  002740  0012               	return	
  1794                           
  1795                           ;1wire.c: 90: OWWriteBit(byte & 0x01);
  1796  002742  0E01               	movlw	1
  1797  002744  1425               	andwf	OWWriteByte@byte,w,c
  1798  002746  6E22               	movwf	?_OWWriteBit,c
  1799  002748  0E00               	movlw	0
  1800  00274A  1426               	andwf	OWWriteByte@byte+1,w,c
  1801  00274C  6E23               	movwf	?_OWWriteBit+1,c
  1802  00274E  EC60  F012         	call	_OWWriteBit	;wreg free
  1803                           
  1804                           ;1wire.c: 93: byte >>= 1;
  1805  002752  3426               	rlcf	OWWriteByte@byte+1,w,c
  1806  002754  3226               	rrcf	OWWriteByte@byte+1,f,c
  1807  002756  3225               	rrcf	OWWriteByte@byte,f,c
  1808  002758  4A27               	infsnz	OWWriteByte@i,f,c
  1809  00275A  2A28               	incf	OWWriteByte@i+1,f,c
  1810  00275C  D7EA               	goto	L3
  1811  00275E                     __end_of_OWWriteByte:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           tblptrh	equ	0xFF7
  1815                           tblptrl	equ	0xFF6
  1816                           tablat	equ	0xFF5
  1817                           intcon	equ	0xFF2
  1818                           intcon2	equ	0xFF1
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           indf2	equ	0xFDF
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _OWWriteBit *****************
  1827 ;; Defined at:
  1828 ;;		line 42 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  bite            2   33[COMRAM] int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:        3 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    3
  1849 ;; This function calls:
  1850 ;;		_Delay10TCYx
  1851 ;; This function is called by:
  1852 ;;		_OWWriteByte
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text8
  1857  0024C0                     __ptext8:
  1858                           	opt stack 0
  1859  0024C0                     _OWWriteBit:
  1860                           	opt stack 25
  1861                           
  1862                           ;1wire.c: 46: TRISBbits.TRISB5 = 0; PORTBbits.RB5 = 0;
  1863                           
  1864                           ;incstack = 0
  1865                           ;incstack = 0
  1866  0024C0  9A93               	bcf	3987,5,c	;volatile
  1867  0024C2  9A81               	bcf	3969,5,c	;volatile
  1868                           
  1869                           ;1wire.c: 48: if (bite)
  1870  0024C4  5023               	movf	OWWriteBit@bite+1,w,c
  1871  0024C6  1022               	iorwf	OWWriteBit@bite,w,c
  1872  0024C8  B4D8               	btfsc	status,2,c
  1873  0024CA  D007               	goto	l2612
  1874                           
  1875                           ;1wire.c: 49: Delay10TCYx(4);
  1876  0024CC  6E24               	movwf	??_OWWriteBit& (0+255),c
  1877  0024CE  0E04               	movlw	4
  1878  0024D0  6E21               	movwf	?_Delay10TCYx,c
  1879  0024D2  5024               	movf	??_OWWriteBit& (0+255),w,c
  1880  0024D4  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1881  0024D8  D006               	goto	l2614
  1882  0024DA                     l2612:
  1883                           
  1884                           ;1wire.c: 50: else
  1885                           ;1wire.c: 51: Delay10TCYx(40);
  1886  0024DA  6E24               	movwf	??_OWWriteBit& (0+255),c
  1887  0024DC  0E28               	movlw	40
  1888  0024DE  6E21               	movwf	?_Delay10TCYx,c
  1889  0024E0  5024               	movf	??_OWWriteBit& (0+255),w,c
  1890  0024E2  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1891  0024E6                     l2614:
  1892                           
  1893                           ;1wire.c: 53: TRISBbits.TRISB5 = 1;
  1894  0024E6  8A93               	bsf	3987,5,c	;volatile
  1895                           
  1896                           ;1wire.c: 55: if (bite)
  1897  0024E8  5023               	movf	OWWriteBit@bite+1,w,c
  1898  0024EA  1022               	iorwf	OWWriteBit@bite,w,c
  1899  0024EC  B4D8               	btfsc	status,2,c
  1900  0024EE  D006               	goto	l248
  1901                           
  1902                           ;1wire.c: 56: Delay10TCYx(24);
  1903  0024F0  6E24               	movwf	??_OWWriteBit& (0+255),c
  1904  0024F2  0E18               	movlw	24
  1905  0024F4  6E21               	movwf	?_Delay10TCYx,c
  1906  0024F6  5024               	movf	??_OWWriteBit& (0+255),w,c
  1907  0024F8  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1908  0024FC                     l248:
  1909                           
  1910                           ;1wire.c: 58: Delay10TCYx(4);
  1911  0024FC  6E24               	movwf	??_OWWriteBit& (0+255),c
  1912  0024FE  0E04               	movlw	4
  1913  002500  6E21               	movwf	?_Delay10TCYx,c
  1914  002502  5024               	movf	??_OWWriteBit& (0+255),w,c
  1915  002504  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1916  002508  0012               	return	
  1917  00250A                     __end_of_OWWriteBit:
  1918                           	opt stack 0
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           intcon	equ	0xFF2
  1924                           intcon2	equ	0xFF1
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           indf2	equ	0xFDF
  1928                           fsr2h	equ	0xFDA
  1929                           fsr2l	equ	0xFD9
  1930                           status	equ	0xFD8
  1931                           
  1932 ;; *************** function _OWInit *****************
  1933 ;; Defined at:
  1934 ;;		line 22 in file "C:/Users/etu20261/Desktop/1wire+usart/wire/1wire.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  state           2   34[COMRAM] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  2  242[COMRAM] int 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;Total ram usage:        3 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    3
  1955 ;; This function calls:
  1956 ;;		_Delay10TCYx
  1957 ;; This function is called by:
  1958 ;;		_Convert_Temperature
  1959 ;;		_Read_Temperature
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text9
  1964  002646                     __ptext9:
  1965                           	opt stack 0
  1966  002646                     _OWInit:
  1967                           	opt stack 26
  1968                           
  1969                           ;1wire.c: 24: int state;
  1970                           ;1wire.c: 27: TRISBbits.TRISB5 = 0; PORTBbits.RB5 = 0;
  1971                           
  1972                           ;incstack = 0
  1973                           ;incstack = 0
  1974  002646  9A93               	bcf	3987,5,c	;volatile
  1975  002648  9A81               	bcf	3969,5,c	;volatile
  1976                           
  1977                           ;1wire.c: 29: Delay10TCYx(200);
  1978  00264A  6E22               	movwf	??_OWInit& (0+255),c
  1979  00264C  0EC8               	movlw	200
  1980  00264E  6E21               	movwf	?_Delay10TCYx,c
  1981  002650  5022               	movf	??_OWInit& (0+255),w,c
  1982  002652  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1983                           
  1984                           ;1wire.c: 31: TRISBbits.TRISB5 = 1;
  1985  002656  8A93               	bsf	3987,5,c	;volatile
  1986                           
  1987                           ;1wire.c: 33: Delay10TCYx(40);
  1988  002658  6E22               	movwf	??_OWInit& (0+255),c
  1989  00265A  0E28               	movlw	40
  1990  00265C  6E21               	movwf	?_Delay10TCYx,c
  1991  00265E  5022               	movf	??_OWInit& (0+255),w,c
  1992  002660  EC2C  F014         	call	_Delay10TCYx	;wreg free
  1993                           
  1994                           ;1wire.c: 35: state = PORTBbits.RB5;
  1995  002664  3881               	swapf	3969,w,c	;volatile
  1996  002666  32E8               	rrcf	wreg,f,c
  1997  002668  0B01               	andlw	1
  1998  00266A  6E22               	movwf	??_OWInit& (0+255),c
  1999  00266C  5022               	movf	??_OWInit,w,c
  2000  00266E  6E23               	movwf	OWInit@state,c
  2001  002670  6A24               	clrf	OWInit@state+1,c
  2002                           
  2003                           ;1wire.c: 37: Delay10TCYx(160);
  2004  002672  6E22               	movwf	??_OWInit& (0+255),c
  2005  002674  0EA0               	movlw	160
  2006  002676  6E21               	movwf	?_Delay10TCYx,c
  2007  002678  5022               	movf	??_OWInit& (0+255),w,c
  2008  00267A  EC2C  F014         	call	_Delay10TCYx	;wreg free
  2009  00267E  0012               	return	
  2010  002680                     __end_of_OWInit:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           intcon	equ	0xFF2
  2017                           intcon2	equ	0xFF1
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf2	equ	0xFDF
  2021                           fsr2h	equ	0xFDA
  2022                           fsr2l	equ	0xFD9
  2023                           status	equ	0xFD8
  2024                           
  2025 ;; *************** function _Delay10TCYx *****************
  2026 ;; Defined at:
  2027 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d10tcyx.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  unit            1   32[COMRAM] unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;		None               void
  2034 ;; Registers used:
  2035 ;;		wreg
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    2
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_OWInit
  2052 ;;		_OWWriteBit
  2053 ;;		_OWReadBit
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text10
  2058  002858                     __ptext10:
  2059                           	opt stack 0
  2060  002858                     _Delay10TCYx:
  2061                           	opt stack 25
  2062  002858                     l634:
  2063  002858  0E03               	movlw	3
  2064  00285A                     u3057:
  2065  00285A  2EE8               	decfsz	wreg,f,c
  2066  00285C  D7FE               	goto	u3057
  2067  00285E  F000               	nop	
  2068  002860  2E21               	decfsz	Delay10TCYx@unit,f,c
  2069  002862  D7FA               	goto	l634
  2070  002864  0012               	return	
  2071  002866                     __end_of_Delay10TCYx:
  2072                           	opt stack 0
  2073                           tblptru	equ	0xFF8
  2074                           tblptrh	equ	0xFF7
  2075                           tblptrl	equ	0xFF6
  2076                           tablat	equ	0xFF5
  2077                           intcon	equ	0xFF2
  2078                           intcon2	equ	0xFF1
  2079                           postinc0	equ	0xFEE
  2080                           wreg	equ	0xFE8
  2081                           indf2	equ	0xFDF
  2082                           fsr2h	equ	0xFDA
  2083                           fsr2l	equ	0xFD9
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _initLCD *****************
  2087 ;; Defined at:
  2088 ;;		line 35 in file "C:/Users/etu20261/Desktop/1wire+usart/affi.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;		None               void
  2095 ;; Registers used:
  2096 ;;		None
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text11
  2117  002848                     __ptext11:
  2118                           	opt stack 0
  2119  002848                     _initLCD:
  2120                           	opt stack 28
  2121                           
  2122                           ;affi.c: 36: TRISDbits.TRISD0 = OUT;
  2123                           
  2124                           ;incstack = 0
  2125                           ;incstack = 0
  2126  002848  9095               	bcf	3989,0,c	;volatile
  2127                           
  2128                           ;affi.c: 37: TRISDbits.TRISD1 = OUT;
  2129  00284A  9295               	bcf	3989,1,c	;volatile
  2130                           
  2131                           ;affi.c: 38: TRISDbits.TRISD2 = OUT;
  2132  00284C  9495               	bcf	3989,2,c	;volatile
  2133                           
  2134                           ;affi.c: 39: TRISDbits.TRISD3 = OUT;
  2135  00284E  9695               	bcf	3989,3,c	;volatile
  2136                           
  2137                           ;affi.c: 41: TRISAbits.TRISA1 = OUT;
  2138  002850  9292               	bcf	3986,1,c	;volatile
  2139                           
  2140                           ;affi.c: 42: TRISAbits.TRISA2 = OUT;
  2141  002852  9492               	bcf	3986,2,c	;volatile
  2142                           
  2143                           ;affi.c: 43: TRISDbits.TRISD5 = OUT;
  2144  002854  9A95               	bcf	3989,5,c	;volatile
  2145  002856  0012               	return	
  2146  002858                     __end_of_initLCD:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           intcon	equ	0xFF2
  2153                           intcon2	equ	0xFF1
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf2	equ	0xFDF
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _initBout *****************
  2162 ;; Defined at:
  2163 ;;		line 9 in file "C:/Users/etu20261/Desktop/1wire+usart/boutons.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		None
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text12
  2192  002836                     __ptext12:
  2193                           	opt stack 0
  2194  002836                     _initBout:
  2195                           	opt stack 28
  2196                           
  2197                           ;boutons.c: 10: TRISEbits.TRISE0 = IN;
  2198                           
  2199                           ;incstack = 0
  2200                           ;incstack = 0
  2201  002836  8096               	bsf	3990,0,c	;volatile
  2202                           
  2203                           ;boutons.c: 11: TRISEbits.TRISE1 = IN;
  2204  002838  8296               	bsf	3990,1,c	;volatile
  2205                           
  2206                           ;boutons.c: 12: TRISEbits.TRISE2 = IN;
  2207  00283A  8496               	bsf	3990,2,c	;volatile
  2208                           
  2209                           ;boutons.c: 13: TRISCbits.TRISC0 = IN;
  2210  00283C  8094               	bsf	3988,0,c	;volatile
  2211                           
  2212                           ;boutons.c: 14: TRISCbits.TRISC1 = IN;
  2213  00283E  8294               	bsf	3988,1,c	;volatile
  2214                           
  2215                           ;boutons.c: 16: INTCONbits.INT0IE = 1;
  2216  002840  88F2               	bsf	intcon,4,c	;volatile
  2217                           
  2218                           ;boutons.c: 17: INTCONbits.INT0IF = 0;
  2219  002842  92F2               	bcf	intcon,1,c	;volatile
  2220                           
  2221                           ;boutons.c: 18: INTCON2bits.INTEDG0 = 0;
  2222  002844  9CF1               	bcf	intcon2,6,c	;volatile
  2223  002846  0012               	return	
  2224  002848                     __end_of_initBout:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           intcon	equ	0xFF2
  2231                           intcon2	equ	0xFF1
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           indf2	equ	0xFDF
  2235                           fsr2h	equ	0xFDA
  2236                           fsr2l	equ	0xFD9
  2237                           status	equ	0xFD8
  2238                           
  2239 ;; *************** function _putsXLCD *****************
  2240 ;; Defined at:
  2241 ;;		line 17 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/putsxlcd.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  buffer          2   33[COMRAM] PTR unsigned char 
  2244 ;;		 -> capteur(5), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        2 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    4
  2263 ;; This function calls:
  2264 ;;		_BusyXLCD
  2265 ;;		_WriteDataXLCD
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text13
  2272  00275E                     __ptext13:
  2273                           	opt stack 0
  2274  00275E                     _putsXLCD:
  2275                           	opt stack 26
  2276                           
  2277                           ;putsxlcd.c: 18: while(*buffer)
  2278                           
  2279                           ;incstack = 0
  2280                           ;incstack = 0
  2281  00275E  D00F               	goto	l1728
  2282  002760                     l1722:
  2283  002760  EC40  F013         	call	_BusyXLCD	;wreg free
  2284  002764  0900               	iorlw	0
  2285  002766  A4D8               	btfss	status,2,c
  2286  002768  D7FB               	goto	l1722
  2287                           
  2288                           ;putsxlcd.c: 21: WriteDataXLCD(*buffer);
  2289  00276A  C022  FFD9         	movff	putsXLCD@buffer,fsr2l
  2290  00276E  C023  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2291  002772  50DF               	movf	indf2,w,c
  2292  002774  6E21               	movwf	?_WriteDataXLCD,c
  2293  002776  ECE7  F012         	call	_WriteDataXLCD	;wreg free
  2294                           
  2295                           ;putsxlcd.c: 22: buffer++;
  2296  00277A  4A22               	infsnz	putsXLCD@buffer,f,c
  2297  00277C  2A23               	incf	putsXLCD@buffer+1,f,c
  2298  00277E                     l1728:
  2299  00277E  C022  FFD9         	movff	putsXLCD@buffer,fsr2l
  2300  002782  C023  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  2301  002786  50DF               	movf	indf2,w,c
  2302  002788  B4D8               	btfsc	status,2,c
  2303                           
  2304                           ;putsxlcd.c: 23: }
  2305                           ;putsxlcd.c: 24: return;
  2306  00278A  0012               	return	
  2307  00278C  D7E9               	goto	l1722
  2308  00278E                     __end_of_putsXLCD:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           intcon	equ	0xFF2
  2315                           intcon2	equ	0xFF1
  2316                           postinc0	equ	0xFEE
  2317                           wreg	equ	0xFE8
  2318                           indf2	equ	0xFDF
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _putrsXLCD *****************
  2324 ;; Defined at:
  2325 ;;		line 17 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/putrxlcd.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  buffer          2   33[COMRAM] PTR const unsigned char 
  2328 ;;		 -> STR_1(6), 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;		None               void
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    4
  2347 ;; This function calls:
  2348 ;;		_BusyXLCD
  2349 ;;		_WriteDataXLCD
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text14
  2356  0026F4                     __ptext14:
  2357                           	opt stack 0
  2358  0026F4                     _putrsXLCD:
  2359                           	opt stack 26
  2360                           
  2361                           ;putrxlcd.c: 18: while(*buffer)
  2362                           
  2363                           ;incstack = 0
  2364                           ;incstack = 0
  2365  0026F4  D010               	goto	l1694
  2366  0026F6                     l1688:
  2367  0026F6  EC40  F013         	call	_BusyXLCD	;wreg free
  2368  0026FA  0900               	iorlw	0
  2369  0026FC  A4D8               	btfss	status,2,c
  2370  0026FE  D7FB               	goto	l1688
  2371                           
  2372                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
  2373  002700  C022  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2374  002704  C023  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2375  002708  0008               	tblrd		*
  2376  00270A  CFF5 F021          	movff	tablat,?_WriteDataXLCD
  2377  00270E  ECE7  F012         	call	_WriteDataXLCD	;wreg free
  2378                           
  2379                           ;putrxlcd.c: 22: buffer++;
  2380  002712  4A22               	infsnz	putrsXLCD@buffer,f,c
  2381  002714  2A23               	incf	putrsXLCD@buffer+1,f,c
  2382  002716                     l1694:
  2383  002716  C022  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2384  00271A  C023  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2385  00271E  0008               	tblrd		*
  2386  002720  50F5               	movf	tablat,w,c
  2387  002722  0900               	iorlw	0
  2388  002724  B4D8               	btfsc	status,2,c
  2389                           
  2390                           ;putrxlcd.c: 23: }
  2391                           ;putrxlcd.c: 24: return;
  2392  002726  0012               	return	
  2393  002728  D7E6               	goto	l1688
  2394  00272A                     __end_of_putrsXLCD:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           intcon	equ	0xFF2
  2401                           intcon2	equ	0xFF1
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           indf2	equ	0xFDF
  2405                           fsr2h	equ	0xFDA
  2406                           fsr2l	equ	0xFD9
  2407                           status	equ	0xFD8
  2408                           
  2409 ;; *************** function _WriteDataXLCD *****************
  2410 ;; Defined at:
  2411 ;;		line 17 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/writdata.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  data            1   32[COMRAM] unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    3
  2432 ;; This function calls:
  2433 ;;		_DelayFor18TCY
  2434 ;; This function is called by:
  2435 ;;		_putrsXLCD
  2436 ;;		_putsXLCD
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text15
  2441  0025CE                     __ptext15:
  2442                           	opt stack 0
  2443  0025CE                     _WriteDataXLCD:
  2444                           	opt stack 26
  2445                           
  2446                           ;writdata.c: 35: TRISD &= 0xf0;
  2447                           
  2448                           ;incstack = 0
  2449                           ;incstack = 0
  2450  0025CE  0EF0               	movlw	240
  2451  0025D0  1695               	andwf	3989,f,c	;volatile
  2452                           
  2453                           ;writdata.c: 36: PORTD &= 0xf0;
  2454  0025D2  0EF0               	movlw	240
  2455  0025D4  1683               	andwf	3971,f,c	;volatile
  2456                           
  2457                           ;writdata.c: 37: PORTD |= ((data>>4)&0x0f);
  2458  0025D6  3821               	swapf	WriteDataXLCD@data,w,c
  2459  0025D8  0B0F               	andlw	15
  2460  0025DA  0B0F               	andlw	15
  2461  0025DC  1283               	iorwf	3971,f,c	;volatile
  2462                           
  2463                           ;writdata.c: 39: LATDbits.LATD5 = 1;
  2464  0025DE  8A8C               	bsf	3980,5,c	;volatile
  2465                           
  2466                           ;writdata.c: 40: LATAbits.LATA1 = 0;
  2467  0025E0  9289               	bcf	3977,1,c	;volatile
  2468                           
  2469                           ;writdata.c: 41: DelayFor18TCY();
  2470  0025E2  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2471                           
  2472                           ;writdata.c: 42: LATAbits.LATA2 = 1;
  2473  0025E6  8489               	bsf	3977,2,c	;volatile
  2474                           
  2475                           ;writdata.c: 43: DelayFor18TCY();
  2476  0025E8  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2477                           
  2478                           ;writdata.c: 44: LATAbits.LATA2 = 0;
  2479  0025EC  9489               	bcf	3977,2,c	;volatile
  2480                           
  2481                           ;writdata.c: 49: PORTD &= 0xf0;
  2482  0025EE  0EF0               	movlw	240
  2483  0025F0  1683               	andwf	3971,f,c	;volatile
  2484                           
  2485                           ;writdata.c: 50: PORTD |= (data&0x0f);
  2486  0025F2  5021               	movf	WriteDataXLCD@data,w,c
  2487  0025F4  0B0F               	andlw	15
  2488  0025F6  1283               	iorwf	3971,f,c	;volatile
  2489                           
  2490                           ;writdata.c: 52: DelayFor18TCY();
  2491  0025F8  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2492                           
  2493                           ;writdata.c: 53: LATAbits.LATA2 = 1;
  2494  0025FC  8489               	bsf	3977,2,c	;volatile
  2495                           
  2496                           ;writdata.c: 54: DelayFor18TCY();
  2497  0025FE  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2498                           
  2499                           ;writdata.c: 55: LATAbits.LATA2 = 0;
  2500  002602  9489               	bcf	3977,2,c	;volatile
  2501                           
  2502                           ;writdata.c: 59: TRISD |= 0x0f;
  2503  002604  0E0F               	movlw	15
  2504  002606  1295               	iorwf	3989,f,c	;volatile
  2505  002608  0012               	return	
  2506  00260A                     __end_of_WriteDataXLCD:
  2507                           	opt stack 0
  2508                           tblptru	equ	0xFF8
  2509                           tblptrh	equ	0xFF7
  2510                           tblptrl	equ	0xFF6
  2511                           tablat	equ	0xFF5
  2512                           intcon	equ	0xFF2
  2513                           intcon2	equ	0xFF1
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           indf2	equ	0xFDF
  2517                           fsr2h	equ	0xFDA
  2518                           fsr2l	equ	0xFD9
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _OpenXLCD *****************
  2522 ;; Defined at:
  2523 ;;		line 20 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/openxlcd.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  lcdtype         1   36[COMRAM] unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        2 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    4
  2544 ;; This function calls:
  2545 ;;		_BusyXLCD
  2546 ;;		_DelayPORXLCD
  2547 ;;		_WriteCmdXLCD
  2548 ;;		_Delay10KTCYx
  2549 ;;		_SetDDRamAddr
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text16
  2556  0020C8                     __ptext16:
  2557                           	opt stack 0
  2558  0020C8                     _OpenXLCD:
  2559                           	opt stack 26
  2560                           
  2561                           ;openxlcd.c: 31: PORTD &= 0xf0;
  2562                           
  2563                           ;incstack = 0
  2564                           ;incstack = 0
  2565  0020C8  0EF0               	movlw	240
  2566  0020CA  1683               	andwf	3971,f,c	;volatile
  2567                           
  2568                           ;openxlcd.c: 32: TRISD &= 0xF0;
  2569  0020CC  0EF0               	movlw	240
  2570  0020CE  1695               	andwf	3989,f,c	;volatile
  2571                           
  2572                           ;openxlcd.c: 35: TRISAbits.TRISA1 = 0;
  2573  0020D0  9292               	bcf	3986,1,c	;volatile
  2574                           
  2575                           ;openxlcd.c: 36: TRISDbits.TRISD5 = 0;
  2576  0020D2  9A95               	bcf	3989,5,c	;volatile
  2577                           
  2578                           ;openxlcd.c: 37: TRISAbits.TRISA2 = 0;
  2579  0020D4  9492               	bcf	3986,2,c	;volatile
  2580                           
  2581                           ;openxlcd.c: 38: LATAbits.LATA1 = 0;
  2582  0020D6  9289               	bcf	3977,1,c	;volatile
  2583                           
  2584                           ;openxlcd.c: 39: LATDbits.LATD5 = 0;
  2585  0020D8  9A8C               	bcf	3980,5,c	;volatile
  2586                           
  2587                           ;openxlcd.c: 40: LATAbits.LATA2 = 0;
  2588  0020DA  9489               	bcf	3977,2,c	;volatile
  2589                           
  2590                           ;openxlcd.c: 43: DelayPORXLCD();
  2591  0020DC  EC33  F014         	call	_DelayPORXLCD	;wreg free
  2592                           
  2593                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  2594  0020E0  6E26               	movwf	??_OpenXLCD& (0+255),c
  2595  0020E2  0E30               	movlw	48
  2596  0020E4  6E21               	movwf	?_WriteCmdXLCD,c
  2597  0020E6  5026               	movf	??_OpenXLCD& (0+255),w,c
  2598  0020E8  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2599                           
  2600                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  2601  0020EC  6E26               	movwf	??_OpenXLCD& (0+255),c
  2602  0020EE  0E05               	movlw	5
  2603  0020F0  6E21               	movwf	?_Delay10KTCYx,c
  2604  0020F2  5026               	movf	??_OpenXLCD& (0+255),w,c
  2605  0020F4  EC10  F014         	call	_Delay10KTCYx	;wreg free
  2606                           
  2607                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  2608  0020F8  6E26               	movwf	??_OpenXLCD& (0+255),c
  2609  0020FA  0E30               	movlw	48
  2610  0020FC  6E21               	movwf	?_WriteCmdXLCD,c
  2611  0020FE  5026               	movf	??_OpenXLCD& (0+255),w,c
  2612  002100  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2613                           
  2614                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  2615  002104  6E26               	movwf	??_OpenXLCD& (0+255),c
  2616  002106  0E01               	movlw	1
  2617  002108  6E21               	movwf	?_Delay10KTCYx,c
  2618  00210A  5026               	movf	??_OpenXLCD& (0+255),w,c
  2619  00210C  EC10  F014         	call	_Delay10KTCYx	;wreg free
  2620                           
  2621                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  2622  002110  6E26               	movwf	??_OpenXLCD& (0+255),c
  2623  002112  0E32               	movlw	50
  2624  002114  6E21               	movwf	?_WriteCmdXLCD,c
  2625  002116  5026               	movf	??_OpenXLCD& (0+255),w,c
  2626  002118  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2627  00211C                     l1604:
  2628  00211C  EC40  F013         	call	_BusyXLCD	;wreg free
  2629  002120  0900               	iorlw	0
  2630  002122  A4D8               	btfss	status,2,c
  2631  002124  D7FB               	goto	l1604
  2632  002126                     l1606:
  2633  002126  EC40  F013         	call	_BusyXLCD	;wreg free
  2634  00212A  0900               	iorlw	0
  2635  00212C  A4D8               	btfss	status,2,c
  2636  00212E  D7FB               	goto	l1606
  2637                           
  2638                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  2639  002130  C025  F021         	movff	OpenXLCD@lcdtype,?_WriteCmdXLCD
  2640  002134  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2641  002138                     l1610:
  2642  002138  EC40  F013         	call	_BusyXLCD	;wreg free
  2643  00213C  0900               	iorlw	0
  2644  00213E  A4D8               	btfss	status,2,c
  2645  002140  D7FB               	goto	l1610
  2646                           
  2647                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2648  002142  6E26               	movwf	??_OpenXLCD& (0+255),c
  2649  002144  0E08               	movlw	8
  2650  002146  6E21               	movwf	?_WriteCmdXLCD,c
  2651  002148  5026               	movf	??_OpenXLCD& (0+255),w,c
  2652  00214A  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2653  00214E                     l1614:
  2654  00214E  EC40  F013         	call	_BusyXLCD	;wreg free
  2655  002152  0900               	iorlw	0
  2656  002154  A4D8               	btfss	status,2,c
  2657  002156  D7FB               	goto	l1614
  2658                           
  2659                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2660  002158  6E26               	movwf	??_OpenXLCD& (0+255),c
  2661  00215A  0E0F               	movlw	15
  2662  00215C  6E21               	movwf	?_WriteCmdXLCD,c
  2663  00215E  5026               	movf	??_OpenXLCD& (0+255),w,c
  2664  002160  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2665  002164                     l1618:
  2666  002164  EC40  F013         	call	_BusyXLCD	;wreg free
  2667  002168  0900               	iorlw	0
  2668  00216A  A4D8               	btfss	status,2,c
  2669  00216C  D7FB               	goto	l1618
  2670                           
  2671                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  2672  00216E  6E26               	movwf	??_OpenXLCD& (0+255),c
  2673  002170  0E01               	movlw	1
  2674  002172  6E21               	movwf	?_WriteCmdXLCD,c
  2675  002174  5026               	movf	??_OpenXLCD& (0+255),w,c
  2676  002176  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2677  00217A                     l1622:
  2678  00217A  EC40  F013         	call	_BusyXLCD	;wreg free
  2679  00217E  0900               	iorlw	0
  2680  002180  A4D8               	btfss	status,2,c
  2681  002182  D7FB               	goto	l1622
  2682                           
  2683                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  2684  002184  6E26               	movwf	??_OpenXLCD& (0+255),c
  2685  002186  0E04               	movlw	4
  2686  002188  6E21               	movwf	?_WriteCmdXLCD,c
  2687  00218A  5026               	movf	??_OpenXLCD& (0+255),w,c
  2688  00218C  EC05  F013         	call	_WriteCmdXLCD	;wreg free
  2689  002190                     l1626:
  2690  002190  EC40  F013         	call	_BusyXLCD	;wreg free
  2691  002194  0900               	iorlw	0
  2692  002196  A4D8               	btfss	status,2,c
  2693  002198  D7FB               	goto	l1626
  2694                           
  2695                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  2696  00219A  6E26               	movwf	??_OpenXLCD& (0+255),c
  2697  00219C  0E80               	movlw	128
  2698  00219E  6E21               	movwf	?_SetDDRamAddr,c
  2699  0021A0  5026               	movf	??_OpenXLCD& (0+255),w,c
  2700  0021A2  EC10  F012         	call	_SetDDRamAddr	;wreg free
  2701  0021A6  0012               	return	
  2702  0021A8                     __end_of_OpenXLCD:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           intcon	equ	0xFF2
  2709                           intcon2	equ	0xFF1
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf2	equ	0xFDF
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _SetDDRamAddr *****************
  2718 ;; Defined at:
  2719 ;;		line 14 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/setddram.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  DDaddr          1   32[COMRAM] unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;Total ram usage:        4 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    3
  2740 ;; This function calls:
  2741 ;;		_DelayFor18TCY
  2742 ;; This function is called by:
  2743 ;;		_OpenXLCD
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text17
  2749  002420                     __ptext17:
  2750                           	opt stack 0
  2751  002420                     _SetDDRamAddr:
  2752                           	opt stack 27
  2753                           
  2754                           ;setddram.c: 32: TRISD &= 0xf0;
  2755                           
  2756                           ;incstack = 0
  2757                           ;incstack = 0
  2758  002420  0EF0               	movlw	240
  2759  002422  1695               	andwf	3989,f,c	;volatile
  2760                           
  2761                           ;setddram.c: 33: PORTD &= 0xf0;
  2762  002424  0EF0               	movlw	240
  2763  002426  1683               	andwf	3971,f,c	;volatile
  2764                           
  2765                           ;setddram.c: 34: PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  2766  002428  5021               	movf	SetDDRamAddr@DDaddr,w,c
  2767  00242A  6E22               	movwf	??_SetDDRamAddr& (0+255),c
  2768  00242C  6A23               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  2769  00242E  0E80               	movlw	128
  2770  002430  1222               	iorwf	??_SetDDRamAddr,f,c
  2771  002432  0E00               	movlw	0
  2772  002434  1223               	iorwf	??_SetDDRamAddr+1,f,c
  2773  002436  0E04               	movlw	4
  2774  002438  6E24               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  2775  00243A                     u415:
  2776  00243A  3423               	rlcf	??_SetDDRamAddr+1,w,c
  2777  00243C  3223               	rrcf	??_SetDDRamAddr+1,f,c
  2778  00243E  3222               	rrcf	??_SetDDRamAddr,f,c
  2779  002440  2E24               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  2780  002442  D7FB               	goto	u415
  2781  002444  5022               	movf	??_SetDDRamAddr,w,c
  2782  002446  0B0F               	andlw	15
  2783  002448  1283               	iorwf	3971,f,c	;volatile
  2784                           
  2785                           ;setddram.c: 36: LATAbits.LATA1 = 0;
  2786  00244A  9289               	bcf	3977,1,c	;volatile
  2787                           
  2788                           ;setddram.c: 37: LATDbits.LATD5 = 0;
  2789  00244C  9A8C               	bcf	3980,5,c	;volatile
  2790                           
  2791                           ;setddram.c: 38: DelayFor18TCY();
  2792  00244E  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2793                           
  2794                           ;setddram.c: 39: LATAbits.LATA2 = 1;
  2795  002452  8489               	bsf	3977,2,c	;volatile
  2796                           
  2797                           ;setddram.c: 40: DelayFor18TCY();
  2798  002454  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2799                           
  2800                           ;setddram.c: 41: LATAbits.LATA2 = 0;
  2801  002458  9489               	bcf	3977,2,c	;volatile
  2802                           
  2803                           ;setddram.c: 46: PORTD &= 0xf0;
  2804  00245A  0EF0               	movlw	240
  2805  00245C  1683               	andwf	3971,f,c	;volatile
  2806                           
  2807                           ;setddram.c: 47: PORTD |= (DDaddr&0x0f);
  2808  00245E  5021               	movf	SetDDRamAddr@DDaddr,w,c
  2809  002460  0B0F               	andlw	15
  2810  002462  1283               	iorwf	3971,f,c	;volatile
  2811                           
  2812                           ;setddram.c: 49: DelayFor18TCY();
  2813  002464  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2814                           
  2815                           ;setddram.c: 50: LATAbits.LATA2 = 1;
  2816  002468  8489               	bsf	3977,2,c	;volatile
  2817                           
  2818                           ;setddram.c: 51: DelayFor18TCY();
  2819  00246A  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2820                           
  2821                           ;setddram.c: 52: LATAbits.LATA2 = 0;
  2822  00246E  9489               	bcf	3977,2,c	;volatile
  2823                           
  2824                           ;setddram.c: 56: TRISD |= 0x0f;
  2825  002470  0E0F               	movlw	15
  2826  002472  1295               	iorwf	3989,f,c	;volatile
  2827  002474  0012               	return	
  2828  002476                     __end_of_SetDDRamAddr:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           intcon	equ	0xFF2
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _WriteCmdXLCD *****************
  2844 ;; Defined at:
  2845 ;;		line 14 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/wcmdxlcd.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  cmd             1   32[COMRAM] unsigned char 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2859 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;Total ram usage:        1 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    3
  2866 ;; This function calls:
  2867 ;;		_DelayFor18TCY
  2868 ;; This function is called by:
  2869 ;;		_OpenXLCD
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text18
  2875  00260A                     __ptext18:
  2876                           	opt stack 0
  2877  00260A                     _WriteCmdXLCD:
  2878                           	opt stack 27
  2879                           
  2880                           ;wcmdxlcd.c: 32: TRISD &= 0xf0;
  2881                           
  2882                           ;incstack = 0
  2883                           ;incstack = 0
  2884  00260A  0EF0               	movlw	240
  2885  00260C  1695               	andwf	3989,f,c	;volatile
  2886                           
  2887                           ;wcmdxlcd.c: 33: PORTD &= 0xf0;
  2888  00260E  0EF0               	movlw	240
  2889  002610  1683               	andwf	3971,f,c	;volatile
  2890                           
  2891                           ;wcmdxlcd.c: 34: PORTD |= (cmd>>4)&0x0f;
  2892  002612  3821               	swapf	WriteCmdXLCD@cmd,w,c
  2893  002614  0B0F               	andlw	15
  2894  002616  0B0F               	andlw	15
  2895  002618  1283               	iorwf	3971,f,c	;volatile
  2896                           
  2897                           ;wcmdxlcd.c: 36: LATAbits.LATA1 = 0;
  2898  00261A  9289               	bcf	3977,1,c	;volatile
  2899                           
  2900                           ;wcmdxlcd.c: 37: LATDbits.LATD5 = 0;
  2901  00261C  9A8C               	bcf	3980,5,c	;volatile
  2902                           
  2903                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  2904  00261E  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2905                           
  2906                           ;wcmdxlcd.c: 39: LATAbits.LATA2 = 1;
  2907  002622  8489               	bsf	3977,2,c	;volatile
  2908                           
  2909                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  2910  002624  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2911                           
  2912                           ;wcmdxlcd.c: 41: LATAbits.LATA2 = 0;
  2913  002628  9489               	bcf	3977,2,c	;volatile
  2914                           
  2915                           ;wcmdxlcd.c: 46: PORTD &= 0xf0;
  2916  00262A  0EF0               	movlw	240
  2917  00262C  1683               	andwf	3971,f,c	;volatile
  2918                           
  2919                           ;wcmdxlcd.c: 47: PORTD |= cmd&0x0f;
  2920  00262E  5021               	movf	WriteCmdXLCD@cmd,w,c
  2921  002630  0B0F               	andlw	15
  2922  002632  1283               	iorwf	3971,f,c	;volatile
  2923                           
  2924                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  2925  002634  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2926                           
  2927                           ;wcmdxlcd.c: 50: LATAbits.LATA2 = 1;
  2928  002638  8489               	bsf	3977,2,c	;volatile
  2929                           
  2930                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  2931  00263A  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  2932                           
  2933                           ;wcmdxlcd.c: 52: LATAbits.LATA2 = 0;
  2934  00263E  9489               	bcf	3977,2,c	;volatile
  2935                           
  2936                           ;wcmdxlcd.c: 56: TRISD |= 0x0f;
  2937  002640  0E0F               	movlw	15
  2938  002642  1295               	iorwf	3989,f,c	;volatile
  2939  002644  0012               	return	
  2940  002646                     __end_of_WriteCmdXLCD:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           intcon	equ	0xFF2
  2947                           intcon2	equ	0xFF1
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           indf2	equ	0xFDF
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _DelayPORXLCD *****************
  2956 ;; Defined at:
  2957 ;;		line 27 in file "C:/Users/etu20261/Desktop/1wire+usart/affi.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;		None               void
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        1 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    3
  2978 ;; This function calls:
  2979 ;;		_Delay10KTCYx
  2980 ;; This function is called by:
  2981 ;;		_OpenXLCD
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text19
  2986  002866                     __ptext19:
  2987                           	opt stack 0
  2988  002866                     _DelayPORXLCD:
  2989                           	opt stack 26
  2990                           
  2991                           ;affi.c: 28: Delay10KTCYx(6);
  2992                           
  2993                           ;incstack = 0
  2994                           ;incstack = 0
  2995  002866  6E23               	movwf	??_DelayPORXLCD& (0+255),c
  2996  002868  0E06               	movlw	6
  2997  00286A  6E21               	movwf	?_Delay10KTCYx,c
  2998  00286C  5023               	movf	??_DelayPORXLCD& (0+255),w,c
  2999  00286E  EC10  F014         	call	_Delay10KTCYx	;wreg free
  3000  002872  0012               	return	
  3001  002874                     __end_of_DelayPORXLCD:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           intcon	equ	0xFF2
  3008                           intcon2	equ	0xFF1
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           indf2	equ	0xFDF
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _Delay10KTCYx *****************
  3017 ;; Defined at:
  3018 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d10ktcyx.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  unit            1   32[COMRAM] unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;		None               void
  3025 ;; Registers used:
  3026 ;;		wreg
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_OpenXLCD
  3043 ;;		_DelayPORXLCD
  3044 ;;		_main
  3045 ;;		_DelayXLCD
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text20
  3050  002820                     __ptext20:
  3051                           	opt stack 0
  3052  002820                     _Delay10KTCYx:
  3053                           	opt stack 28
  3054  002820                     l627:
  3055  002820  0E0D               	movlw	13
  3056  002822  6E22               	movwf	??_Delay10KTCYx& (0+255),c
  3057  002824  0EFB               	movlw	251
  3058  002826                     u3067:
  3059  002826  2EE8               	decfsz	wreg,f,c
  3060  002828  D7FE               	goto	u3067
  3061  00282A  2E22               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3062  00282C  D7FC               	goto	u3067
  3063  00282E  D000               	nop2	
  3064  002830  2E21               	decfsz	Delay10KTCYx@unit,f,c
  3065  002832  D7F6               	goto	l627
  3066  002834  0012               	return	
  3067  002836                     __end_of_Delay10KTCYx:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           intcon	equ	0xFF2
  3074                           intcon2	equ	0xFF1
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           indf2	equ	0xFDF
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _BusyXLCD *****************
  3083 ;; Defined at:
  3084 ;;		line 12 in file "C:/Users/etu20261/Desktop/1wire+usart/XLCD/busyxlcd.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      unsigned char 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		_DelayFor18TCY
  3107 ;; This function is called by:
  3108 ;;		_OpenXLCD
  3109 ;;		_putrsXLCD
  3110 ;;		_putsXLCD
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text21
  3116  002680                     __ptext21:
  3117                           	opt stack 0
  3118  002680                     _BusyXLCD:
  3119                           	opt stack 26
  3120                           
  3121                           ;busyxlcd.c: 13: LATAbits.LATA1 = 1;
  3122                           
  3123                           ;incstack = 0
  3124                           ;incstack = 0
  3125  002680  8289               	bsf	3977,1,c	;volatile
  3126                           
  3127                           ;busyxlcd.c: 14: LATDbits.LATD5 = 0;
  3128  002682  9A8C               	bcf	3980,5,c	;volatile
  3129                           
  3130                           ;busyxlcd.c: 15: DelayFor18TCY();
  3131  002684  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3132                           
  3133                           ;busyxlcd.c: 16: LATAbits.LATA2 = 1;
  3134  002688  8489               	bsf	3977,2,c	;volatile
  3135                           
  3136                           ;busyxlcd.c: 17: DelayFor18TCY();
  3137  00268A  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3138                           
  3139                           ;busyxlcd.c: 35: if(PORTD&0x08)
  3140  00268E  A683               	btfss	3971,3,c	;volatile
  3141  002690  D00A               	goto	l57
  3142                           
  3143                           ;busyxlcd.c: 37: {
  3144                           ;busyxlcd.c: 38: LATAbits.LATA2 = 0;
  3145  002692  9489               	bcf	3977,2,c	;volatile
  3146                           
  3147                           ;busyxlcd.c: 39: DelayFor18TCY();
  3148  002694  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3149                           
  3150                           ;busyxlcd.c: 40: LATAbits.LATA2 = 1;
  3151  002698  8489               	bsf	3977,2,c	;volatile
  3152                           
  3153                           ;busyxlcd.c: 41: DelayFor18TCY();
  3154  00269A  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3155                           
  3156                           ;busyxlcd.c: 42: LATAbits.LATA2 = 0;
  3157  00269E  9489               	bcf	3977,2,c	;volatile
  3158                           
  3159                           ;busyxlcd.c: 43: LATAbits.LATA1 = 0;
  3160  0026A0  9289               	bcf	3977,1,c	;volatile
  3161                           
  3162                           ;busyxlcd.c: 44: return 1;
  3163  0026A2  0E01               	movlw	1
  3164  0026A4  0012               	return	
  3165  0026A6                     l57:
  3166                           
  3167                           ;busyxlcd.c: 46: else
  3168                           ;busyxlcd.c: 47: {
  3169                           ;busyxlcd.c: 48: LATAbits.LATA2 = 0;
  3170  0026A6  9489               	bcf	3977,2,c	;volatile
  3171                           
  3172                           ;busyxlcd.c: 49: DelayFor18TCY();
  3173  0026A8  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3174                           
  3175                           ;busyxlcd.c: 50: LATAbits.LATA2 = 1;
  3176  0026AC  8489               	bsf	3977,2,c	;volatile
  3177                           
  3178                           ;busyxlcd.c: 51: DelayFor18TCY();
  3179  0026AE  ECF0  F013         	call	_DelayFor18TCY	;wreg free
  3180                           
  3181                           ;busyxlcd.c: 52: LATAbits.LATA2 = 0;
  3182  0026B2  9489               	bcf	3977,2,c	;volatile
  3183                           
  3184                           ;busyxlcd.c: 53: LATAbits.LATA1 = 0;
  3185  0026B4  9289               	bcf	3977,1,c	;volatile
  3186                           
  3187                           ;busyxlcd.c: 54: return 0;
  3188  0026B6  0E00               	movlw	0
  3189  0026B8  0012               	return	
  3190  0026BA                     __end_of_BusyXLCD:
  3191                           	opt stack 0
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           intcon	equ	0xFF2
  3197                           intcon2	equ	0xFF1
  3198                           postinc0	equ	0xFEE
  3199                           wreg	equ	0xFE8
  3200                           indf2	equ	0xFDF
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function _DelayFor18TCY *****************
  3206 ;; Defined at:
  3207 ;;		line 8 in file "C:/Users/etu20261/Desktop/1wire+usart/affi.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;		None               void
  3214 ;; Registers used:
  3215 ;;		None
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    2
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_BusyXLCD
  3232 ;;		_SetDDRamAddr
  3233 ;;		_WriteCmdXLCD
  3234 ;;		_WriteDataXLCD
  3235 ;;		_ReadAddrXLCD
  3236 ;;		_ReadDataXLCD
  3237 ;;		_SetCGRamAddr
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text22
  3242  0027E0                     __ptext22:
  3243                           	opt stack 0
  3244  0027E0                     _DelayFor18TCY:
  3245                           	opt stack 26
  3246                           
  3247                           ;incstack = 0
  3248                           ;incstack = 0
  3249  0027E0  F000               	nop		;# 
  3250  0027E2  F000               	nop		;# 
  3251  0027E4  F000               	nop		;# 
  3252  0027E6  F000               	nop		;# 
  3253  0027E8  F000               	nop		;# 
  3254  0027EA  F000               	nop		;# 
  3255  0027EC  F000               	nop		;# 
  3256  0027EE  F000               	nop		;# 
  3257  0027F0  F000               	nop		;# 
  3258  0027F2  F000               	nop		;# 
  3259  0027F4  F000               	nop		;# 
  3260  0027F6  F000               	nop		;# 
  3261  0027F8  F000               	nop		;# 
  3262  0027FA  F000               	nop		;# 
  3263  0027FC  F000               	nop		;# 
  3264  0027FE  F000               	nop		;# 
  3265  002800  0012               	return	
  3266  002802                     __end_of_DelayFor18TCY:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           intcon	equ	0xFF2
  3273                           intcon2	equ	0xFF1
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           indf2	equ	0xFDF
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _ftoa *****************
  3282 ;; Defined at:
  3283 ;;		line 4 in file "C:/Users/etu20261/Desktop/1wire+usart/ftoa/ftoa.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  x               3   26[BANK0 ] float 
  3286 ;;  str             2   29[BANK0 ] PTR unsigned char 
  3287 ;;		 -> capteur(5), 
  3288 ;;  prec            1   31[BANK0 ] unsigned char 
  3289 ;;  format          1   32[BANK0 ] unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  t               1   37[BANK0 ] unsigned char 
  3292 ;;  b               3   41[BANK0 ] float 
  3293 ;;  y               3   38[BANK0 ] float 
  3294 ;;  ie              2   52[BANK0 ] int 
  3295 ;;  k               2   50[BANK0 ] int 
  3296 ;;  ndig            2   48[BANK0 ] int 
  3297 ;;  fstyle          2   46[BANK0 ] int 
  3298 ;;  i               2   44[BANK0 ] int 
  3299 ;;  start           2   35[BANK0 ] PTR unsigned char 
  3300 ;;		 -> capteur(5), 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  2   26[BANK0 ] int 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3310 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;Total ram usage:       28 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    4
  3317 ;; This function calls:
  3318 ;;		___ftadd
  3319 ;;		___ftmul
  3320 ;;		___awdiv
  3321 ;;		___awtoft
  3322 ;;		___ftge
  3323 ;;		___ftneg
  3324 ;;		___fttol
  3325 ;;		___wmul
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text23
  3332  001008                     __ptext23:
  3333                           	opt stack 0
  3334  001008                     _ftoa:
  3335                           	opt stack 26
  3336                           
  3337                           ;ftoa.c: 5: int ie, i, k, ndig, fstyle;
  3338                           ;ftoa.c: 6: double y;
  3339                           ;ftoa.c: 7: char *start;
  3340                           ;ftoa.c: 9: start=str;
  3341                           
  3342                           ;incstack = 0
  3343                           ;incstack = 0
  3344  001008  C07D  F083         	movff	ftoa@str,ftoa@start
  3345  00100C  C07E  F084         	movff	ftoa@str+1,ftoa@start+1
  3346                           
  3347                           ;ftoa.c: 12: ndig=prec+1;
  3348  001010  0E01               	movlw	1
  3349  001012  0100               	movlb	0	; () banked
  3350  001014  0100               	movlb	0	; () banked
  3351  001016  257F               	addwf	ftoa@prec& (0+255),w,b
  3352  001018  0100               	movlb	0	; () banked
  3353  00101A  0100               	movlb	0	; () banked
  3354  00101C  6F90               	movwf	ftoa@ndig& (0+255),b
  3355  00101E  0100               	movlb	0	; () banked
  3356  001020  0100               	movlb	0	; () banked
  3357  001022  6B91               	clrf	(ftoa@ndig+1)& (0+255),b
  3358  001024  0E00               	movlw	0
  3359  001026  2391               	addwfc	(ftoa@ndig+1)& (0+255),f,b
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;ftoa.c: 15: if (prec>22)
  3363                           
  3364                           ; BSR set to: 0
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;ftoa.c: 14: ndig=7;
  3368                           
  3369                           ;ftoa.c: 13: if (prec<0)
  3370  001028  0E16               	movlw	22
  3371  00102A  0100               	movlb	0	; () banked
  3372  00102C  0100               	movlb	0	; () banked
  3373  00102E  657F               	cpfsgt	ftoa@prec& (0+255),b
  3374  001030  D007               	goto	l4
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;ftoa.c: 16: ndig=23;
  3378  001032  0E00               	movlw	0
  3379  001034  0100               	movlb	0	; () banked
  3380  001036  0100               	movlb	0	; () banked
  3381  001038  6F91               	movwf	(ftoa@ndig+1)& (0+255),b
  3382  00103A  0E17               	movlw	23
  3383  00103C  0100               	movlb	0	; () banked
  3384  00103E  6F90               	movwf	ftoa@ndig& (0+255),b
  3385  001040                     l4:
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;ftoa.c: 18: fstyle = 0;
  3389  001040  0E00               	movlw	0
  3390  001042  0100               	movlb	0	; () banked
  3391  001044  0100               	movlb	0	; () banked
  3392  001046  6F8F               	movwf	(ftoa@fstyle+1)& (0+255),b
  3393  001048  0E00               	movlw	0
  3394  00104A  0100               	movlb	0	; () banked
  3395  00104C  6F8E               	movwf	ftoa@fstyle& (0+255),b
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;ftoa.c: 19: if (format == 'f' || format == 'F')
  3399  00104E  0100               	movlb	0	; () banked
  3400  001050  0100               	movlb	0	; () banked
  3401  001052  5180               	movf	ftoa@format& (0+255),w,b
  3402  001054  0A66               	xorlw	102
  3403  001056  B4D8               	btfsc	status,2,c
  3404  001058  D006               	goto	l3184
  3405                           
  3406                           ; BSR set to: 0
  3407  00105A  0100               	movlb	0	; () banked
  3408  00105C  0100               	movlb	0	; () banked
  3409  00105E  5180               	movf	ftoa@format& (0+255),w,b
  3410  001060  0A46               	xorlw	70
  3411  001062  A4D8               	btfss	status,2,c
  3412  001064  D007               	goto	l3186
  3413  001066                     l3184:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;ftoa.c: 20: fstyle = 1;
  3417  001066  0E00               	movlw	0
  3418  001068  0100               	movlb	0	; () banked
  3419  00106A  0100               	movlb	0	; () banked
  3420  00106C  6F8F               	movwf	(ftoa@fstyle+1)& (0+255),b
  3421  00106E  0E01               	movlw	1
  3422  001070  0100               	movlb	0	; () banked
  3423  001072  6F8E               	movwf	ftoa@fstyle& (0+255),b
  3424  001074                     l3186:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;ftoa.c: 21: if (format=='g' || format=='G')
  3428  001074  0100               	movlb	0	; () banked
  3429  001076  0100               	movlb	0	; () banked
  3430  001078  5180               	movf	ftoa@format& (0+255),w,b
  3431  00107A  0A67               	xorlw	103
  3432  00107C  B4D8               	btfsc	status,2,c
  3433  00107E  D006               	goto	l3190
  3434                           
  3435                           ; BSR set to: 0
  3436  001080  0100               	movlb	0	; () banked
  3437  001082  0100               	movlb	0	; () banked
  3438  001084  5180               	movf	ftoa@format& (0+255),w,b
  3439  001086  0A47               	xorlw	71
  3440  001088  A4D8               	btfss	status,2,c
  3441  00108A  D007               	goto	l8
  3442  00108C                     l3190:
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;ftoa.c: 22: fstyle=2;
  3446  00108C  0E00               	movlw	0
  3447  00108E  0100               	movlb	0	; () banked
  3448  001090  0100               	movlb	0	; () banked
  3449  001092  6F8F               	movwf	(ftoa@fstyle+1)& (0+255),b
  3450  001094  0E02               	movlw	2
  3451  001096  0100               	movlb	0	; () banked
  3452  001098  6F8E               	movwf	ftoa@fstyle& (0+255),b
  3453  00109A                     l8:
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;ftoa.c: 24: ie = 0;
  3457  00109A  0E00               	movlw	0
  3458  00109C  0100               	movlb	0	; () banked
  3459  00109E  0100               	movlb	0	; () banked
  3460  0010A0  6F95               	movwf	(ftoa@ie+1)& (0+255),b
  3461  0010A2  0E00               	movlw	0
  3462  0010A4  0100               	movlb	0	; () banked
  3463  0010A6  6F94               	movwf	ftoa@ie& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;ftoa.c: 26: if ( x < 0)
  3467  0010A8  0100               	movlb	0	; () banked
  3468  0010AA  0100               	movlb	0	; () banked
  3469  0010AC  517C               	movf	(ftoa@x+2)& (0+255),w,b
  3470  0010AE  0A80               	xorlw	128
  3471  0010B0  0F80               	addlw	128
  3472  0010B2  E107               	bnz	u2315
  3473  0010B4  0E00               	movlw	0
  3474  0010B6  0100               	movlb	0	; () banked
  3475  0010B8  5D7B               	subwf	(ftoa@x+1)& (0+255),w,b
  3476  0010BA  E103               	bnz	u2315
  3477  0010BC  0E00               	movlw	0
  3478  0010BE  0100               	movlb	0	; () banked
  3479  0010C0  5D7A               	subwf	ftoa@x& (0+255),w,b
  3480  0010C2                     u2315:
  3481  0010C2  B0D8               	btfsc	status,0,c
  3482  0010C4  D018               	goto	l3200
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;ftoa.c: 27: {
  3486                           ;ftoa.c: 28: *str++ = '-';
  3487  0010C6  C07D  FFD9         	movff	ftoa@str,fsr2l
  3488  0010CA  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  3489  0010CE  0E2D               	movlw	45
  3490  0010D0  6EDF               	movwf	indf2,c
  3491                           
  3492                           ; BSR set to: 0
  3493  0010D2  0100               	movlb	0	; () banked
  3494  0010D4  0100               	movlb	0	; () banked
  3495  0010D6  4B7D               	infsnz	ftoa@str& (0+255),f,b
  3496  0010D8  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;ftoa.c: 29: x = -x;
  3500  0010DA  C07A  F021         	movff	ftoa@x,?___ftneg
  3501  0010DE  C07B  F022         	movff	ftoa@x+1,?___ftneg+1
  3502  0010E2  C07C  F023         	movff	ftoa@x+2,?___ftneg+2
  3503  0010E6  ECDD  F013         	call	___ftneg	;wreg free
  3504  0010EA  C023  F07C         	movff	?___ftneg+2,ftoa@x+2
  3505  0010EE  C022  F07B         	movff	?___ftneg+1,ftoa@x+1
  3506  0010F2  C021  F07A         	movff	?___ftneg,ftoa@x
  3507  0010F6                     l3200:
  3508                           
  3509                           ;ftoa.c: 30: }
  3510                           ;ftoa.c: 33: if (x!=0.0)
  3511  0010F6  0E7F               	movlw	127
  3512  0010F8  0100               	movlb	0	; () banked
  3513  0010FA  0100               	movlb	0	; () banked
  3514  0010FC  157C               	andwf	(ftoa@x+2)& (0+255),w,b
  3515  0010FE  0100               	movlb	0	; () banked
  3516  001100  117B               	iorwf	(ftoa@x+1)& (0+255),w,b
  3517  001102  0100               	movlb	0	; () banked
  3518  001104  117A               	iorwf	ftoa@x& (0+255),w,b
  3519  001106  A4D8               	btfss	status,2,c
  3520  001108  D020               	goto	l3208
  3521  00110A  D04E               	goto	l3214
  3522  00110C                     l3204:
  3523                           
  3524                           ;ftoa.c: 36: {
  3525                           ;ftoa.c: 37: x =x* 10.0;
  3526  00110C  C07A  F060         	movff	ftoa@x,?___ftmul
  3527  001110  C07B  F061         	movff	ftoa@x+1,?___ftmul+1
  3528  001114  C07C  F062         	movff	ftoa@x+2,?___ftmul+2
  3529  001118  0E00               	movlw	0
  3530  00111A  0100               	movlb	0	; () banked
  3531  00111C  0100               	movlb	0	; () banked
  3532  00111E  6F63               	movwf	(?___ftmul+3)& (0+255),b
  3533  001120  0E20               	movlw	32
  3534  001122  0100               	movlb	0	; () banked
  3535  001124  0100               	movlb	0	; () banked
  3536  001126  6F64               	movwf	(?___ftmul+4)& (0+255),b
  3537  001128  0E41               	movlw	65
  3538  00112A  0100               	movlb	0	; () banked
  3539  00112C  0100               	movlb	0	; () banked
  3540  00112E  6F65               	movwf	(?___ftmul+5)& (0+255),b
  3541  001130  EC57  F00E         	call	___ftmul	;wreg free
  3542  001134  C062  F07C         	movff	?___ftmul+2,ftoa@x+2
  3543  001138  C061  F07B         	movff	?___ftmul+1,ftoa@x+1
  3544  00113C  C060  F07A         	movff	?___ftmul,ftoa@x
  3545                           
  3546                           ;ftoa.c: 38: ie--;
  3547  001140  0100               	movlb	0	; () banked
  3548  001142  0100               	movlb	0	; () banked
  3549  001144  0794               	decf	ftoa@ie& (0+255),f,b
  3550  001146  A0D8               	btfss	status,0,c
  3551  001148  0795               	decf	(ftoa@ie+1)& (0+255),f,b
  3552  00114A                     l3208:
  3553                           
  3554                           ; BSR set to: 0
  3555  00114A  C07A  F021         	movff	ftoa@x,?___ftge
  3556  00114E  C07B  F022         	movff	ftoa@x+1,?___ftge+1
  3557  001152  C07C  F023         	movff	ftoa@x+2,?___ftge+2
  3558  001156  0E00               	movlw	0
  3559  001158  6E24               	movwf	?___ftge+3,c
  3560  00115A  0E80               	movlw	128
  3561  00115C  6E25               	movwf	?___ftge+4,c
  3562  00115E  0E3F               	movlw	63
  3563  001160  6E26               	movwf	?___ftge+5,c
  3564  001162  EC80  F011         	call	___ftge	;wreg free
  3565  001166  B0D8               	btfsc	status,0,c
  3566  001168  D01F               	goto	l3214
  3567  00116A  D7D0               	goto	l3204
  3568  00116C                     l3210:
  3569                           
  3570                           ;ftoa.c: 44: {
  3571                           ;ftoa.c: 45: x = x*(1.0/10.0);
  3572  00116C  C07A  F060         	movff	ftoa@x,?___ftmul
  3573  001170  C07B  F061         	movff	ftoa@x+1,?___ftmul+1
  3574  001174  C07C  F062         	movff	ftoa@x+2,?___ftmul+2
  3575  001178  0ECD               	movlw	205
  3576  00117A  0100               	movlb	0	; () banked
  3577  00117C  0100               	movlb	0	; () banked
  3578  00117E  6F63               	movwf	(?___ftmul+3)& (0+255),b
  3579  001180  0ECC               	movlw	204
  3580  001182  0100               	movlb	0	; () banked
  3581  001184  0100               	movlb	0	; () banked
  3582  001186  6F64               	movwf	(?___ftmul+4)& (0+255),b
  3583  001188  0E3D               	movlw	61
  3584  00118A  0100               	movlb	0	; () banked
  3585  00118C  0100               	movlb	0	; () banked
  3586  00118E  6F65               	movwf	(?___ftmul+5)& (0+255),b
  3587  001190  EC57  F00E         	call	___ftmul	;wreg free
  3588  001194  C062  F07C         	movff	?___ftmul+2,ftoa@x+2
  3589  001198  C061  F07B         	movff	?___ftmul+1,ftoa@x+1
  3590  00119C  C060  F07A         	movff	?___ftmul,ftoa@x
  3591                           
  3592                           ;ftoa.c: 46: ie++;
  3593  0011A0  0100               	movlb	0	; () banked
  3594  0011A2  0100               	movlb	0	; () banked
  3595  0011A4  4B94               	infsnz	ftoa@ie& (0+255),f,b
  3596  0011A6  2B95               	incf	(ftoa@ie+1)& (0+255),f,b
  3597  0011A8                     l3214:
  3598  0011A8  C07A  F021         	movff	ftoa@x,?___ftge
  3599  0011AC  C07B  F022         	movff	ftoa@x+1,?___ftge+1
  3600  0011B0  C07C  F023         	movff	ftoa@x+2,?___ftge+2
  3601  0011B4  0E00               	movlw	0
  3602  0011B6  6E24               	movwf	?___ftge+3,c
  3603  0011B8  0E20               	movlw	32
  3604  0011BA  6E25               	movwf	?___ftge+4,c
  3605  0011BC  0E41               	movlw	65
  3606  0011BE  6E26               	movwf	?___ftge+5,c
  3607  0011C0  EC80  F011         	call	___ftge	;wreg free
  3608  0011C4  B0D8               	btfsc	status,0,c
  3609  0011C6  D7D2               	goto	l3210
  3610                           
  3611                           ;ftoa.c: 47: }
  3612                           ;ftoa.c: 61: if (fstyle)
  3613  0011C8  0100               	movlb	0	; () banked
  3614  0011CA  0100               	movlb	0	; () banked
  3615  0011CC  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  3616  0011CE  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  3617  0011D0  B4D8               	btfsc	status,2,c
  3618  0011D2  D011               	goto	l3220
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;ftoa.c: 62: ndig =ndig + ie;
  3622  0011D4  0100               	movlb	0	; () banked
  3623  0011D6  0100               	movlb	0	; () banked
  3624  0011D8  5194               	movf	ftoa@ie& (0+255),w,b
  3625  0011DA  0100               	movlb	0	; () banked
  3626  0011DC  0100               	movlb	0	; () banked
  3627  0011DE  2590               	addwf	ftoa@ndig& (0+255),w,b
  3628  0011E0  0100               	movlb	0	; () banked
  3629  0011E2  0100               	movlb	0	; () banked
  3630  0011E4  6F90               	movwf	ftoa@ndig& (0+255),b
  3631  0011E6  0100               	movlb	0	; () banked
  3632  0011E8  0100               	movlb	0	; () banked
  3633  0011EA  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  3634  0011EC  0100               	movlb	0	; () banked
  3635  0011EE  0100               	movlb	0	; () banked
  3636  0011F0  2191               	addwfc	(ftoa@ndig+1)& (0+255),w,b
  3637  0011F2  0100               	movlb	0	; () banked
  3638  0011F4  6F91               	movwf	(ftoa@ndig+1)& (0+255),b
  3639  0011F6                     l3220:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;ftoa.c: 64: if(prec==0 && ie>ndig && fstyle)
  3643  0011F6  0100               	movlb	0	; () banked
  3644  0011F8  0100               	movlb	0	; () banked
  3645  0011FA  677F               	tstfsz	ftoa@prec& (0+255),b
  3646  0011FC  D01E               	goto	l3228
  3647                           
  3648                           ; BSR set to: 0
  3649  0011FE  0100               	movlb	0	; () banked
  3650  001200  0100               	movlb	0	; () banked
  3651  001202  5191               	movf	(ftoa@ndig+1)& (0+255),w,b
  3652  001204  0A80               	xorlw	128
  3653  001206  0100               	movlb	0	; () banked
  3654  001208  6F81               	movwf	??_ftoa& (0+255),b
  3655  00120A  0100               	movlb	0	; () banked
  3656  00120C  0100               	movlb	0	; () banked
  3657  00120E  5194               	movf	ftoa@ie& (0+255),w,b
  3658  001210  0100               	movlb	0	; () banked
  3659  001212  0100               	movlb	0	; () banked
  3660  001214  5D90               	subwf	ftoa@ndig& (0+255),w,b
  3661  001216  0100               	movlb	0	; () banked
  3662  001218  0100               	movlb	0	; () banked
  3663  00121A  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  3664  00121C  0A80               	xorlw	128
  3665  00121E  0100               	movlb	0	; () banked
  3666  001220  5981               	subwfb	??_ftoa& (0+255),w,b
  3667  001222  B0D8               	btfsc	status,0,c
  3668  001224  D00A               	goto	l3228
  3669                           
  3670                           ; BSR set to: 0
  3671  001226  0100               	movlb	0	; () banked
  3672  001228  0100               	movlb	0	; () banked
  3673  00122A  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  3674  00122C  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  3675  00122E  B4D8               	btfsc	status,2,c
  3676  001230  D004               	goto	l3228
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;ftoa.c: 65: {
  3680                           ;ftoa.c: 66: ndig=ie;
  3681  001232  C094  F090         	movff	ftoa@ie,ftoa@ndig
  3682  001236  C095  F091         	movff	ftoa@ie+1,ftoa@ndig+1
  3683  00123A                     l3228:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;ftoa.c: 67: }
  3687                           ;ftoa.c: 71: y=1;
  3688  00123A  0E00               	movlw	0
  3689  00123C  0100               	movlb	0	; () banked
  3690  00123E  0100               	movlb	0	; () banked
  3691  001240  6F86               	movwf	ftoa@y& (0+255),b
  3692  001242  0E80               	movlw	128
  3693  001244  0100               	movlb	0	; () banked
  3694  001246  0100               	movlb	0	; () banked
  3695  001248  6F87               	movwf	(ftoa@y+1)& (0+255),b
  3696  00124A  0E3F               	movlw	63
  3697  00124C  0100               	movlb	0	; () banked
  3698  00124E  0100               	movlb	0	; () banked
  3699  001250  6F88               	movwf	(ftoa@y+2)& (0+255),b
  3700                           
  3701                           ;ftoa.c: 72: for (i = 1; i < ndig; i++)
  3702  001252  0E00               	movlw	0
  3703  001254  0100               	movlb	0	; () banked
  3704  001256  0100               	movlb	0	; () banked
  3705  001258  6F8D               	movwf	(ftoa@i+1)& (0+255),b
  3706  00125A  0E01               	movlw	1
  3707  00125C  0100               	movlb	0	; () banked
  3708  00125E  6F8C               	movwf	ftoa@i& (0+255),b
  3709  001260  D01E               	goto	l3234
  3710  001262                     l3230:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;ftoa.c: 73: y = y *(1.0/10.0);
  3714  001262  C086  F060         	movff	ftoa@y,?___ftmul
  3715  001266  C087  F061         	movff	ftoa@y+1,?___ftmul+1
  3716  00126A  C088  F062         	movff	ftoa@y+2,?___ftmul+2
  3717  00126E  0ECD               	movlw	205
  3718  001270  0100               	movlb	0	; () banked
  3719  001272  0100               	movlb	0	; () banked
  3720  001274  6F63               	movwf	(?___ftmul+3)& (0+255),b
  3721  001276  0ECC               	movlw	204
  3722  001278  0100               	movlb	0	; () banked
  3723  00127A  0100               	movlb	0	; () banked
  3724  00127C  6F64               	movwf	(?___ftmul+4)& (0+255),b
  3725  00127E  0E3D               	movlw	61
  3726  001280  0100               	movlb	0	; () banked
  3727  001282  0100               	movlb	0	; () banked
  3728  001284  6F65               	movwf	(?___ftmul+5)& (0+255),b
  3729  001286  EC57  F00E         	call	___ftmul	;wreg free
  3730  00128A  C062  F088         	movff	?___ftmul+2,ftoa@y+2
  3731  00128E  C061  F087         	movff	?___ftmul+1,ftoa@y+1
  3732  001292  C060  F086         	movff	?___ftmul,ftoa@y
  3733  001296  0100               	movlb	0	; () banked
  3734  001298  0100               	movlb	0	; () banked
  3735  00129A  4B8C               	infsnz	ftoa@i& (0+255),f,b
  3736  00129C  2B8D               	incf	(ftoa@i+1)& (0+255),f,b
  3737  00129E                     l3234:
  3738                           
  3739                           ; BSR set to: 0
  3740  00129E  0100               	movlb	0	; () banked
  3741  0012A0  0100               	movlb	0	; () banked
  3742  0012A2  518D               	movf	(ftoa@i+1)& (0+255),w,b
  3743  0012A4  0A80               	xorlw	128
  3744  0012A6  0100               	movlb	0	; () banked
  3745  0012A8  6F81               	movwf	??_ftoa& (0+255),b
  3746  0012AA  0100               	movlb	0	; () banked
  3747  0012AC  5190               	movf	ftoa@ndig& (0+255),w,b
  3748  0012AE  0100               	movlb	0	; () banked
  3749  0012B0  0100               	movlb	0	; () banked
  3750  0012B2  5D8C               	subwf	ftoa@i& (0+255),w,b
  3751  0012B4  0100               	movlb	0	; () banked
  3752  0012B6  0100               	movlb	0	; () banked
  3753  0012B8  5191               	movf	(ftoa@ndig+1)& (0+255),w,b
  3754  0012BA  0A80               	xorlw	128
  3755  0012BC  0100               	movlb	0	; () banked
  3756  0012BE  5981               	subwfb	??_ftoa& (0+255),w,b
  3757  0012C0  A0D8               	btfss	status,0,c
  3758  0012C2  D7CF               	goto	l3230
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;ftoa.c: 75: x = x+ y *(1.0/2.0);
  3762                           
  3763                           ; BSR set to: 0
  3764  0012C4  0E00               	movlw	0
  3765  0012C6  0100               	movlb	0	; () banked
  3766  0012C8  0100               	movlb	0	; () banked
  3767  0012CA  6F63               	movwf	(?___ftmul+3)& (0+255),b
  3768  0012CC  0E00               	movlw	0
  3769  0012CE  0100               	movlb	0	; () banked
  3770  0012D0  0100               	movlb	0	; () banked
  3771  0012D2  6F64               	movwf	(?___ftmul+4)& (0+255),b
  3772  0012D4  0E3F               	movlw	63
  3773  0012D6  0100               	movlb	0	; () banked
  3774  0012D8  0100               	movlb	0	; () banked
  3775  0012DA  6F65               	movwf	(?___ftmul+5)& (0+255),b
  3776  0012DC  C086  F060         	movff	ftoa@y,?___ftmul
  3777  0012E0  C087  F061         	movff	ftoa@y+1,?___ftmul+1
  3778  0012E4  C088  F062         	movff	ftoa@y+2,?___ftmul+2
  3779  0012E8  EC57  F00E         	call	___ftmul	;wreg free
  3780  0012EC  C062  F06E         	movff	?___ftmul+2,?___ftadd+2
  3781  0012F0  C061  F06D         	movff	?___ftmul+1,?___ftadd+1
  3782  0012F4  C060  F06C         	movff	?___ftmul,?___ftadd
  3783  0012F8  C07A  F06F         	movff	ftoa@x,?___ftadd+3
  3784  0012FC  C07B  F070         	movff	ftoa@x+1,?___ftadd+4
  3785  001300  C07C  F071         	movff	ftoa@x+2,?___ftadd+5
  3786  001304  EC7E  F00B         	call	___ftadd	;wreg free
  3787  001308  C06E  F07C         	movff	?___ftadd+2,ftoa@x+2
  3788  00130C  C06D  F07B         	movff	?___ftadd+1,ftoa@x+1
  3789  001310  C06C  F07A         	movff	?___ftadd,ftoa@x
  3790                           
  3791                           ;ftoa.c: 78: if (x >= 10.0)
  3792  001314  C07A  F021         	movff	ftoa@x,?___ftge
  3793  001318  C07B  F022         	movff	ftoa@x+1,?___ftge+1
  3794  00131C  C07C  F023         	movff	ftoa@x+2,?___ftge+2
  3795  001320  0E00               	movlw	0
  3796  001322  6E24               	movwf	?___ftge+3,c
  3797  001324  0E20               	movlw	32
  3798  001326  6E25               	movwf	?___ftge+4,c
  3799  001328  0E41               	movlw	65
  3800  00132A  6E26               	movwf	?___ftge+5,c
  3801  00132C  EC80  F011         	call	___ftge	;wreg free
  3802  001330  A0D8               	btfss	status,0,c
  3803  001332  D014               	goto	l3244
  3804                           
  3805                           ;ftoa.c: 79: {
  3806                           ;ftoa.c: 80: x = 1.0;
  3807  001334  0E00               	movlw	0
  3808  001336  0100               	movlb	0	; () banked
  3809  001338  0100               	movlb	0	; () banked
  3810  00133A  6F7A               	movwf	ftoa@x& (0+255),b
  3811  00133C  0E80               	movlw	128
  3812  00133E  0100               	movlb	0	; () banked
  3813  001340  0100               	movlb	0	; () banked
  3814  001342  6F7B               	movwf	(ftoa@x+1)& (0+255),b
  3815  001344  0E3F               	movlw	63
  3816  001346  0100               	movlb	0	; () banked
  3817  001348  0100               	movlb	0	; () banked
  3818  00134A  6F7C               	movwf	(ftoa@x+2)& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;ftoa.c: 81: ie++;
  3822  00134C  0100               	movlb	0	; () banked
  3823  00134E  0100               	movlb	0	; () banked
  3824  001350  4B94               	infsnz	ftoa@ie& (0+255),f,b
  3825  001352  2B95               	incf	(ftoa@ie+1)& (0+255),f,b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;ftoa.c: 82: ndig++;
  3829  001354  0100               	movlb	0	; () banked
  3830  001356  0100               	movlb	0	; () banked
  3831  001358  4B90               	infsnz	ftoa@ndig& (0+255),f,b
  3832  00135A  2B91               	incf	(ftoa@ndig+1)& (0+255),f,b
  3833  00135C                     l3244:
  3834                           
  3835                           ;ftoa.c: 83: }
  3836                           ;ftoa.c: 86: if (fstyle && ie<0)
  3837  00135C  0100               	movlb	0	; () banked
  3838  00135E  0100               	movlb	0	; () banked
  3839  001360  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  3840  001362  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  3841  001364  B4D8               	btfsc	status,2,c
  3842  001366  D063               	goto	l3272
  3843                           
  3844                           ; BSR set to: 0
  3845  001368  0100               	movlb	0	; () banked
  3846  00136A  0100               	movlb	0	; () banked
  3847  00136C  AF95               	btfss	(ftoa@ie+1)& (0+255),7,b
  3848  00136E  D05F               	goto	l3272
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;ftoa.c: 87: {
  3852                           ;ftoa.c: 88: *str++ = '0';
  3853  001370  C07D  FFD9         	movff	ftoa@str,fsr2l
  3854  001374  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  3855  001378  0E30               	movlw	48
  3856  00137A  6EDF               	movwf	indf2,c
  3857                           
  3858                           ; BSR set to: 0
  3859  00137C  0100               	movlb	0	; () banked
  3860  00137E  0100               	movlb	0	; () banked
  3861  001380  4B7D               	infsnz	ftoa@str& (0+255),f,b
  3862  001382  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;ftoa.c: 89: if (prec!=0)
  3866  001384  0100               	movlb	0	; () banked
  3867  001386  0100               	movlb	0	; () banked
  3868  001388  517F               	movf	ftoa@prec& (0+255),w,b
  3869  00138A  B4D8               	btfsc	status,2,c
  3870  00138C  D00A               	goto	l3258
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;ftoa.c: 90: *str++ = '.';
  3874  00138E  C07D  FFD9         	movff	ftoa@str,fsr2l
  3875  001392  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  3876  001396  0E2E               	movlw	46
  3877  001398  6EDF               	movwf	indf2,c
  3878                           
  3879                           ; BSR set to: 0
  3880  00139A  0100               	movlb	0	; () banked
  3881  00139C  0100               	movlb	0	; () banked
  3882  00139E  4B7D               	infsnz	ftoa@str& (0+255),f,b
  3883  0013A0  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  3884  0013A2                     l3258:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;ftoa.c: 91: if (ndig < 0)
  3888  0013A2  0100               	movlb	0	; () banked
  3889  0013A4  0100               	movlb	0	; () banked
  3890  0013A6  AF91               	btfss	(ftoa@ndig+1)& (0+255),7,b
  3891  0013A8  D01A               	goto	l3262
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;ftoa.c: 92: ie = ie-ndig;
  3895  0013AA  0100               	movlb	0	; () banked
  3896  0013AC  C090  F081         	movff	ftoa@ndig,??_ftoa
  3897  0013B0  0100               	movlb	0	; () banked
  3898  0013B2  C091  F082         	movff	ftoa@ndig+1,??_ftoa+1
  3899  0013B6  0100               	movlb	0	; () banked
  3900  0013B8  1F81               	comf	??_ftoa& (0+255),f,b
  3901  0013BA  1F82               	comf	(??_ftoa+1)& (0+255),f,b
  3902  0013BC  4B81               	infsnz	??_ftoa& (0+255),f,b
  3903  0013BE  2B82               	incf	(??_ftoa+1)& (0+255),f,b
  3904  0013C0  0100               	movlb	0	; () banked
  3905  0013C2  0100               	movlb	0	; () banked
  3906  0013C4  5194               	movf	ftoa@ie& (0+255),w,b
  3907  0013C6  0100               	movlb	0	; () banked
  3908  0013C8  2581               	addwf	??_ftoa& (0+255),w,b
  3909  0013CA  0100               	movlb	0	; () banked
  3910  0013CC  0100               	movlb	0	; () banked
  3911  0013CE  6F94               	movwf	ftoa@ie& (0+255),b
  3912  0013D0  0100               	movlb	0	; () banked
  3913  0013D2  0100               	movlb	0	; () banked
  3914  0013D4  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  3915  0013D6  0100               	movlb	0	; () banked
  3916  0013D8  2182               	addwfc	(??_ftoa+1)& (0+255),w,b
  3917  0013DA  0100               	movlb	0	; () banked
  3918  0013DC  6F95               	movwf	(ftoa@ie+1)& (0+255),b
  3919  0013DE                     l3262:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;ftoa.c: 93: for (i = -1; i > ie; i--)
  3923  0013DE  0100               	movlb	0	; () banked
  3924  0013E0  0100               	movlb	0	; () banked
  3925  0013E2  698C               	setf	ftoa@i& (0+255),b
  3926  0013E4  0100               	movlb	0	; () banked
  3927  0013E6  698D               	setf	(ftoa@i+1)& (0+255),b
  3928  0013E8  D00F               	goto	l3270
  3929  0013EA                     l3264:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;ftoa.c: 94: *str++ = '0';
  3933  0013EA  C07D  FFD9         	movff	ftoa@str,fsr2l
  3934  0013EE  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  3935  0013F2  0E30               	movlw	48
  3936  0013F4  6EDF               	movwf	indf2,c
  3937                           
  3938                           ; BSR set to: 0
  3939  0013F6  0100               	movlb	0	; () banked
  3940  0013F8  0100               	movlb	0	; () banked
  3941  0013FA  4B7D               	infsnz	ftoa@str& (0+255),f,b
  3942  0013FC  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 0
  3945  0013FE  0100               	movlb	0	; () banked
  3946  001400  0100               	movlb	0	; () banked
  3947  001402  078C               	decf	ftoa@i& (0+255),f,b
  3948  001404  A0D8               	btfss	status,0,c
  3949  001406  078D               	decf	(ftoa@i+1)& (0+255),f,b
  3950  001408                     l3270:
  3951                           
  3952                           ; BSR set to: 0
  3953  001408  0100               	movlb	0	; () banked
  3954  00140A  0100               	movlb	0	; () banked
  3955  00140C  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  3956  00140E  0A80               	xorlw	128
  3957  001410  0100               	movlb	0	; () banked
  3958  001412  6F81               	movwf	??_ftoa& (0+255),b
  3959  001414  0100               	movlb	0	; () banked
  3960  001416  518C               	movf	ftoa@i& (0+255),w,b
  3961  001418  0100               	movlb	0	; () banked
  3962  00141A  0100               	movlb	0	; () banked
  3963  00141C  5D94               	subwf	ftoa@ie& (0+255),w,b
  3964  00141E  0100               	movlb	0	; () banked
  3965  001420  0100               	movlb	0	; () banked
  3966  001422  518D               	movf	(ftoa@i+1)& (0+255),w,b
  3967  001424  0A80               	xorlw	128
  3968  001426  0100               	movlb	0	; () banked
  3969  001428  5981               	subwfb	??_ftoa& (0+255),w,b
  3970  00142A  A0D8               	btfss	status,0,c
  3971  00142C  D7DE               	goto	l3264
  3972  00142E                     l3272:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;ftoa.c: 95: }
  3976                           ;ftoa.c: 98: for (i=0; i < ndig; i++)
  3977  00142E  0E00               	movlw	0
  3978  001430  0100               	movlb	0	; () banked
  3979  001432  0100               	movlb	0	; () banked
  3980  001434  6F8D               	movwf	(ftoa@i+1)& (0+255),b
  3981  001436  0E00               	movlw	0
  3982  001438  0100               	movlb	0	; () banked
  3983  00143A  6F8C               	movwf	ftoa@i& (0+255),b
  3984  00143C  D0A9               	goto	l3304
  3985  00143E                     l3274:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;ftoa.c: 99: {
  3989                           ;ftoa.c: 100: float b;
  3990                           ;ftoa.c: 101: k = x;
  3991  00143E  C07A  F021         	movff	ftoa@x,?___fttol
  3992  001442  C07B  F022         	movff	ftoa@x+1,?___fttol+1
  3993  001446  C07C  F023         	movff	ftoa@x+2,?___fttol+2
  3994  00144A  ECE3  F00F         	call	___fttol	;wreg free
  3995  00144E  C021  F092         	movff	?___fttol,ftoa@k
  3996  001452  C022  F093         	movff	?___fttol+1,ftoa@k+1
  3997                           
  3998                           ;ftoa.c: 102: *str++ = k + '0';
  3999  001456  0100               	movlb	0	; () banked
  4000  001458  0100               	movlb	0	; () banked
  4001  00145A  5192               	movf	ftoa@k& (0+255),w,b
  4002  00145C  0F30               	addlw	48
  4003  00145E  C07D  FFD9         	movff	ftoa@str,fsr2l
  4004  001462  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4005  001466  6EDF               	movwf	indf2,c
  4006                           
  4007                           ; BSR set to: 0
  4008  001468  0100               	movlb	0	; () banked
  4009  00146A  0100               	movlb	0	; () banked
  4010  00146C  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4011  00146E  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;ftoa.c: 103: if (((!fstyle && i==0) || (fstyle && i==ie)) && prec!=0)
  4015  001470  0100               	movlb	0	; () banked
  4016  001472  0100               	movlb	0	; () banked
  4017  001474  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  4018  001476  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  4019  001478  A4D8               	btfss	status,2,c
  4020  00147A  D006               	goto	l3284
  4021                           
  4022                           ; BSR set to: 0
  4023  00147C  0100               	movlb	0	; () banked
  4024  00147E  0100               	movlb	0	; () banked
  4025  001480  518D               	movf	(ftoa@i+1)& (0+255),w,b
  4026  001482  118C               	iorwf	ftoa@i& (0+255),w,b
  4027  001484  B4D8               	btfsc	status,2,c
  4028  001486  D015               	goto	l3288
  4029  001488                     l3284:
  4030                           
  4031                           ; BSR set to: 0
  4032  001488  0100               	movlb	0	; () banked
  4033  00148A  0100               	movlb	0	; () banked
  4034  00148C  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  4035  00148E  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  4036  001490  B4D8               	btfsc	status,2,c
  4037  001492  D01E               	goto	l3294
  4038                           
  4039                           ; BSR set to: 0
  4040  001494  0100               	movlb	0	; () banked
  4041  001496  0100               	movlb	0	; () banked
  4042  001498  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  4043  00149A  0100               	movlb	0	; () banked
  4044  00149C  0100               	movlb	0	; () banked
  4045  00149E  198D               	xorwf	(ftoa@i+1)& (0+255),w,b
  4046  0014A0  E106               	bnz	u2495
  4047  0014A2  0100               	movlb	0	; () banked
  4048  0014A4  0100               	movlb	0	; () banked
  4049  0014A6  5194               	movf	ftoa@ie& (0+255),w,b
  4050  0014A8  0100               	movlb	0	; () banked
  4051  0014AA  0100               	movlb	0	; () banked
  4052  0014AC  198C               	xorwf	ftoa@i& (0+255),w,b
  4053  0014AE                     u2495:
  4054  0014AE  A4D8               	btfss	status,2,c
  4055  0014B0  D00F               	goto	l3294
  4056  0014B2                     l3288:
  4057                           
  4058                           ; BSR set to: 0
  4059  0014B2  0100               	movlb	0	; () banked
  4060  0014B4  0100               	movlb	0	; () banked
  4061  0014B6  517F               	movf	ftoa@prec& (0+255),w,b
  4062  0014B8  B4D8               	btfsc	status,2,c
  4063  0014BA  D00A               	goto	l3294
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;ftoa.c: 104: *str++ = '.';
  4067  0014BC  C07D  FFD9         	movff	ftoa@str,fsr2l
  4068  0014C0  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4069  0014C4  0E2E               	movlw	46
  4070  0014C6  6EDF               	movwf	indf2,c
  4071                           
  4072                           ; BSR set to: 0
  4073  0014C8  0100               	movlb	0	; () banked
  4074  0014CA  0100               	movlb	0	; () banked
  4075  0014CC  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4076  0014CE  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4077  0014D0                     l3294:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;ftoa.c: 105: b=(float)k;
  4081  0014D0  C092  F029         	movff	ftoa@k,?___awtoft
  4082  0014D4  C093  F02A         	movff	ftoa@k+1,?___awtoft+1
  4083  0014D8  EC85  F012         	call	___awtoft	;wreg free
  4084  0014DC  C02B  F08B         	movff	?___awtoft+2,ftoa@b+2
  4085  0014E0  C02A  F08A         	movff	?___awtoft+1,ftoa@b+1
  4086  0014E4  C029  F089         	movff	?___awtoft,ftoa@b
  4087                           
  4088                           ;ftoa.c: 108: b=b*10.0;
  4089  0014E8  C089  F060         	movff	ftoa@b,?___ftmul
  4090  0014EC  C08A  F061         	movff	ftoa@b+1,?___ftmul+1
  4091  0014F0  C08B  F062         	movff	ftoa@b+2,?___ftmul+2
  4092  0014F4  0E00               	movlw	0
  4093  0014F6  0100               	movlb	0	; () banked
  4094  0014F8  0100               	movlb	0	; () banked
  4095  0014FA  6F63               	movwf	(?___ftmul+3)& (0+255),b
  4096  0014FC  0E20               	movlw	32
  4097  0014FE  0100               	movlb	0	; () banked
  4098  001500  0100               	movlb	0	; () banked
  4099  001502  6F64               	movwf	(?___ftmul+4)& (0+255),b
  4100  001504  0E41               	movlw	65
  4101  001506  0100               	movlb	0	; () banked
  4102  001508  0100               	movlb	0	; () banked
  4103  00150A  6F65               	movwf	(?___ftmul+5)& (0+255),b
  4104  00150C  EC57  F00E         	call	___ftmul	;wreg free
  4105  001510  C062  F08B         	movff	?___ftmul+2,ftoa@b+2
  4106  001514  C061  F08A         	movff	?___ftmul+1,ftoa@b+1
  4107  001518  C060  F089         	movff	?___ftmul,ftoa@b
  4108                           
  4109                           ;ftoa.c: 109: x=x*10.0;
  4110  00151C  C07A  F060         	movff	ftoa@x,?___ftmul
  4111  001520  C07B  F061         	movff	ftoa@x+1,?___ftmul+1
  4112  001524  C07C  F062         	movff	ftoa@x+2,?___ftmul+2
  4113  001528  0E00               	movlw	0
  4114  00152A  0100               	movlb	0	; () banked
  4115  00152C  0100               	movlb	0	; () banked
  4116  00152E  6F63               	movwf	(?___ftmul+3)& (0+255),b
  4117  001530  0E20               	movlw	32
  4118  001532  0100               	movlb	0	; () banked
  4119  001534  0100               	movlb	0	; () banked
  4120  001536  6F64               	movwf	(?___ftmul+4)& (0+255),b
  4121  001538  0E41               	movlw	65
  4122  00153A  0100               	movlb	0	; () banked
  4123  00153C  0100               	movlb	0	; () banked
  4124  00153E  6F65               	movwf	(?___ftmul+5)& (0+255),b
  4125  001540  EC57  F00E         	call	___ftmul	;wreg free
  4126  001544  C062  F07C         	movff	?___ftmul+2,ftoa@x+2
  4127  001548  C061  F07B         	movff	?___ftmul+1,ftoa@x+1
  4128  00154C  C060  F07A         	movff	?___ftmul,ftoa@x
  4129                           
  4130                           ;ftoa.c: 110: x =x - b;
  4131  001550  C089  F021         	movff	ftoa@b,?___ftneg
  4132  001554  C08A  F022         	movff	ftoa@b+1,?___ftneg+1
  4133  001558  C08B  F023         	movff	ftoa@b+2,?___ftneg+2
  4134  00155C  ECDD  F013         	call	___ftneg	;wreg free
  4135  001560  C023  F06E         	movff	?___ftneg+2,?___ftadd+2
  4136  001564  C022  F06D         	movff	?___ftneg+1,?___ftadd+1
  4137  001568  C021  F06C         	movff	?___ftneg,?___ftadd
  4138  00156C  C07A  F06F         	movff	ftoa@x,?___ftadd+3
  4139  001570  C07B  F070         	movff	ftoa@x+1,?___ftadd+4
  4140  001574  C07C  F071         	movff	ftoa@x+2,?___ftadd+5
  4141  001578  EC7E  F00B         	call	___ftadd	;wreg free
  4142  00157C  C06E  F07C         	movff	?___ftadd+2,ftoa@x+2
  4143  001580  C06D  F07B         	movff	?___ftadd+1,ftoa@x+1
  4144  001584  C06C  F07A         	movff	?___ftadd,ftoa@x
  4145  001588  0100               	movlb	0	; () banked
  4146  00158A  0100               	movlb	0	; () banked
  4147  00158C  4B8C               	infsnz	ftoa@i& (0+255),f,b
  4148  00158E  2B8D               	incf	(ftoa@i+1)& (0+255),f,b
  4149  001590                     l3304:
  4150                           
  4151                           ; BSR set to: 0
  4152  001590  0100               	movlb	0	; () banked
  4153  001592  0100               	movlb	0	; () banked
  4154  001594  518D               	movf	(ftoa@i+1)& (0+255),w,b
  4155  001596  0A80               	xorlw	128
  4156  001598  0100               	movlb	0	; () banked
  4157  00159A  6F81               	movwf	??_ftoa& (0+255),b
  4158  00159C  0100               	movlb	0	; () banked
  4159  00159E  5190               	movf	ftoa@ndig& (0+255),w,b
  4160  0015A0  0100               	movlb	0	; () banked
  4161  0015A2  0100               	movlb	0	; () banked
  4162  0015A4  5D8C               	subwf	ftoa@i& (0+255),w,b
  4163  0015A6  0100               	movlb	0	; () banked
  4164  0015A8  0100               	movlb	0	; () banked
  4165  0015AA  5191               	movf	(ftoa@ndig+1)& (0+255),w,b
  4166  0015AC  0A80               	xorlw	128
  4167  0015AE  0100               	movlb	0	; () banked
  4168  0015B0  5981               	subwfb	??_ftoa& (0+255),w,b
  4169  0015B2  A0D8               	btfss	status,0,c
  4170  0015B4  D744               	goto	l3274
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;ftoa.c: 113: }
  4174                           ;ftoa.c: 116: if (!fstyle && ie != 0)
  4175                           
  4176                           ; BSR set to: 0
  4177  0015B6  0100               	movlb	0	; () banked
  4178  0015B8  0100               	movlb	0	; () banked
  4179  0015BA  518F               	movf	(ftoa@fstyle+1)& (0+255),w,b
  4180  0015BC  118E               	iorwf	ftoa@fstyle& (0+255),w,b
  4181  0015BE  A4D8               	btfss	status,2,c
  4182  0015C0  D092               	goto	l3342
  4183                           
  4184                           ; BSR set to: 0
  4185  0015C2  0100               	movlb	0	; () banked
  4186  0015C4  0100               	movlb	0	; () banked
  4187  0015C6  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  4188  0015C8  1194               	iorwf	ftoa@ie& (0+255),w,b
  4189  0015CA  B4D8               	btfsc	status,2,c
  4190  0015CC  D08C               	goto	l3342
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;ftoa.c: 117: {
  4194                           ;ftoa.c: 118: *str++ = format;
  4195  0015CE  C07D  FFD9         	movff	ftoa@str,fsr2l
  4196  0015D2  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4197  0015D6  0100               	movlb	0	; () banked
  4198  0015D8  C080  FFDF         	movff	ftoa@format,indf2
  4199                           
  4200                           ; BSR set to: 0
  4201  0015DC  0100               	movlb	0	; () banked
  4202  0015DE  0100               	movlb	0	; () banked
  4203  0015E0  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4204  0015E2  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;ftoa.c: 119: if (ie < 0)
  4208  0015E4  0100               	movlb	0	; () banked
  4209  0015E6  0100               	movlb	0	; () banked
  4210  0015E8  AF95               	btfss	(ftoa@ie+1)& (0+255),7,b
  4211  0015EA  D011               	goto	l3322
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;ftoa.c: 120: {
  4215                           ;ftoa.c: 121: ie = -ie;
  4216  0015EC  0100               	movlb	0	; () banked
  4217  0015EE  0100               	movlb	0	; () banked
  4218  0015F0  6D94               	negf	ftoa@ie& (0+255),b
  4219  0015F2  0100               	movlb	0	; () banked
  4220  0015F4  1F95               	comf	(ftoa@ie+1)& (0+255),f,b
  4221  0015F6  B0D8               	btfsc	status,0,c
  4222  0015F8  2B95               	incf	(ftoa@ie+1)& (0+255),f,b
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;ftoa.c: 122: *str++ = '-';
  4226  0015FA  C07D  FFD9         	movff	ftoa@str,fsr2l
  4227  0015FE  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4228  001602  0E2D               	movlw	45
  4229  001604  6EDF               	movwf	indf2,c
  4230                           
  4231                           ; BSR set to: 0
  4232  001606  0100               	movlb	0	; () banked
  4233  001608  0100               	movlb	0	; () banked
  4234  00160A  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4235  00160C  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4236  00160E                     l3322:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;ftoa.c: 123: }
  4240                           ;ftoa.c: 126: for (k=1000; k>ie; k=k/10);
  4241  00160E  0E03               	movlw	3
  4242  001610  0100               	movlb	0	; () banked
  4243  001612  0100               	movlb	0	; () banked
  4244  001614  6F93               	movwf	(ftoa@k+1)& (0+255),b
  4245  001616  0EE8               	movlw	232
  4246  001618  0100               	movlb	0	; () banked
  4247  00161A  6F92               	movwf	ftoa@k& (0+255),b
  4248  00161C  D00E               	goto	l3326
  4249  00161E                     l3324:
  4250                           
  4251                           ; BSR set to: 0
  4252  00161E  C092  F021         	movff	ftoa@k,?___awdiv
  4253  001622  C093  F022         	movff	ftoa@k+1,?___awdiv+1
  4254  001626  0E00               	movlw	0
  4255  001628  6E24               	movwf	?___awdiv+3,c
  4256  00162A  0E0A               	movlw	10
  4257  00162C  6E23               	movwf	?___awdiv+2,c
  4258  00162E  ECC8  F011         	call	___awdiv	;wreg free
  4259  001632  C021  F092         	movff	?___awdiv,ftoa@k
  4260  001636  C022  F093         	movff	?___awdiv+1,ftoa@k+1
  4261  00163A                     l3326:
  4262  00163A  0100               	movlb	0	; () banked
  4263  00163C  0100               	movlb	0	; () banked
  4264  00163E  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  4265  001640  0A80               	xorlw	128
  4266  001642  0100               	movlb	0	; () banked
  4267  001644  6F81               	movwf	??_ftoa& (0+255),b
  4268  001646  0100               	movlb	0	; () banked
  4269  001648  5192               	movf	ftoa@k& (0+255),w,b
  4270  00164A  0100               	movlb	0	; () banked
  4271  00164C  0100               	movlb	0	; () banked
  4272  00164E  5D94               	subwf	ftoa@ie& (0+255),w,b
  4273  001650  0100               	movlb	0	; () banked
  4274  001652  0100               	movlb	0	; () banked
  4275  001654  5193               	movf	(ftoa@k+1)& (0+255),w,b
  4276  001656  0A80               	xorlw	128
  4277  001658  0100               	movlb	0	; () banked
  4278  00165A  5981               	subwfb	??_ftoa& (0+255),w,b
  4279  00165C  A0D8               	btfss	status,0,c
  4280  00165E  D7DF               	goto	l3324
  4281  001660                     l3328:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;ftoa.c: 128: for (; k > 0; k=k/10)
  4285  001660  0100               	movlb	0	; () banked
  4286  001662  0100               	movlb	0	; () banked
  4287  001664  5193               	movf	(ftoa@k+1)& (0+255),w,b
  4288  001666  0A80               	xorlw	128
  4289  001668  0F80               	addlw	-128
  4290  00166A  0E01               	movlw	1
  4291  00166C  B4D8               	btfsc	status,2,c
  4292  00166E  5D92               	subwf	ftoa@k& (0+255),w,b
  4293  001670  A0D8               	btfss	status,0,c
  4294  001672  D039               	goto	l3342
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;ftoa.c: 129: {
  4298                           ;ftoa.c: 130: char t;
  4299                           ;ftoa.c: 132: *str++ = t + '0';
  4300                           
  4301                           ; BSR set to: 0
  4302                           
  4303                           ; BSR set to: 0
  4304  001674  0100               	movlb	0	; () banked
  4305  001676  0100               	movlb	0	; () banked
  4306  001678  5185               	movf	ftoa@t& (0+255),w,b
  4307  00167A  0F30               	addlw	48
  4308  00167C  C07D  FFD9         	movff	ftoa@str,fsr2l
  4309  001680  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4310  001684  6EDF               	movwf	indf2,c
  4311                           
  4312                           ; BSR set to: 0
  4313  001686  0100               	movlb	0	; () banked
  4314  001688  0100               	movlb	0	; () banked
  4315  00168A  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4316  00168C  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;ftoa.c: 133: ie = ie -(t*k);
  4320  00168E  0100               	movlb	0	; () banked
  4321  001690  C085  F021         	movff	ftoa@t,?___wmul
  4322  001694  6A22               	clrf	?___wmul+1,c
  4323  001696  C092  F023         	movff	ftoa@k,?___wmul+2
  4324  00169A  C093  F024         	movff	ftoa@k+1,?___wmul+3
  4325  00169E  EC5D  F013         	call	___wmul	;wreg free
  4326  0016A2  1E21               	comf	?___wmul,f,c
  4327  0016A4  1E22               	comf	?___wmul+1,f,c
  4328  0016A6  4A21               	infsnz	?___wmul,f,c
  4329  0016A8  2A22               	incf	?___wmul+1,f,c
  4330  0016AA  0100               	movlb	0	; () banked
  4331  0016AC  0100               	movlb	0	; () banked
  4332  0016AE  5194               	movf	ftoa@ie& (0+255),w,b
  4333  0016B0  0100               	movlb	0	; () banked
  4334  0016B2  2521               	addwf	?___wmul& (0+255),w,b
  4335  0016B4  0100               	movlb	0	; () banked
  4336  0016B6  0100               	movlb	0	; () banked
  4337  0016B8  6F94               	movwf	ftoa@ie& (0+255),b
  4338  0016BA  0100               	movlb	0	; () banked
  4339  0016BC  0100               	movlb	0	; () banked
  4340  0016BE  5195               	movf	(ftoa@ie+1)& (0+255),w,b
  4341  0016C0  0100               	movlb	0	; () banked
  4342  0016C2  2122               	addwfc	(?___wmul+1)& (0+255),w,b
  4343  0016C4  0100               	movlb	0	; () banked
  4344  0016C6  6F95               	movwf	(ftoa@ie+1)& (0+255),b
  4345                           
  4346                           ; BSR set to: 0
  4347  0016C8  C092  F021         	movff	ftoa@k,?___awdiv
  4348  0016CC  C093  F022         	movff	ftoa@k+1,?___awdiv+1
  4349  0016D0  0E00               	movlw	0
  4350  0016D2  6E24               	movwf	?___awdiv+3,c
  4351  0016D4  0E0A               	movlw	10
  4352  0016D6  6E23               	movwf	?___awdiv+2,c
  4353  0016D8  ECC8  F011         	call	___awdiv	;wreg free
  4354  0016DC  C021  F092         	movff	?___awdiv,ftoa@k
  4355  0016E0  C022  F093         	movff	?___awdiv+1,ftoa@k+1
  4356  0016E4  D7BD               	goto	l3328
  4357  0016E6                     l3342:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;ftoa.c: 134: }
  4361                           ;ftoa.c: 136: }
  4362                           ;ftoa.c: 137: *str++ = '\0';
  4363  0016E6  C07D  FFD9         	movff	ftoa@str,fsr2l
  4364  0016EA  C07E  FFDA         	movff	ftoa@str+1,fsr2h
  4365  0016EE  0E00               	movlw	0
  4366  0016F0  6EDF               	movwf	indf2,c
  4367                           
  4368                           ; BSR set to: 0
  4369  0016F2  0100               	movlb	0	; () banked
  4370  0016F4  0100               	movlb	0	; () banked
  4371  0016F6  4B7D               	infsnz	ftoa@str& (0+255),f,b
  4372  0016F8  2B7E               	incf	(ftoa@str+1)& (0+255),f,b
  4373  0016FA  0012               	return	
  4374  0016FC                     __end_of_ftoa:
  4375                           	opt stack 0
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           intcon	equ	0xFF2
  4381                           intcon2	equ	0xFF1
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           indf2	equ	0xFDF
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function ___wmul *****************
  4390 ;; Defined at:
  4391 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\wmul.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  multiplier      2   32[COMRAM] unsigned int 
  4394 ;;  multiplicand    2   34[COMRAM] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  product         2   36[COMRAM] unsigned int 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2   32[COMRAM] unsigned int 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0, prodl, prodh
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;Total ram usage:        6 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    2
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_ftoa
  4417 ;;		_Read_Temperature
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text24
  4422  0026BA                     __ptext24:
  4423                           	opt stack 0
  4424  0026BA                     ___wmul:
  4425                           	opt stack 27
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;incstack = 0
  4429                           ;incstack = 0
  4430  0026BA  5021               	movf	___wmul@multiplier,w,c
  4431  0026BC  0223               	mulwf	___wmul@multiplicand,c
  4432  0026BE  CFF3 F025          	movff	prodl,___wmul@product
  4433  0026C2  CFF4 F026          	movff	prodh,___wmul@product+1
  4434  0026C6  5021               	movf	___wmul@multiplier,w,c
  4435  0026C8  0224               	mulwf	___wmul@multiplicand+1,c
  4436  0026CA  CFF3 FFF4          	movff	prodl,prodh
  4437  0026CE  6AF3               	clrf	prodl,c
  4438  0026D0  50F3               	movf	prodl,w,c
  4439  0026D2  2625               	addwf	___wmul@product,f,c
  4440  0026D4  50F4               	movf	prodh,w,c
  4441  0026D6  2226               	addwfc	___wmul@product+1,f,c
  4442  0026D8  5022               	movf	___wmul@multiplier+1,w,c
  4443  0026DA  0223               	mulwf	___wmul@multiplicand,c
  4444  0026DC  CFF3 FFF4          	movff	prodl,prodh
  4445  0026E0  6AF3               	clrf	prodl,c
  4446  0026E2  50F3               	movf	prodl,w,c
  4447  0026E4  2625               	addwf	___wmul@product,f,c
  4448  0026E6  50F4               	movf	prodh,w,c
  4449  0026E8  2226               	addwfc	___wmul@product+1,f,c
  4450  0026EA  C025  F021         	movff	___wmul@product,?___wmul
  4451  0026EE  C026  F022         	movff	___wmul@product+1,?___wmul+1
  4452  0026F2  0012               	return	
  4453  0026F4                     __end_of___wmul:
  4454                           	opt stack 0
  4455                           tblptru	equ	0xFF8
  4456                           tblptrh	equ	0xFF7
  4457                           tblptrl	equ	0xFF6
  4458                           tablat	equ	0xFF5
  4459                           prodh	equ	0xFF4
  4460                           prodl	equ	0xFF3
  4461                           intcon	equ	0xFF2
  4462                           intcon2	equ	0xFF1
  4463                           postinc0	equ	0xFEE
  4464                           wreg	equ	0xFE8
  4465                           indf2	equ	0xFDF
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function ___fttol *****************
  4471 ;; Defined at:
  4472 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\fttol.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  f1              3   32[COMRAM] float 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  lval            4   42[COMRAM] unsigned long 
  4477 ;;  exp1            1   46[COMRAM] unsigned char 
  4478 ;;  sign1           1   41[COMRAM] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  4   32[COMRAM] long 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:       15 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    2
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_ftoa
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text25
  4503  001FC6                     __ptext25:
  4504                           	opt stack 0
  4505  001FC6                     ___fttol:
  4506                           	opt stack 27
  4507                           
  4508                           ;incstack = 0
  4509                           ;incstack = 0
  4510  001FC6  0E0F               	movlw	15
  4511  001FC8  6E25               	movwf	??___fttol& (0+255),c
  4512  001FCA  C021  F026         	movff	___fttol@f1,??___fttol+1
  4513  001FCE  C022  F027         	movff	___fttol@f1+1,??___fttol+2
  4514  001FD2  C023  F028         	movff	___fttol@f1+2,??___fttol+3
  4515  001FD6  2825               	incf	??___fttol,w,c
  4516  001FD8  6E29               	movwf	(??___fttol+4)& (0+255),c
  4517  001FDA  D004               	goto	u2180
  4518  001FDC                     u2185:
  4519  001FDC  90D8               	bcf	status,0,c
  4520  001FDE  3228               	rrcf	??___fttol+3,f,c
  4521  001FE0  3227               	rrcf	??___fttol+2,f,c
  4522  001FE2  3226               	rrcf	??___fttol+1,f,c
  4523  001FE4                     u2180:
  4524  001FE4  2E29               	decfsz	(??___fttol+4)& (0+255),f,c
  4525  001FE6  D7FA               	goto	u2185
  4526  001FE8  5026               	movf	??___fttol+1,w,c
  4527  001FEA  6E2F               	movwf	___fttol@exp1,c
  4528  001FEC  662F               	tstfsz	___fttol@exp1& (0+255),c
  4529  001FEE  D009               	goto	l3082
  4530  001FF0  0E00               	movlw	0
  4531  001FF2  6E21               	movwf	?___fttol,c
  4532  001FF4  0E00               	movlw	0
  4533  001FF6  6E22               	movwf	?___fttol+1,c
  4534  001FF8  0E00               	movlw	0
  4535  001FFA  6E23               	movwf	?___fttol+2,c
  4536  001FFC  0E00               	movlw	0
  4537  001FFE  6E24               	movwf	?___fttol+3,c
  4538  002000  0012               	return	
  4539  002002                     l3082:
  4540  002002  0E17               	movlw	23
  4541  002004  6E25               	movwf	??___fttol& (0+255),c
  4542  002006  C021  F026         	movff	___fttol@f1,??___fttol+1
  4543  00200A  C022  F027         	movff	___fttol@f1+1,??___fttol+2
  4544  00200E  C023  F028         	movff	___fttol@f1+2,??___fttol+3
  4545  002012  2825               	incf	??___fttol,w,c
  4546  002014  6E29               	movwf	(??___fttol+4)& (0+255),c
  4547  002016  D004               	goto	u2200
  4548  002018                     u2205:
  4549  002018  90D8               	bcf	status,0,c
  4550  00201A  3228               	rrcf	??___fttol+3,f,c
  4551  00201C  3227               	rrcf	??___fttol+2,f,c
  4552  00201E  3226               	rrcf	??___fttol+1,f,c
  4553  002020                     u2200:
  4554  002020  2E29               	decfsz	(??___fttol+4)& (0+255),f,c
  4555  002022  D7FA               	goto	u2205
  4556  002024  5026               	movf	??___fttol+1,w,c
  4557  002026  6E2A               	movwf	___fttol@sign1,c
  4558  002028  8E22               	bsf	___fttol@f1+1,7,c
  4559  00202A  0EFF               	movlw	255
  4560  00202C  1621               	andwf	___fttol@f1,f,c
  4561  00202E  0EFF               	movlw	255
  4562  002030  1622               	andwf	___fttol@f1+1,f,c
  4563  002032  0E00               	movlw	0
  4564  002034  1623               	andwf	___fttol@f1+2,f,c
  4565  002036  5021               	movf	___fttol@f1,w,c
  4566  002038  6E2B               	movwf	___fttol@lval,c
  4567  00203A  5022               	movf	___fttol@f1+1,w,c
  4568  00203C  6E2C               	movwf	___fttol@lval+1,c
  4569  00203E  5023               	movf	___fttol@f1+2,w,c
  4570  002040  6E2D               	movwf	___fttol@lval+2,c
  4571  002042  6A2E               	clrf	___fttol@lval+3,c
  4572  002044  0E8E               	movlw	142
  4573  002046  5E2F               	subwf	___fttol@exp1,f,c
  4574  002048  AE2F               	btfss	___fttol@exp1,7,c
  4575  00204A  D016               	goto	l3104
  4576  00204C  502F               	movf	___fttol@exp1,w,c
  4577  00204E  0A80               	xorlw	128
  4578  002050  0F8F               	addlw	143
  4579  002052  B0D8               	btfsc	status,0,c
  4580  002054  D009               	goto	l3100
  4581  002056  0E00               	movlw	0
  4582  002058  6E21               	movwf	?___fttol,c
  4583  00205A  0E00               	movlw	0
  4584  00205C  6E22               	movwf	?___fttol+1,c
  4585  00205E  0E00               	movlw	0
  4586  002060  6E23               	movwf	?___fttol+2,c
  4587  002062  0E00               	movlw	0
  4588  002064  6E24               	movwf	?___fttol+3,c
  4589  002066  0012               	return	
  4590  002068                     l3100:
  4591  002068  90D8               	bcf	status,0,c
  4592  00206A  322E               	rrcf	___fttol@lval+3,f,c
  4593  00206C  322D               	rrcf	___fttol@lval+2,f,c
  4594  00206E  322C               	rrcf	___fttol@lval+1,f,c
  4595  002070  322B               	rrcf	___fttol@lval,f,c
  4596  002072  3E2F               	incfsz	___fttol@exp1,f,c
  4597  002074  D7F9               	goto	l3100
  4598  002076  D014               	goto	l3114
  4599  002078                     l3104:
  4600  002078  0E17               	movlw	23
  4601  00207A  642F               	cpfsgt	___fttol@exp1,c
  4602  00207C  D00F               	goto	l3112
  4603  00207E  0E00               	movlw	0
  4604  002080  6E21               	movwf	?___fttol,c
  4605  002082  0E00               	movlw	0
  4606  002084  6E22               	movwf	?___fttol+1,c
  4607  002086  0E00               	movlw	0
  4608  002088  6E23               	movwf	?___fttol+2,c
  4609  00208A  0E00               	movlw	0
  4610  00208C  6E24               	movwf	?___fttol+3,c
  4611  00208E  0012               	return	
  4612  002090                     l3110:
  4613  002090  90D8               	bcf	status,0,c
  4614  002092  362B               	rlcf	___fttol@lval,f,c
  4615  002094  362C               	rlcf	___fttol@lval+1,f,c
  4616  002096  362D               	rlcf	___fttol@lval+2,f,c
  4617  002098  362E               	rlcf	___fttol@lval+3,f,c
  4618  00209A  062F               	decf	___fttol@exp1,f,c
  4619  00209C                     l3112:
  4620  00209C  662F               	tstfsz	___fttol@exp1,c
  4621  00209E  D7F8               	goto	l3110
  4622  0020A0                     l3114:
  4623  0020A0  502A               	movf	___fttol@sign1,w,c
  4624  0020A2  B4D8               	btfsc	status,2,c
  4625  0020A4  D008               	goto	l3118
  4626  0020A6  1E2E               	comf	___fttol@lval+3,f,c
  4627  0020A8  1E2D               	comf	___fttol@lval+2,f,c
  4628  0020AA  1E2C               	comf	___fttol@lval+1,f,c
  4629  0020AC  6C2B               	negf	___fttol@lval,c
  4630  0020AE  0E00               	movlw	0
  4631  0020B0  222C               	addwfc	___fttol@lval+1,f,c
  4632  0020B2  222D               	addwfc	___fttol@lval+2,f,c
  4633  0020B4  222E               	addwfc	___fttol@lval+3,f,c
  4634  0020B6                     l3118:
  4635  0020B6  C02B  F021         	movff	___fttol@lval,?___fttol
  4636  0020BA  C02C  F022         	movff	___fttol@lval+1,?___fttol+1
  4637  0020BE  C02D  F023         	movff	___fttol@lval+2,?___fttol+2
  4638  0020C2  C02E  F024         	movff	___fttol@lval+3,?___fttol+3
  4639  0020C6  0012               	return	
  4640  0020C8                     __end_of___fttol:
  4641                           	opt stack 0
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           intcon2	equ	0xFF1
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           indf2	equ	0xFDF
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function ___ftneg *****************
  4658 ;; Defined at:
  4659 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftneg.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  f1              3   32[COMRAM] float 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  3   32[COMRAM] float 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;Total ram usage:        3 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    2
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_ftoa
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text26
  4688  0027BA                     __ptext26:
  4689                           	opt stack 0
  4690  0027BA                     ___ftneg:
  4691                           	opt stack 27
  4692                           
  4693                           ;incstack = 0
  4694                           ;incstack = 0
  4695  0027BA  0E7F               	movlw	127
  4696  0027BC  1423               	andwf	___ftneg@f1+2,w,c
  4697  0027BE  1022               	iorwf	___ftneg@f1+1,w,c
  4698  0027C0  1021               	iorwf	___ftneg@f1,w,c
  4699  0027C2  B4D8               	btfsc	status,2,c
  4700  0027C4  D006               	goto	l818
  4701  0027C6  0E00               	movlw	0
  4702  0027C8  1A21               	xorwf	___ftneg@f1,f,c
  4703  0027CA  0E00               	movlw	0
  4704  0027CC  1A22               	xorwf	___ftneg@f1+1,f,c
  4705  0027CE  0E80               	movlw	128
  4706  0027D0  1A23               	xorwf	___ftneg@f1+2,f,c
  4707  0027D2                     l818:
  4708  0027D2  C021  F021         	movff	___ftneg@f1,?___ftneg
  4709  0027D6  C022  F022         	movff	___ftneg@f1+1,?___ftneg+1
  4710  0027DA  C023  F023         	movff	___ftneg@f1+2,?___ftneg+2
  4711  0027DE  0012               	return	
  4712  0027E0                     __end_of___ftneg:
  4713                           	opt stack 0
  4714                           tblptru	equ	0xFF8
  4715                           tblptrh	equ	0xFF7
  4716                           tblptrl	equ	0xFF6
  4717                           tablat	equ	0xFF5
  4718                           prodh	equ	0xFF4
  4719                           prodl	equ	0xFF3
  4720                           intcon	equ	0xFF2
  4721                           intcon2	equ	0xFF1
  4722                           postinc0	equ	0xFEE
  4723                           wreg	equ	0xFE8
  4724                           indf2	equ	0xFDF
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function ___ftge *****************
  4730 ;; Defined at:
  4731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftge.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  ff1             3   32[COMRAM] float 
  4734 ;;  ff2             3   35[COMRAM] float 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;		None               void
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:        9 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    2
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_ftoa
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text27
  4761  002300                     __ptext27:
  4762                           	opt stack 0
  4763  002300                     ___ftge:
  4764                           	opt stack 27
  4765                           
  4766                           ;incstack = 0
  4767                           ;incstack = 0
  4768  002300  AE23               	btfss	___ftge@ff1+2,7,c
  4769  002302  D016               	goto	l3058
  4770  002304  C021  F027         	movff	___ftge@ff1,??___ftge
  4771  002308  C022  F028         	movff	___ftge@ff1+1,??___ftge+1
  4772  00230C  C023  F029         	movff	___ftge@ff1+2,??___ftge+2
  4773  002310  1E27               	comf	??___ftge,f,c
  4774  002312  1E28               	comf	??___ftge+1,f,c
  4775  002314  1E29               	comf	??___ftge+2,f,c
  4776  002316  2A27               	incf	??___ftge,f,c
  4777  002318  0E00               	movlw	0
  4778  00231A  2228               	addwfc	??___ftge+1,f,c
  4779  00231C  2229               	addwfc	??___ftge+2,f,c
  4780  00231E  0E00               	movlw	0
  4781  002320  2427               	addwf	??___ftge,w,c
  4782  002322  6E21               	movwf	___ftge@ff1,c
  4783  002324  0E00               	movlw	0
  4784  002326  2028               	addwfc	??___ftge+1,w,c
  4785  002328  6E22               	movwf	___ftge@ff1+1,c
  4786  00232A  0E80               	movlw	128
  4787  00232C  2029               	addwfc	??___ftge+2,w,c
  4788  00232E  6E23               	movwf	___ftge@ff1+2,c
  4789  002330                     l3058:
  4790  002330  AE26               	btfss	___ftge@ff2+2,7,c
  4791  002332  D016               	goto	l3062
  4792  002334  C024  F027         	movff	___ftge@ff2,??___ftge
  4793  002338  C025  F028         	movff	___ftge@ff2+1,??___ftge+1
  4794  00233C  C026  F029         	movff	___ftge@ff2+2,??___ftge+2
  4795  002340  1E27               	comf	??___ftge,f,c
  4796  002342  1E28               	comf	??___ftge+1,f,c
  4797  002344  1E29               	comf	??___ftge+2,f,c
  4798  002346  2A27               	incf	??___ftge,f,c
  4799  002348  0E00               	movlw	0
  4800  00234A  2228               	addwfc	??___ftge+1,f,c
  4801  00234C  2229               	addwfc	??___ftge+2,f,c
  4802  00234E  0E00               	movlw	0
  4803  002350  2427               	addwf	??___ftge,w,c
  4804  002352  6E24               	movwf	___ftge@ff2,c
  4805  002354  0E00               	movlw	0
  4806  002356  2028               	addwfc	??___ftge+1,w,c
  4807  002358  6E25               	movwf	___ftge@ff2+1,c
  4808  00235A  0E80               	movlw	128
  4809  00235C  2029               	addwfc	??___ftge+2,w,c
  4810  00235E  6E26               	movwf	___ftge@ff2+2,c
  4811  002360                     l3062:
  4812  002360  0E00               	movlw	0
  4813  002362  1A21               	xorwf	___ftge@ff1,f,c
  4814  002364  0E00               	movlw	0
  4815  002366  1A22               	xorwf	___ftge@ff1+1,f,c
  4816  002368  0E80               	movlw	128
  4817  00236A  1A23               	xorwf	___ftge@ff1+2,f,c
  4818  00236C  0E00               	movlw	0
  4819  00236E  1A24               	xorwf	___ftge@ff2,f,c
  4820  002370  0E00               	movlw	0
  4821  002372  1A25               	xorwf	___ftge@ff2+1,f,c
  4822  002374  0E80               	movlw	128
  4823  002376  1A26               	xorwf	___ftge@ff2+2,f,c
  4824  002378  5024               	movf	___ftge@ff2,w,c
  4825  00237A  5C21               	subwf	___ftge@ff1,w,c
  4826  00237C  5025               	movf	___ftge@ff2+1,w,c
  4827  00237E  5822               	subwfb	___ftge@ff1+1,w,c
  4828  002380  5026               	movf	___ftge@ff2+2,w,c
  4829  002382  5823               	subwfb	___ftge@ff1+2,w,c
  4830  002384  B0D8               	btfsc	status,0,c
  4831  002386  D002               	goto	l3068
  4832  002388  90D8               	bcf	status,0,c
  4833  00238A  0012               	return	
  4834  00238C                     l3068:
  4835  00238C  80D8               	bsf	status,0,c
  4836  00238E  0012               	return	
  4837  002390                     __end_of___ftge:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           intcon2	equ	0xFF1
  4847                           postinc0	equ	0xFEE
  4848                           wreg	equ	0xFE8
  4849                           indf2	equ	0xFDF
  4850                           fsr2h	equ	0xFDA
  4851                           fsr2l	equ	0xFD9
  4852                           status	equ	0xFD8
  4853                           
  4854 ;; *************** function ___awtoft *****************
  4855 ;; Defined at:
  4856 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awtoft.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  c               2   40[COMRAM] int 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;  sign            1   44[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  3   40[COMRAM] float 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;Total ram usage:        5 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    3
  4877 ;; This function calls:
  4878 ;;		___ftpack
  4879 ;; This function is called by:
  4880 ;;		_ftoa
  4881 ;;		_Read_Temperature
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text28
  4886  00250A                     __ptext28:
  4887                           	opt stack 0
  4888  00250A                     ___awtoft:
  4889                           	opt stack 26
  4890                           
  4891                           ;incstack = 0
  4892                           ;incstack = 0
  4893  00250A  6E2C               	movwf	??___awtoft& (0+255),c
  4894  00250C  0E00               	movlw	0
  4895  00250E  6E2D               	movwf	___awtoft@sign,c
  4896  002510  502C               	movf	??___awtoft& (0+255),w,c
  4897  002512  AE2A               	btfss	___awtoft@c+1,7,c
  4898  002514  D008               	goto	l3690
  4899  002516  6C29               	negf	___awtoft@c,c
  4900  002518  1E2A               	comf	___awtoft@c+1,f,c
  4901  00251A  B0D8               	btfsc	status,0,c
  4902  00251C  2A2A               	incf	___awtoft@c+1,f,c
  4903  00251E  6E2C               	movwf	??___awtoft& (0+255),c
  4904  002520  0E01               	movlw	1
  4905  002522  6E2D               	movwf	___awtoft@sign,c
  4906  002524  502C               	movf	??___awtoft& (0+255),w,c
  4907  002526                     l3690:
  4908  002526  C029  F021         	movff	___awtoft@c,?___ftpack
  4909  00252A  C02A  F022         	movff	___awtoft@c+1,?___ftpack+1
  4910  00252E  6A23               	clrf	?___ftpack+2,c
  4911  002530  6E2C               	movwf	??___awtoft& (0+255),c
  4912  002532  0E8E               	movlw	142
  4913  002534  6E24               	movwf	?___ftpack+3,c
  4914  002536  502C               	movf	??___awtoft& (0+255),w,c
  4915  002538  C02D  F025         	movff	___awtoft@sign,?___ftpack+4
  4916  00253C  ECD4  F010         	call	___ftpack	;wreg free
  4917  002540  C023  F02B         	movff	?___ftpack+2,?___awtoft+2
  4918  002544  C022  F02A         	movff	?___ftpack+1,?___awtoft+1
  4919  002548  C021  F029         	movff	?___ftpack,?___awtoft
  4920  00254C  0012               	return	
  4921  00254E                     __end_of___awtoft:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           intcon	equ	0xFF2
  4930                           intcon2	equ	0xFF1
  4931                           postinc0	equ	0xFEE
  4932                           wreg	equ	0xFE8
  4933                           indf2	equ	0xFDF
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function ___awdiv *****************
  4939 ;; Defined at:
  4940 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  dividend        2   32[COMRAM] int 
  4943 ;;  divisor         2   34[COMRAM] int 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  quotient        2   39[COMRAM] int 
  4946 ;;  sign            1   38[COMRAM] unsigned char 
  4947 ;;  counter         1   37[COMRAM] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  2   32[COMRAM] int 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;Total ram usage:        9 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    2
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_ftoa
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text29
  4972  002390                     __ptext29:
  4973                           	opt stack 0
  4974  002390                     ___awdiv:
  4975                           	opt stack 27
  4976                           
  4977                           ;incstack = 0
  4978                           ;incstack = 0
  4979  002390  6E25               	movwf	??___awdiv& (0+255),c
  4980  002392  0E00               	movlw	0
  4981  002394  6E27               	movwf	___awdiv@sign,c
  4982  002396  5025               	movf	??___awdiv& (0+255),w,c
  4983  002398  AE24               	btfss	___awdiv@divisor+1,7,c
  4984  00239A  D008               	goto	l3006
  4985  00239C  6C23               	negf	___awdiv@divisor,c
  4986  00239E  1E24               	comf	___awdiv@divisor+1,f,c
  4987  0023A0  B0D8               	btfsc	status,0,c
  4988  0023A2  2A24               	incf	___awdiv@divisor+1,f,c
  4989  0023A4  6E25               	movwf	??___awdiv& (0+255),c
  4990  0023A6  0E01               	movlw	1
  4991  0023A8  6E27               	movwf	___awdiv@sign,c
  4992  0023AA  5025               	movf	??___awdiv& (0+255),w,c
  4993  0023AC                     l3006:
  4994  0023AC  AE22               	btfss	___awdiv@dividend+1,7,c
  4995  0023AE  D006               	goto	l3012
  4996  0023B0  6C21               	negf	___awdiv@dividend,c
  4997  0023B2  1E22               	comf	___awdiv@dividend+1,f,c
  4998  0023B4  B0D8               	btfsc	status,0,c
  4999  0023B6  2A22               	incf	___awdiv@dividend+1,f,c
  5000  0023B8  0E01               	movlw	1
  5001  0023BA  1A27               	xorwf	___awdiv@sign,f,c
  5002  0023BC                     l3012:
  5003  0023BC  0E00               	movlw	0
  5004  0023BE  6E29               	movwf	___awdiv@quotient+1,c
  5005  0023C0  0E00               	movlw	0
  5006  0023C2  6E28               	movwf	___awdiv@quotient,c
  5007  0023C4  5024               	movf	___awdiv@divisor+1,w,c
  5008  0023C6  1023               	iorwf	___awdiv@divisor,w,c
  5009  0023C8  B4D8               	btfsc	status,2,c
  5010  0023CA  D01E               	goto	l3034
  5011  0023CC  6E25               	movwf	??___awdiv& (0+255),c
  5012  0023CE  0E01               	movlw	1
  5013  0023D0  6E26               	movwf	___awdiv@counter,c
  5014  0023D2  5025               	movf	??___awdiv& (0+255),w,c
  5015  0023D4  D004               	goto	l3020
  5016  0023D6                     l3018:
  5017  0023D6  90D8               	bcf	status,0,c
  5018  0023D8  3623               	rlcf	___awdiv@divisor,f,c
  5019  0023DA  3624               	rlcf	___awdiv@divisor+1,f,c
  5020  0023DC  2A26               	incf	___awdiv@counter,f,c
  5021  0023DE                     l3020:
  5022  0023DE  AE24               	btfss	___awdiv@divisor+1,7,c
  5023  0023E0  D7FA               	goto	l3018
  5024  0023E2                     l3022:
  5025  0023E2  90D8               	bcf	status,0,c
  5026  0023E4  3628               	rlcf	___awdiv@quotient,f,c
  5027  0023E6  3629               	rlcf	___awdiv@quotient+1,f,c
  5028  0023E8  5023               	movf	___awdiv@divisor,w,c
  5029  0023EA  5C21               	subwf	___awdiv@dividend,w,c
  5030  0023EC  5024               	movf	___awdiv@divisor+1,w,c
  5031  0023EE  5822               	subwfb	___awdiv@dividend+1,w,c
  5032  0023F0  A0D8               	btfss	status,0,c
  5033  0023F2  D005               	goto	l3030
  5034  0023F4  5023               	movf	___awdiv@divisor,w,c
  5035  0023F6  5E21               	subwf	___awdiv@dividend,f,c
  5036  0023F8  5024               	movf	___awdiv@divisor+1,w,c
  5037  0023FA  5A22               	subwfb	___awdiv@dividend+1,f,c
  5038  0023FC  8028               	bsf	___awdiv@quotient,0,c
  5039  0023FE                     l3030:
  5040  0023FE  90D8               	bcf	status,0,c
  5041  002400  3224               	rrcf	___awdiv@divisor+1,f,c
  5042  002402  3223               	rrcf	___awdiv@divisor,f,c
  5043  002404  2E26               	decfsz	___awdiv@counter,f,c
  5044  002406  D7ED               	goto	l3022
  5045  002408                     l3034:
  5046  002408  5027               	movf	___awdiv@sign,w,c
  5047  00240A  B4D8               	btfsc	status,2,c
  5048  00240C  D004               	goto	l3038
  5049  00240E  6C28               	negf	___awdiv@quotient,c
  5050  002410  1E29               	comf	___awdiv@quotient+1,f,c
  5051  002412  B0D8               	btfsc	status,0,c
  5052  002414  2A29               	incf	___awdiv@quotient+1,f,c
  5053  002416                     l3038:
  5054  002416  C028  F021         	movff	___awdiv@quotient,?___awdiv
  5055  00241A  C029  F022         	movff	___awdiv@quotient+1,?___awdiv+1
  5056  00241E  0012               	return	
  5057  002420                     __end_of___awdiv:
  5058                           	opt stack 0
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           prodh	equ	0xFF4
  5064                           prodl	equ	0xFF3
  5065                           intcon	equ	0xFF2
  5066                           intcon2	equ	0xFF1
  5067                           postinc0	equ	0xFEE
  5068                           wreg	equ	0xFE8
  5069                           indf2	equ	0xFDF
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function ___ftmul *****************
  5075 ;; Defined at:
  5076 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftmul.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  f1              3    0[BANK0 ] float 
  5079 ;;  f2              3    3[BANK0 ] float 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  f3_as_produc    3    7[BANK0 ] unsigned um
  5082 ;;  sign            1   11[BANK0 ] unsigned char 
  5083 ;;  cntr            1   10[BANK0 ] unsigned char 
  5084 ;;  exp             1    6[BANK0 ] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  3    0[BANK0 ] float 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         5      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:       17 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    3
  5101 ;; This function calls:
  5102 ;;		___ftpack
  5103 ;; This function is called by:
  5104 ;;		_ftoa
  5105 ;;		_Read_Temperature
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text30
  5110  001CAE                     __ptext30:
  5111                           	opt stack 0
  5112  001CAE                     ___ftmul:
  5113                           	opt stack 26
  5114                           
  5115                           ;incstack = 0
  5116                           ;incstack = 0
  5117  001CAE  0E0F               	movlw	15
  5118  001CB0  6E2E               	movwf	??___ftmul& (0+255),c
  5119  001CB2  0100               	movlb	0	; () banked
  5120  001CB4  C060  F02F         	movff	___ftmul@f1,??___ftmul+1
  5121  001CB8  0100               	movlb	0	; () banked
  5122  001CBA  C061  F030         	movff	___ftmul@f1+1,??___ftmul+2
  5123  001CBE  0100               	movlb	0	; () banked
  5124  001CC0  C062  F031         	movff	___ftmul@f1+2,??___ftmul+3
  5125  001CC4  282E               	incf	??___ftmul,w,c
  5126  001CC6  6E32               	movwf	(??___ftmul+4)& (0+255),c
  5127  001CC8  D004               	goto	u2980
  5128  001CCA                     u2985:
  5129  001CCA  90D8               	bcf	status,0,c
  5130  001CCC  3231               	rrcf	??___ftmul+3,f,c
  5131  001CCE  3230               	rrcf	??___ftmul+2,f,c
  5132  001CD0  322F               	rrcf	??___ftmul+1,f,c
  5133  001CD2                     u2980:
  5134  001CD2  2E32               	decfsz	(??___ftmul+4)& (0+255),f,c
  5135  001CD4  D7FA               	goto	u2985
  5136  001CD6  502F               	movf	??___ftmul+1,w,c
  5137  001CD8  0100               	movlb	0	; () banked
  5138  001CDA  0100               	movlb	0	; () banked
  5139  001CDC  6F66               	movwf	___ftmul@exp& (0+255),b
  5140  001CDE  0100               	movlb	0	; () banked
  5141  001CE0  6766               	tstfsz	___ftmul@exp& (0+255),b
  5142  001CE2  D00D               	goto	l3640
  5143                           
  5144                           ; BSR set to: 0
  5145  001CE4  0E00               	movlw	0
  5146  001CE6  0100               	movlb	0	; () banked
  5147  001CE8  0100               	movlb	0	; () banked
  5148  001CEA  6F60               	movwf	?___ftmul& (0+255),b
  5149  001CEC  0E00               	movlw	0
  5150  001CEE  0100               	movlb	0	; () banked
  5151  001CF0  0100               	movlb	0	; () banked
  5152  001CF2  6F61               	movwf	(?___ftmul+1)& (0+255),b
  5153  001CF4  0E00               	movlw	0
  5154  001CF6  0100               	movlb	0	; () banked
  5155  001CF8  0100               	movlb	0	; () banked
  5156  001CFA  6F62               	movwf	(?___ftmul+2)& (0+255),b
  5157  001CFC  0012               	return	
  5158  001CFE                     l3640:
  5159                           
  5160                           ; BSR set to: 0
  5161  001CFE  0E0F               	movlw	15
  5162  001D00  6E2E               	movwf	??___ftmul& (0+255),c
  5163  001D02  0100               	movlb	0	; () banked
  5164  001D04  C063  F02F         	movff	___ftmul@f2,??___ftmul+1
  5165  001D08  0100               	movlb	0	; () banked
  5166  001D0A  C064  F030         	movff	___ftmul@f2+1,??___ftmul+2
  5167  001D0E  0100               	movlb	0	; () banked
  5168  001D10  C065  F031         	movff	___ftmul@f2+2,??___ftmul+3
  5169  001D14  282E               	incf	??___ftmul,w,c
  5170  001D16  6E32               	movwf	(??___ftmul+4)& (0+255),c
  5171  001D18  D004               	goto	u3000
  5172  001D1A                     u3005:
  5173  001D1A  90D8               	bcf	status,0,c
  5174  001D1C  3231               	rrcf	??___ftmul+3,f,c
  5175  001D1E  3230               	rrcf	??___ftmul+2,f,c
  5176  001D20  322F               	rrcf	??___ftmul+1,f,c
  5177  001D22                     u3000:
  5178  001D22  2E32               	decfsz	(??___ftmul+4)& (0+255),f,c
  5179  001D24  D7FA               	goto	u3005
  5180  001D26  502F               	movf	??___ftmul+1,w,c
  5181  001D28  0100               	movlb	0	; () banked
  5182  001D2A  0100               	movlb	0	; () banked
  5183  001D2C  6F6B               	movwf	___ftmul@sign& (0+255),b
  5184  001D2E  0100               	movlb	0	; () banked
  5185  001D30  676B               	tstfsz	___ftmul@sign& (0+255),b
  5186  001D32  D00D               	goto	l3646
  5187                           
  5188                           ; BSR set to: 0
  5189  001D34  0E00               	movlw	0
  5190  001D36  0100               	movlb	0	; () banked
  5191  001D38  0100               	movlb	0	; () banked
  5192  001D3A  6F60               	movwf	?___ftmul& (0+255),b
  5193  001D3C  0E00               	movlw	0
  5194  001D3E  0100               	movlb	0	; () banked
  5195  001D40  0100               	movlb	0	; () banked
  5196  001D42  6F61               	movwf	(?___ftmul+1)& (0+255),b
  5197  001D44  0E00               	movlw	0
  5198  001D46  0100               	movlb	0	; () banked
  5199  001D48  0100               	movlb	0	; () banked
  5200  001D4A  6F62               	movwf	(?___ftmul+2)& (0+255),b
  5201  001D4C  0012               	return	
  5202  001D4E                     l3646:
  5203                           
  5204                           ; BSR set to: 0
  5205  001D4E  0100               	movlb	0	; () banked
  5206  001D50  0100               	movlb	0	; () banked
  5207  001D52  516B               	movf	___ftmul@sign& (0+255),w,b
  5208  001D54  0F7B               	addlw	123
  5209  001D56  0100               	movlb	0	; () banked
  5210  001D58  0100               	movlb	0	; () banked
  5211  001D5A  2766               	addwf	___ftmul@exp& (0+255),f,b
  5212                           
  5213                           ; BSR set to: 0
  5214  001D5C  C062  F06B         	movff	___ftmul@f1+2,___ftmul@sign
  5215  001D60  0100               	movlb	0	; () banked
  5216  001D62  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  5217  001D64  0100               	movlb	0	; () banked
  5218  001D66  0100               	movlb	0	; () banked
  5219  001D68  1B6B               	xorwf	___ftmul@sign& (0+255),f,b
  5220  001D6A  0E80               	movlw	128
  5221  001D6C  0100               	movlb	0	; () banked
  5222  001D6E  0100               	movlb	0	; () banked
  5223  001D70  176B               	andwf	___ftmul@sign& (0+255),f,b
  5224                           
  5225                           ; BSR set to: 0
  5226  001D72  0100               	movlb	0	; () banked
  5227  001D74  0100               	movlb	0	; () banked
  5228  001D76  8F61               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5229                           
  5230                           ; BSR set to: 0
  5231  001D78  0100               	movlb	0	; () banked
  5232  001D7A  0100               	movlb	0	; () banked
  5233  001D7C  8F64               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5234                           
  5235                           ; BSR set to: 0
  5236  001D7E  0EFF               	movlw	255
  5237  001D80  0100               	movlb	0	; () banked
  5238  001D82  0100               	movlb	0	; () banked
  5239  001D84  1763               	andwf	___ftmul@f2& (0+255),f,b
  5240  001D86  0EFF               	movlw	255
  5241  001D88  0100               	movlb	0	; () banked
  5242  001D8A  0100               	movlb	0	; () banked
  5243  001D8C  1764               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5244  001D8E  0E00               	movlw	0
  5245  001D90  0100               	movlb	0	; () banked
  5246  001D92  0100               	movlb	0	; () banked
  5247  001D94  1765               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5248                           
  5249                           ; BSR set to: 0
  5250  001D96  0E00               	movlw	0
  5251  001D98  0100               	movlb	0	; () banked
  5252  001D9A  0100               	movlb	0	; () banked
  5253  001D9C  6F67               	movwf	___ftmul@f3_as_product& (0+255),b
  5254  001D9E  0E00               	movlw	0
  5255  001DA0  0100               	movlb	0	; () banked
  5256  001DA2  0100               	movlb	0	; () banked
  5257  001DA4  6F68               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5258  001DA6  0E00               	movlw	0
  5259  001DA8  0100               	movlb	0	; () banked
  5260  001DAA  0100               	movlb	0	; () banked
  5261  001DAC  6F69               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5262                           
  5263                           ; BSR set to: 0
  5264  001DAE  6E2E               	movwf	??___ftmul& (0+255),c
  5265  001DB0  0E07               	movlw	7
  5266  001DB2  0100               	movlb	0	; () banked
  5267  001DB4  0100               	movlb	0	; () banked
  5268  001DB6  6F6A               	movwf	___ftmul@cntr& (0+255),b
  5269  001DB8  502E               	movf	??___ftmul& (0+255),w,c
  5270  001DBA                     l3660:
  5271                           
  5272                           ; BSR set to: 0
  5273  001DBA  0100               	movlb	0	; () banked
  5274  001DBC  0100               	movlb	0	; () banked
  5275  001DBE  A160               	btfss	___ftmul@f1& (0+255),0,b
  5276  001DC0  D012               	goto	l3664
  5277                           
  5278                           ; BSR set to: 0
  5279  001DC2  0100               	movlb	0	; () banked
  5280  001DC4  0100               	movlb	0	; () banked
  5281  001DC6  5163               	movf	___ftmul@f2& (0+255),w,b
  5282  001DC8  0100               	movlb	0	; () banked
  5283  001DCA  0100               	movlb	0	; () banked
  5284  001DCC  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5285  001DCE  0100               	movlb	0	; () banked
  5286  001DD0  0100               	movlb	0	; () banked
  5287  001DD2  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  5288  001DD4  0100               	movlb	0	; () banked
  5289  001DD6  0100               	movlb	0	; () banked
  5290  001DD8  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5291  001DDA  0100               	movlb	0	; () banked
  5292  001DDC  0100               	movlb	0	; () banked
  5293  001DDE  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  5294  001DE0  0100               	movlb	0	; () banked
  5295  001DE2  0100               	movlb	0	; () banked
  5296  001DE4  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5297  001DE6                     l3664:
  5298                           
  5299                           ; BSR set to: 0
  5300  001DE6  0100               	movlb	0	; () banked
  5301  001DE8  90D8               	bcf	status,0,c
  5302  001DEA  0100               	movlb	0	; () banked
  5303  001DEC  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5304  001DEE  0100               	movlb	0	; () banked
  5305  001DF0  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5306  001DF2  0100               	movlb	0	; () banked
  5307  001DF4  3360               	rrcf	___ftmul@f1& (0+255),f,b
  5308  001DF6  0100               	movlb	0	; () banked
  5309  001DF8  90D8               	bcf	status,0,c
  5310  001DFA  0100               	movlb	0	; () banked
  5311  001DFC  3763               	rlcf	___ftmul@f2& (0+255),f,b
  5312  001DFE  0100               	movlb	0	; () banked
  5313  001E00  3764               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5314  001E02  0100               	movlb	0	; () banked
  5315  001E04  3765               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5316                           
  5317                           ; BSR set to: 0
  5318  001E06  0100               	movlb	0	; () banked
  5319  001E08  0100               	movlb	0	; () banked
  5320  001E0A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  5321  001E0C  D7D6               	goto	l3660
  5322                           
  5323                           ; BSR set to: 0
  5324                           
  5325                           ; BSR set to: 0
  5326  001E0E  6E2E               	movwf	??___ftmul& (0+255),c
  5327  001E10  0E09               	movlw	9
  5328  001E12  0100               	movlb	0	; () banked
  5329  001E14  0100               	movlb	0	; () banked
  5330  001E16  6F6A               	movwf	___ftmul@cntr& (0+255),b
  5331  001E18  502E               	movf	??___ftmul& (0+255),w,c
  5332  001E1A                     l3670:
  5333                           
  5334                           ; BSR set to: 0
  5335  001E1A  0100               	movlb	0	; () banked
  5336  001E1C  0100               	movlb	0	; () banked
  5337  001E1E  A160               	btfss	___ftmul@f1& (0+255),0,b
  5338  001E20  D012               	goto	l3674
  5339                           
  5340                           ; BSR set to: 0
  5341  001E22  0100               	movlb	0	; () banked
  5342  001E24  0100               	movlb	0	; () banked
  5343  001E26  5163               	movf	___ftmul@f2& (0+255),w,b
  5344  001E28  0100               	movlb	0	; () banked
  5345  001E2A  0100               	movlb	0	; () banked
  5346  001E2C  2767               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5347  001E2E  0100               	movlb	0	; () banked
  5348  001E30  0100               	movlb	0	; () banked
  5349  001E32  5164               	movf	(___ftmul@f2+1)& (0+255),w,b
  5350  001E34  0100               	movlb	0	; () banked
  5351  001E36  0100               	movlb	0	; () banked
  5352  001E38  2368               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5353  001E3A  0100               	movlb	0	; () banked
  5354  001E3C  0100               	movlb	0	; () banked
  5355  001E3E  5165               	movf	(___ftmul@f2+2)& (0+255),w,b
  5356  001E40  0100               	movlb	0	; () banked
  5357  001E42  0100               	movlb	0	; () banked
  5358  001E44  2369               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5359  001E46                     l3674:
  5360                           
  5361                           ; BSR set to: 0
  5362  001E46  0100               	movlb	0	; () banked
  5363  001E48  90D8               	bcf	status,0,c
  5364  001E4A  0100               	movlb	0	; () banked
  5365  001E4C  3362               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5366  001E4E  0100               	movlb	0	; () banked
  5367  001E50  3361               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5368  001E52  0100               	movlb	0	; () banked
  5369  001E54  3360               	rrcf	___ftmul@f1& (0+255),f,b
  5370  001E56  0100               	movlb	0	; () banked
  5371  001E58  90D8               	bcf	status,0,c
  5372  001E5A  0100               	movlb	0	; () banked
  5373  001E5C  3369               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5374  001E5E  0100               	movlb	0	; () banked
  5375  001E60  3368               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5376  001E62  0100               	movlb	0	; () banked
  5377  001E64  3367               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5378                           
  5379                           ; BSR set to: 0
  5380  001E66  0100               	movlb	0	; () banked
  5381  001E68  0100               	movlb	0	; () banked
  5382  001E6A  2F6A               	decfsz	___ftmul@cntr& (0+255),f,b
  5383  001E6C  D7D6               	goto	l3670
  5384                           
  5385                           ; BSR set to: 0
  5386                           
  5387                           ; BSR set to: 0
  5388  001E6E  C067  F021         	movff	___ftmul@f3_as_product,?___ftpack
  5389  001E72  C068  F022         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5390  001E76  C069  F023         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5391  001E7A  C066  F024         	movff	___ftmul@exp,?___ftpack+3
  5392  001E7E  C06B  F025         	movff	___ftmul@sign,?___ftpack+4
  5393  001E82  ECD4  F010         	call	___ftpack	;wreg free
  5394  001E86  C023  F062         	movff	?___ftpack+2,?___ftmul+2
  5395  001E8A  C022  F061         	movff	?___ftpack+1,?___ftmul+1
  5396  001E8E  C021  F060         	movff	?___ftpack,?___ftmul
  5397  001E92  0012               	return	
  5398  001E94                     __end_of___ftmul:
  5399                           	opt stack 0
  5400                           tblptru	equ	0xFF8
  5401                           tblptrh	equ	0xFF7
  5402                           tblptrl	equ	0xFF6
  5403                           tablat	equ	0xFF5
  5404                           prodh	equ	0xFF4
  5405                           prodl	equ	0xFF3
  5406                           intcon	equ	0xFF2
  5407                           intcon2	equ	0xFF1
  5408                           postinc0	equ	0xFEE
  5409                           wreg	equ	0xFE8
  5410                           indf2	equ	0xFDF
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function ___ftadd *****************
  5416 ;; Defined at:
  5417 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\ftadd.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  f1              3   12[BANK0 ] float 
  5420 ;;  f2              3   15[BANK0 ] float 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  exp1            1   25[BANK0 ] unsigned char 
  5423 ;;  exp2            1   24[BANK0 ] unsigned char 
  5424 ;;  sign            1   23[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  3   12[BANK0 ] float 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:       14 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    3
  5441 ;; This function calls:
  5442 ;;		___ftpack
  5443 ;; This function is called by:
  5444 ;;		_ftoa
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text31
  5449  0016FC                     __ptext31:
  5450                           	opt stack 0
  5451  0016FC                     ___ftadd:
  5452                           	opt stack 26
  5453                           
  5454                           ;incstack = 0
  5455                           ;incstack = 0
  5456  0016FC  0E0F               	movlw	15
  5457  0016FE  0100               	movlb	0	; () banked
  5458  001700  6F72               	movwf	??___ftadd& (0+255),b
  5459  001702  0100               	movlb	0	; () banked
  5460  001704  C06C  F073         	movff	___ftadd@f1,??___ftadd+1
  5461  001708  0100               	movlb	0	; () banked
  5462  00170A  C06D  F074         	movff	___ftadd@f1+1,??___ftadd+2
  5463  00170E  0100               	movlb	0	; () banked
  5464  001710  C06E  F075         	movff	___ftadd@f1+2,??___ftadd+3
  5465  001714  0100               	movlb	0	; () banked
  5466  001716  2972               	incf	??___ftadd& (0+255),w,b
  5467  001718  0100               	movlb	0	; () banked
  5468  00171A  6F76               	movwf	(??___ftadd+4)& (0+255),b
  5469  00171C  D005               	goto	u2770
  5470  00171E                     u2775:
  5471  00171E  0100               	movlb	0	; () banked
  5472  001720  90D8               	bcf	status,0,c
  5473  001722  3375               	rrcf	(??___ftadd+3)& (0+255),f,b
  5474  001724  3374               	rrcf	(??___ftadd+2)& (0+255),f,b
  5475  001726  3373               	rrcf	(??___ftadd+1)& (0+255),f,b
  5476  001728                     u2770:
  5477  001728  0100               	movlb	0	; () banked
  5478  00172A  2F76               	decfsz	(??___ftadd+4)& (0+255),f,b
  5479  00172C  D7F8               	goto	u2775
  5480  00172E  0100               	movlb	0	; () banked
  5481  001730  5173               	movf	(??___ftadd+1)& (0+255),w,b
  5482  001732  0100               	movlb	0	; () banked
  5483  001734  0100               	movlb	0	; () banked
  5484  001736  6F79               	movwf	___ftadd@exp1& (0+255),b
  5485  001738  0E0F               	movlw	15
  5486  00173A  0100               	movlb	0	; () banked
  5487  00173C  6F72               	movwf	??___ftadd& (0+255),b
  5488  00173E  0100               	movlb	0	; () banked
  5489  001740  C06F  F073         	movff	___ftadd@f2,??___ftadd+1
  5490  001744  0100               	movlb	0	; () banked
  5491  001746  C070  F074         	movff	___ftadd@f2+1,??___ftadd+2
  5492  00174A  0100               	movlb	0	; () banked
  5493  00174C  C071  F075         	movff	___ftadd@f2+2,??___ftadd+3
  5494  001750  0100               	movlb	0	; () banked
  5495  001752  2972               	incf	??___ftadd& (0+255),w,b
  5496  001754  0100               	movlb	0	; () banked
  5497  001756  6F76               	movwf	(??___ftadd+4)& (0+255),b
  5498  001758  D005               	goto	u2780
  5499  00175A                     u2785:
  5500  00175A  0100               	movlb	0	; () banked
  5501  00175C  90D8               	bcf	status,0,c
  5502  00175E  3375               	rrcf	(??___ftadd+3)& (0+255),f,b
  5503  001760  3374               	rrcf	(??___ftadd+2)& (0+255),f,b
  5504  001762  3373               	rrcf	(??___ftadd+1)& (0+255),f,b
  5505  001764                     u2780:
  5506  001764  0100               	movlb	0	; () banked
  5507  001766  2F76               	decfsz	(??___ftadd+4)& (0+255),f,b
  5508  001768  D7F8               	goto	u2785
  5509  00176A  0100               	movlb	0	; () banked
  5510  00176C  5173               	movf	(??___ftadd+1)& (0+255),w,b
  5511  00176E  0100               	movlb	0	; () banked
  5512  001770  0100               	movlb	0	; () banked
  5513  001772  6F78               	movwf	___ftadd@exp2& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516  001774  0100               	movlb	0	; () banked
  5517  001776  0100               	movlb	0	; () banked
  5518  001778  5179               	movf	___ftadd@exp1& (0+255),w,b
  5519  00177A  B4D8               	btfsc	status,2,c
  5520  00177C  D015               	goto	l761
  5521                           
  5522                           ; BSR set to: 0
  5523  00177E  0100               	movlb	0	; () banked
  5524  001780  0100               	movlb	0	; () banked
  5525  001782  5178               	movf	___ftadd@exp2& (0+255),w,b
  5526  001784  0100               	movlb	0	; () banked
  5527  001786  0100               	movlb	0	; () banked
  5528  001788  6179               	cpfslt	___ftadd@exp1& (0+255),b
  5529  00178A  D015               	goto	l3572
  5530                           
  5531                           ; BSR set to: 0
  5532  00178C  0100               	movlb	0	; () banked
  5533  00178E  0100               	movlb	0	; () banked
  5534  001790  5179               	movf	___ftadd@exp1& (0+255),w,b
  5535  001792  0800               	sublw	0
  5536  001794  0100               	movlb	0	; () banked
  5537  001796  0100               	movlb	0	; () banked
  5538  001798  2578               	addwf	___ftadd@exp2& (0+255),w,b
  5539  00179A  0100               	movlb	0	; () banked
  5540  00179C  6F72               	movwf	??___ftadd& (0+255),b
  5541  00179E  0E19               	movlw	25
  5542  0017A0  0100               	movlb	0	; () banked
  5543  0017A2  5D72               	subwf	??___ftadd& (0+255),w,b
  5544  0017A4  A0D8               	btfss	status,0,c
  5545  0017A6  D007               	goto	l3572
  5546  0017A8                     l761:
  5547                           
  5548                           ; BSR set to: 0
  5549  0017A8  C06F  F06C         	movff	___ftadd@f2,?___ftadd
  5550  0017AC  C070  F06D         	movff	___ftadd@f2+1,?___ftadd+1
  5551  0017B0  C071  F06E         	movff	___ftadd@f2+2,?___ftadd+2
  5552  0017B4  0012               	return	
  5553  0017B6                     l3572:
  5554                           
  5555                           ; BSR set to: 0
  5556  0017B6  0100               	movlb	0	; () banked
  5557  0017B8  0100               	movlb	0	; () banked
  5558  0017BA  5178               	movf	___ftadd@exp2& (0+255),w,b
  5559  0017BC  B4D8               	btfsc	status,2,c
  5560  0017BE  D015               	goto	l765
  5561                           
  5562                           ; BSR set to: 0
  5563  0017C0  0100               	movlb	0	; () banked
  5564  0017C2  0100               	movlb	0	; () banked
  5565  0017C4  5179               	movf	___ftadd@exp1& (0+255),w,b
  5566  0017C6  0100               	movlb	0	; () banked
  5567  0017C8  0100               	movlb	0	; () banked
  5568  0017CA  6178               	cpfslt	___ftadd@exp2& (0+255),b
  5569  0017CC  D015               	goto	l3578
  5570                           
  5571                           ; BSR set to: 0
  5572  0017CE  0100               	movlb	0	; () banked
  5573  0017D0  0100               	movlb	0	; () banked
  5574  0017D2  5178               	movf	___ftadd@exp2& (0+255),w,b
  5575  0017D4  0800               	sublw	0
  5576  0017D6  0100               	movlb	0	; () banked
  5577  0017D8  0100               	movlb	0	; () banked
  5578  0017DA  2579               	addwf	___ftadd@exp1& (0+255),w,b
  5579  0017DC  0100               	movlb	0	; () banked
  5580  0017DE  6F72               	movwf	??___ftadd& (0+255),b
  5581  0017E0  0E19               	movlw	25
  5582  0017E2  0100               	movlb	0	; () banked
  5583  0017E4  5D72               	subwf	??___ftadd& (0+255),w,b
  5584  0017E6  A0D8               	btfss	status,0,c
  5585  0017E8  D007               	goto	l3578
  5586  0017EA                     l765:
  5587                           
  5588                           ; BSR set to: 0
  5589  0017EA  C06C  F06C         	movff	___ftadd@f1,?___ftadd
  5590  0017EE  C06D  F06D         	movff	___ftadd@f1+1,?___ftadd+1
  5591  0017F2  C06E  F06E         	movff	___ftadd@f1+2,?___ftadd+2
  5592  0017F6  0012               	return	
  5593  0017F8                     l3578:
  5594                           
  5595                           ; BSR set to: 0
  5596  0017F8  0100               	movlb	0	; () banked
  5597  0017FA  6F72               	movwf	??___ftadd& (0+255),b
  5598  0017FC  0E06               	movlw	6
  5599  0017FE  0100               	movlb	0	; () banked
  5600  001800  0100               	movlb	0	; () banked
  5601  001802  6F77               	movwf	___ftadd@sign& (0+255),b
  5602  001804  0100               	movlb	0	; () banked
  5603  001806  5172               	movf	??___ftadd& (0+255),w,b
  5604                           
  5605                           ; BSR set to: 0
  5606  001808  0100               	movlb	0	; () banked
  5607  00180A  0100               	movlb	0	; () banked
  5608  00180C  AF6E               	btfss	(___ftadd@f1+2)& (0+255),7,b
  5609  00180E  D003               	goto	l3584
  5610                           
  5611                           ; BSR set to: 0
  5612  001810  0100               	movlb	0	; () banked
  5613  001812  0100               	movlb	0	; () banked
  5614  001814  8F77               	bsf	___ftadd@sign& (0+255),7,b
  5615  001816                     l3584:
  5616                           
  5617                           ; BSR set to: 0
  5618  001816  0100               	movlb	0	; () banked
  5619  001818  0100               	movlb	0	; () banked
  5620  00181A  AF71               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5621  00181C  D003               	goto	l767
  5622                           
  5623                           ; BSR set to: 0
  5624  00181E  0100               	movlb	0	; () banked
  5625  001820  0100               	movlb	0	; () banked
  5626  001822  8D77               	bsf	___ftadd@sign& (0+255),6,b
  5627  001824                     l767:
  5628                           
  5629                           ; BSR set to: 0
  5630  001824  0100               	movlb	0	; () banked
  5631  001826  0100               	movlb	0	; () banked
  5632  001828  8F6D               	bsf	(___ftadd@f1+1)& (0+255),7,b
  5633                           
  5634                           ; BSR set to: 0
  5635  00182A  0EFF               	movlw	255
  5636  00182C  0100               	movlb	0	; () banked
  5637  00182E  0100               	movlb	0	; () banked
  5638  001830  176C               	andwf	___ftadd@f1& (0+255),f,b
  5639  001832  0EFF               	movlw	255
  5640  001834  0100               	movlb	0	; () banked
  5641  001836  0100               	movlb	0	; () banked
  5642  001838  176D               	andwf	(___ftadd@f1+1)& (0+255),f,b
  5643  00183A  0E00               	movlw	0
  5644  00183C  0100               	movlb	0	; () banked
  5645  00183E  0100               	movlb	0	; () banked
  5646  001840  176E               	andwf	(___ftadd@f1+2)& (0+255),f,b
  5647  001842  0100               	movlb	0	; () banked
  5648  001844  0100               	movlb	0	; () banked
  5649  001846  8F70               	bsf	(___ftadd@f2+1)& (0+255),7,b
  5650                           
  5651                           ; BSR set to: 0
  5652  001848  0EFF               	movlw	255
  5653  00184A  0100               	movlb	0	; () banked
  5654  00184C  0100               	movlb	0	; () banked
  5655  00184E  176F               	andwf	___ftadd@f2& (0+255),f,b
  5656  001850  0EFF               	movlw	255
  5657  001852  0100               	movlb	0	; () banked
  5658  001854  0100               	movlb	0	; () banked
  5659  001856  1770               	andwf	(___ftadd@f2+1)& (0+255),f,b
  5660  001858  0E00               	movlw	0
  5661  00185A  0100               	movlb	0	; () banked
  5662  00185C  0100               	movlb	0	; () banked
  5663  00185E  1771               	andwf	(___ftadd@f2+2)& (0+255),f,b
  5664                           
  5665                           ; BSR set to: 0
  5666  001860  0100               	movlb	0	; () banked
  5667  001862  0100               	movlb	0	; () banked
  5668  001864  5178               	movf	___ftadd@exp2& (0+255),w,b
  5669  001866  0100               	movlb	0	; () banked
  5670  001868  0100               	movlb	0	; () banked
  5671  00186A  6179               	cpfslt	___ftadd@exp1& (0+255),b
  5672  00186C  D02F               	goto	l3604
  5673  00186E                     l3594:
  5674                           
  5675                           ; BSR set to: 0
  5676  00186E  0100               	movlb	0	; () banked
  5677  001870  90D8               	bcf	status,0,c
  5678  001872  0100               	movlb	0	; () banked
  5679  001874  376F               	rlcf	___ftadd@f2& (0+255),f,b
  5680  001876  0100               	movlb	0	; () banked
  5681  001878  3770               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  5682  00187A  0100               	movlb	0	; () banked
  5683  00187C  3771               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  5684  00187E  0100               	movlb	0	; () banked
  5685  001880  0100               	movlb	0	; () banked
  5686  001882  0778               	decf	___ftadd@exp2& (0+255),f,b
  5687                           
  5688                           ; BSR set to: 0
  5689  001884  0100               	movlb	0	; () banked
  5690  001886  0100               	movlb	0	; () banked
  5691  001888  5178               	movf	___ftadd@exp2& (0+255),w,b
  5692  00188A  0100               	movlb	0	; () banked
  5693  00188C  0100               	movlb	0	; () banked
  5694  00188E  1979               	xorwf	___ftadd@exp1& (0+255),w,b
  5695  001890  B4D8               	btfsc	status,2,c
  5696  001892  D014               	goto	l3602
  5697                           
  5698                           ; BSR set to: 0
  5699  001894  0100               	movlb	0	; () banked
  5700  001896  0100               	movlb	0	; () banked
  5701  001898  0777               	decf	___ftadd@sign& (0+255),f,b
  5702  00189A  0100               	movlb	0	; () banked
  5703  00189C  5177               	movf	___ftadd@sign& (0+255),w,b
  5704  00189E  0B07               	andlw	7
  5705  0018A0  B4D8               	btfsc	status,2,c
  5706  0018A2  D00C               	goto	l3602
  5707  0018A4  D7E4               	goto	l3594
  5708  0018A6                     l3600:
  5709                           
  5710                           ; BSR set to: 0
  5711  0018A6  0100               	movlb	0	; () banked
  5712  0018A8  90D8               	bcf	status,0,c
  5713  0018AA  0100               	movlb	0	; () banked
  5714  0018AC  336E               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  5715  0018AE  0100               	movlb	0	; () banked
  5716  0018B0  336D               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  5717  0018B2  0100               	movlb	0	; () banked
  5718  0018B4  336C               	rrcf	___ftadd@f1& (0+255),f,b
  5719  0018B6  0100               	movlb	0	; () banked
  5720  0018B8  0100               	movlb	0	; () banked
  5721  0018BA  2B79               	incf	___ftadd@exp1& (0+255),f,b
  5722  0018BC                     l3602:
  5723                           
  5724                           ; BSR set to: 0
  5725  0018BC  0100               	movlb	0	; () banked
  5726  0018BE  0100               	movlb	0	; () banked
  5727  0018C0  5178               	movf	___ftadd@exp2& (0+255),w,b
  5728  0018C2  0100               	movlb	0	; () banked
  5729  0018C4  0100               	movlb	0	; () banked
  5730  0018C6  6379               	cpfseq	___ftadd@exp1& (0+255),b
  5731  0018C8  D7EE               	goto	l3600
  5732  0018CA  D035               	goto	l776
  5733  0018CC                     l3604:
  5734                           
  5735                           ; BSR set to: 0
  5736  0018CC  0100               	movlb	0	; () banked
  5737  0018CE  0100               	movlb	0	; () banked
  5738  0018D0  5179               	movf	___ftadd@exp1& (0+255),w,b
  5739  0018D2  0100               	movlb	0	; () banked
  5740  0018D4  0100               	movlb	0	; () banked
  5741  0018D6  6178               	cpfslt	___ftadd@exp2& (0+255),b
  5742  0018D8  D02E               	goto	l776
  5743  0018DA                     l3606:
  5744                           
  5745                           ; BSR set to: 0
  5746  0018DA  0100               	movlb	0	; () banked
  5747  0018DC  90D8               	bcf	status,0,c
  5748  0018DE  0100               	movlb	0	; () banked
  5749  0018E0  376C               	rlcf	___ftadd@f1& (0+255),f,b
  5750  0018E2  0100               	movlb	0	; () banked
  5751  0018E4  376D               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  5752  0018E6  0100               	movlb	0	; () banked
  5753  0018E8  376E               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  5754  0018EA  0100               	movlb	0	; () banked
  5755  0018EC  0100               	movlb	0	; () banked
  5756  0018EE  0779               	decf	___ftadd@exp1& (0+255),f,b
  5757                           
  5758                           ; BSR set to: 0
  5759  0018F0  0100               	movlb	0	; () banked
  5760  0018F2  0100               	movlb	0	; () banked
  5761  0018F4  5178               	movf	___ftadd@exp2& (0+255),w,b
  5762  0018F6  0100               	movlb	0	; () banked
  5763  0018F8  0100               	movlb	0	; () banked
  5764  0018FA  1979               	xorwf	___ftadd@exp1& (0+255),w,b
  5765  0018FC  B4D8               	btfsc	status,2,c
  5766  0018FE  D014               	goto	l3614
  5767                           
  5768                           ; BSR set to: 0
  5769  001900  0100               	movlb	0	; () banked
  5770  001902  0100               	movlb	0	; () banked
  5771  001904  0777               	decf	___ftadd@sign& (0+255),f,b
  5772  001906  0100               	movlb	0	; () banked
  5773  001908  5177               	movf	___ftadd@sign& (0+255),w,b
  5774  00190A  0B07               	andlw	7
  5775  00190C  B4D8               	btfsc	status,2,c
  5776  00190E  D00C               	goto	l3614
  5777  001910  D7E4               	goto	l3606
  5778  001912                     l3612:
  5779                           
  5780                           ; BSR set to: 0
  5781  001912  0100               	movlb	0	; () banked
  5782  001914  90D8               	bcf	status,0,c
  5783  001916  0100               	movlb	0	; () banked
  5784  001918  3371               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  5785  00191A  0100               	movlb	0	; () banked
  5786  00191C  3370               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  5787  00191E  0100               	movlb	0	; () banked
  5788  001920  336F               	rrcf	___ftadd@f2& (0+255),f,b
  5789  001922  0100               	movlb	0	; () banked
  5790  001924  0100               	movlb	0	; () banked
  5791  001926  2B78               	incf	___ftadd@exp2& (0+255),f,b
  5792  001928                     l3614:
  5793                           
  5794                           ; BSR set to: 0
  5795  001928  0100               	movlb	0	; () banked
  5796  00192A  0100               	movlb	0	; () banked
  5797  00192C  5178               	movf	___ftadd@exp2& (0+255),w,b
  5798  00192E  0100               	movlb	0	; () banked
  5799  001930  0100               	movlb	0	; () banked
  5800  001932  6379               	cpfseq	___ftadd@exp1& (0+255),b
  5801  001934  D7EE               	goto	l3612
  5802  001936                     l776:
  5803                           
  5804                           ; BSR set to: 0
  5805  001936  0100               	movlb	0	; () banked
  5806  001938  0100               	movlb	0	; () banked
  5807  00193A  AF77               	btfss	___ftadd@sign& (0+255),7,b
  5808  00193C  D018               	goto	l785
  5809                           
  5810                           ; BSR set to: 0
  5811  00193E  0EFF               	movlw	255
  5812  001940  0100               	movlb	0	; () banked
  5813  001942  0100               	movlb	0	; () banked
  5814  001944  1B6C               	xorwf	___ftadd@f1& (0+255),f,b
  5815  001946  0EFF               	movlw	255
  5816  001948  0100               	movlb	0	; () banked
  5817  00194A  0100               	movlb	0	; () banked
  5818  00194C  1B6D               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  5819  00194E  0EFF               	movlw	255
  5820  001950  0100               	movlb	0	; () banked
  5821  001952  0100               	movlb	0	; () banked
  5822  001954  1B6E               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  5823  001956  0E01               	movlw	1
  5824  001958  0100               	movlb	0	; () banked
  5825  00195A  0100               	movlb	0	; () banked
  5826  00195C  276C               	addwf	___ftadd@f1& (0+255),f,b
  5827  00195E  0E00               	movlw	0
  5828  001960  0100               	movlb	0	; () banked
  5829  001962  0100               	movlb	0	; () banked
  5830  001964  236D               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  5831  001966  0E00               	movlw	0
  5832  001968  0100               	movlb	0	; () banked
  5833  00196A  0100               	movlb	0	; () banked
  5834  00196C  236E               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  5835  00196E                     l785:
  5836                           
  5837                           ; BSR set to: 0
  5838  00196E  0100               	movlb	0	; () banked
  5839  001970  0100               	movlb	0	; () banked
  5840  001972  AD77               	btfss	___ftadd@sign& (0+255),6,b
  5841  001974  D018               	goto	l3620
  5842                           
  5843                           ; BSR set to: 0
  5844  001976  0EFF               	movlw	255
  5845  001978  0100               	movlb	0	; () banked
  5846  00197A  0100               	movlb	0	; () banked
  5847  00197C  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  5848  00197E  0EFF               	movlw	255
  5849  001980  0100               	movlb	0	; () banked
  5850  001982  0100               	movlb	0	; () banked
  5851  001984  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5852  001986  0EFF               	movlw	255
  5853  001988  0100               	movlb	0	; () banked
  5854  00198A  0100               	movlb	0	; () banked
  5855  00198C  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5856  00198E  0E01               	movlw	1
  5857  001990  0100               	movlb	0	; () banked
  5858  001992  0100               	movlb	0	; () banked
  5859  001994  276F               	addwf	___ftadd@f2& (0+255),f,b
  5860  001996  0E00               	movlw	0
  5861  001998  0100               	movlb	0	; () banked
  5862  00199A  0100               	movlb	0	; () banked
  5863  00199C  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5864  00199E  0E00               	movlw	0
  5865  0019A0  0100               	movlb	0	; () banked
  5866  0019A2  0100               	movlb	0	; () banked
  5867  0019A4  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5868  0019A6                     l3620:
  5869                           
  5870                           ; BSR set to: 0
  5871  0019A6  0100               	movlb	0	; () banked
  5872  0019A8  6F72               	movwf	??___ftadd& (0+255),b
  5873  0019AA  0E00               	movlw	0
  5874  0019AC  0100               	movlb	0	; () banked
  5875  0019AE  0100               	movlb	0	; () banked
  5876  0019B0  6F77               	movwf	___ftadd@sign& (0+255),b
  5877  0019B2  0100               	movlb	0	; () banked
  5878  0019B4  5172               	movf	??___ftadd& (0+255),w,b
  5879                           
  5880                           ; BSR set to: 0
  5881  0019B6  0100               	movlb	0	; () banked
  5882  0019B8  0100               	movlb	0	; () banked
  5883  0019BA  516C               	movf	___ftadd@f1& (0+255),w,b
  5884  0019BC  0100               	movlb	0	; () banked
  5885  0019BE  0100               	movlb	0	; () banked
  5886  0019C0  276F               	addwf	___ftadd@f2& (0+255),f,b
  5887  0019C2  0100               	movlb	0	; () banked
  5888  0019C4  0100               	movlb	0	; () banked
  5889  0019C6  516D               	movf	(___ftadd@f1+1)& (0+255),w,b
  5890  0019C8  0100               	movlb	0	; () banked
  5891  0019CA  0100               	movlb	0	; () banked
  5892  0019CC  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5893  0019CE  0100               	movlb	0	; () banked
  5894  0019D0  0100               	movlb	0	; () banked
  5895  0019D2  516E               	movf	(___ftadd@f1+2)& (0+255),w,b
  5896  0019D4  0100               	movlb	0	; () banked
  5897  0019D6  0100               	movlb	0	; () banked
  5898  0019D8  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5899                           
  5900                           ; BSR set to: 0
  5901  0019DA  0100               	movlb	0	; () banked
  5902  0019DC  0100               	movlb	0	; () banked
  5903  0019DE  AF71               	btfss	(___ftadd@f2+2)& (0+255),7,b
  5904  0019E0  D020               	goto	l3630
  5905                           
  5906                           ; BSR set to: 0
  5907  0019E2  0EFF               	movlw	255
  5908  0019E4  0100               	movlb	0	; () banked
  5909  0019E6  0100               	movlb	0	; () banked
  5910  0019E8  1B6F               	xorwf	___ftadd@f2& (0+255),f,b
  5911  0019EA  0EFF               	movlw	255
  5912  0019EC  0100               	movlb	0	; () banked
  5913  0019EE  0100               	movlb	0	; () banked
  5914  0019F0  1B70               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5915  0019F2  0EFF               	movlw	255
  5916  0019F4  0100               	movlb	0	; () banked
  5917  0019F6  0100               	movlb	0	; () banked
  5918  0019F8  1B71               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5919  0019FA  0E01               	movlw	1
  5920  0019FC  0100               	movlb	0	; () banked
  5921  0019FE  0100               	movlb	0	; () banked
  5922  001A00  276F               	addwf	___ftadd@f2& (0+255),f,b
  5923  001A02  0E00               	movlw	0
  5924  001A04  0100               	movlb	0	; () banked
  5925  001A06  0100               	movlb	0	; () banked
  5926  001A08  2370               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5927  001A0A  0E00               	movlw	0
  5928  001A0C  0100               	movlb	0	; () banked
  5929  001A0E  0100               	movlb	0	; () banked
  5930  001A10  2371               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5931                           
  5932                           ; BSR set to: 0
  5933  001A12  0100               	movlb	0	; () banked
  5934  001A14  6F72               	movwf	??___ftadd& (0+255),b
  5935  001A16  0E01               	movlw	1
  5936  001A18  0100               	movlb	0	; () banked
  5937  001A1A  0100               	movlb	0	; () banked
  5938  001A1C  6F77               	movwf	___ftadd@sign& (0+255),b
  5939  001A1E  0100               	movlb	0	; () banked
  5940  001A20  5172               	movf	??___ftadd& (0+255),w,b
  5941  001A22                     l3630:
  5942                           
  5943                           ; BSR set to: 0
  5944  001A22  C06F  F021         	movff	___ftadd@f2,?___ftpack
  5945  001A26  C070  F022         	movff	___ftadd@f2+1,?___ftpack+1
  5946  001A2A  C071  F023         	movff	___ftadd@f2+2,?___ftpack+2
  5947  001A2E  C079  F024         	movff	___ftadd@exp1,?___ftpack+3
  5948  001A32  C077  F025         	movff	___ftadd@sign,?___ftpack+4
  5949  001A36  ECD4  F010         	call	___ftpack	;wreg free
  5950  001A3A  C023  F06E         	movff	?___ftpack+2,?___ftadd+2
  5951  001A3E  C022  F06D         	movff	?___ftpack+1,?___ftadd+1
  5952  001A42  C021  F06C         	movff	?___ftpack,?___ftadd
  5953  001A46  0012               	return	
  5954  001A48                     __end_of___ftadd:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           prodh	equ	0xFF4
  5961                           prodl	equ	0xFF3
  5962                           intcon	equ	0xFF2
  5963                           intcon2	equ	0xFF1
  5964                           postinc0	equ	0xFEE
  5965                           wreg	equ	0xFE8
  5966                           indf2	equ	0xFDF
  5967                           fsr2h	equ	0xFDA
  5968                           fsr2l	equ	0xFD9
  5969                           status	equ	0xFD8
  5970                           
  5971 ;; *************** function ___ftpack *****************
  5972 ;; Defined at:
  5973 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\float.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  arg             3   32[COMRAM] unsigned um
  5976 ;;  exp             1   35[COMRAM] unsigned char 
  5977 ;;  sign            1   36[COMRAM] unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  3   32[COMRAM] float 
  5982 ;; Registers used:
  5983 ;;		wreg, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:        8 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    2
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		___awtoft
  6000 ;;		___ftadd
  6001 ;;		___ftmul
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text32
  6006  0021A8                     __ptext32:
  6007                           	opt stack 0
  6008  0021A8                     ___ftpack:
  6009                           	opt stack 26
  6010                           
  6011                           ;incstack = 0
  6012                           ;incstack = 0
  6013  0021A8  5024               	movf	___ftpack@exp,w,c
  6014  0021AA  B4D8               	btfsc	status,2,c
  6015  0021AC  D005               	goto	l3534
  6016  0021AE  5021               	movf	___ftpack@arg,w,c
  6017  0021B0  1022               	iorwf	___ftpack@arg+1,w,c
  6018  0021B2  1023               	iorwf	___ftpack@arg+2,w,c
  6019  0021B4  A4D8               	btfss	status,2,c
  6020  0021B6  D00C               	goto	l3540
  6021  0021B8                     l3534:
  6022  0021B8  0E00               	movlw	0
  6023  0021BA  6E21               	movwf	?___ftpack,c
  6024  0021BC  0E00               	movlw	0
  6025  0021BE  6E22               	movwf	?___ftpack+1,c
  6026  0021C0  0E00               	movlw	0
  6027  0021C2  6E23               	movwf	?___ftpack+2,c
  6028  0021C4  0012               	return	
  6029  0021C6                     l3538:
  6030  0021C6  2A24               	incf	___ftpack@exp,f,c
  6031  0021C8  90D8               	bcf	status,0,c
  6032  0021CA  3223               	rrcf	___ftpack@arg+2,f,c
  6033  0021CC  3222               	rrcf	___ftpack@arg+1,f,c
  6034  0021CE  3221               	rrcf	___ftpack@arg,f,c
  6035  0021D0                     l3540:
  6036  0021D0  0E00               	movlw	0
  6037  0021D2  1421               	andwf	___ftpack@arg,w,c
  6038  0021D4  6E26               	movwf	??___ftpack& (0+255),c
  6039  0021D6  0E00               	movlw	0
  6040  0021D8  1422               	andwf	___ftpack@arg+1,w,c
  6041  0021DA  6E27               	movwf	(??___ftpack+1)& (0+255),c
  6042  0021DC  0EFE               	movlw	254
  6043  0021DE  1423               	andwf	___ftpack@arg+2,w,c
  6044  0021E0  6E28               	movwf	(??___ftpack+2)& (0+255),c
  6045  0021E2  5026               	movf	??___ftpack,w,c
  6046  0021E4  1027               	iorwf	??___ftpack+1,w,c
  6047  0021E6  1028               	iorwf	??___ftpack+2,w,c
  6048  0021E8  B4D8               	btfsc	status,2,c
  6049  0021EA  D00C               	goto	l3546
  6050  0021EC  D7EC               	goto	l3538
  6051  0021EE                     l3542:
  6052  0021EE  2A24               	incf	___ftpack@exp,f,c
  6053  0021F0  0E01               	movlw	1
  6054  0021F2  2621               	addwf	___ftpack@arg,f,c
  6055  0021F4  0E00               	movlw	0
  6056  0021F6  2222               	addwfc	___ftpack@arg+1,f,c
  6057  0021F8  0E00               	movlw	0
  6058  0021FA  2223               	addwfc	___ftpack@arg+2,f,c
  6059  0021FC  90D8               	bcf	status,0,c
  6060  0021FE  3223               	rrcf	___ftpack@arg+2,f,c
  6061  002200  3222               	rrcf	___ftpack@arg+1,f,c
  6062  002202  3221               	rrcf	___ftpack@arg,f,c
  6063  002204                     l3546:
  6064  002204  0E00               	movlw	0
  6065  002206  1421               	andwf	___ftpack@arg,w,c
  6066  002208  6E26               	movwf	??___ftpack& (0+255),c
  6067  00220A  0E00               	movlw	0
  6068  00220C  1422               	andwf	___ftpack@arg+1,w,c
  6069  00220E  6E27               	movwf	(??___ftpack+1)& (0+255),c
  6070  002210  0EFF               	movlw	255
  6071  002212  1423               	andwf	___ftpack@arg+2,w,c
  6072  002214  6E28               	movwf	(??___ftpack+2)& (0+255),c
  6073  002216  5026               	movf	??___ftpack,w,c
  6074  002218  1027               	iorwf	??___ftpack+1,w,c
  6075  00221A  1028               	iorwf	??___ftpack+2,w,c
  6076  00221C  B4D8               	btfsc	status,2,c
  6077  00221E  D006               	goto	l3550
  6078  002220  D7E6               	goto	l3542
  6079  002222                     l3548:
  6080  002222  0624               	decf	___ftpack@exp,f,c
  6081  002224  90D8               	bcf	status,0,c
  6082  002226  3621               	rlcf	___ftpack@arg,f,c
  6083  002228  3622               	rlcf	___ftpack@arg+1,f,c
  6084  00222A  3623               	rlcf	___ftpack@arg+2,f,c
  6085  00222C                     l3550:
  6086  00222C  AE22               	btfss	___ftpack@arg+1,7,c
  6087  00222E  D7F9               	goto	l3548
  6088  002230  A024               	btfss	___ftpack@exp,0,c
  6089  002232  9E22               	bcf	___ftpack@arg+1,7,c
  6090  002234  90D8               	bcf	status,0,c
  6091  002236  3224               	rrcf	___ftpack@exp,f,c
  6092  002238  5024               	movf	___ftpack@exp,w,c
  6093  00223A  6E28               	movwf	(??___ftpack+2)& (0+255),c
  6094  00223C  6A27               	clrf	(??___ftpack+1)& (0+255),c
  6095  00223E  6A26               	clrf	??___ftpack& (0+255),c
  6096  002240  5026               	movf	??___ftpack,w,c
  6097  002242  1221               	iorwf	___ftpack@arg,f,c
  6098  002244  5027               	movf	??___ftpack+1,w,c
  6099  002246  1222               	iorwf	___ftpack@arg+1,f,c
  6100  002248  5028               	movf	??___ftpack+2,w,c
  6101  00224A  1223               	iorwf	___ftpack@arg+2,f,c
  6102  00224C  5025               	movf	___ftpack@sign,w,c
  6103  00224E  A4D8               	btfss	status,2,c
  6104  002250  8E23               	bsf	___ftpack@arg+2,7,c
  6105  002252  C021  F021         	movff	___ftpack@arg,?___ftpack
  6106  002256  C022  F022         	movff	___ftpack@arg+1,?___ftpack+1
  6107  00225A  C023  F023         	movff	___ftpack@arg+2,?___ftpack+2
  6108  00225E  0012               	return	
  6109  002260                     __end_of___ftpack:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           intcon2	equ	0xFF1
  6119                           postinc0	equ	0xFEE
  6120                           wreg	equ	0xFE8
  6121                           indf2	equ	0xFDF
  6122                           fsr2h	equ	0xFDA
  6123                           fsr2l	equ	0xFD9
  6124                           status	equ	0xFD8
  6125                           
  6126 ;; *************** function _BASSEPRIORITEInterrupt *****************
  6127 ;; Defined at:
  6128 ;;		line 190 in file "C:/Users/etu20261/Desktop/1wire+usart/Main.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;		None
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;		None               void
  6135 ;; Registers used:
  6136 ;;		None
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6146 ;;Total ram usage:       17 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		Interrupt level 1
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	intcodelo
  6157  000018                     __pintcodelo:
  6158                           	opt stack 0
  6159  000018                     _BASSEPRIORITEInterrupt:
  6160                           	opt stack 25
  6161                           
  6162                           ;incstack = 0
  6163  000018  CFD8 F001          	movff	status,??_BASSEPRIORITEInterrupt
  6164  00001C  CFE8 F002          	movff	wreg,??_BASSEPRIORITEInterrupt+1
  6165  000020  CFE0 F003          	movff	bsr,??_BASSEPRIORITEInterrupt+2
  6166  000024  CFFA F004          	movff	pclath,??_BASSEPRIORITEInterrupt+3
  6167  000028  CFFB F005          	movff	pclatu,??_BASSEPRIORITEInterrupt+4
  6168  00002C  CFE9 F006          	movff	fsr0l,??_BASSEPRIORITEInterrupt+5
  6169  000030  CFEA F007          	movff	fsr0h,??_BASSEPRIORITEInterrupt+6
  6170  000034  CFE1 F008          	movff	fsr1l,??_BASSEPRIORITEInterrupt+7
  6171  000038  CFE2 F009          	movff	fsr1h,??_BASSEPRIORITEInterrupt+8
  6172  00003C  CFD9 F00A          	movff	fsr2l,??_BASSEPRIORITEInterrupt+9
  6173  000040  CFDA F00B          	movff	fsr2h,??_BASSEPRIORITEInterrupt+10
  6174  000044  CFF3 F00C          	movff	prodl,??_BASSEPRIORITEInterrupt+11
  6175  000048  CFF4 F00D          	movff	prodh,??_BASSEPRIORITEInterrupt+12
  6176  00004C  CFF6 F00E          	movff	tblptrl,??_BASSEPRIORITEInterrupt+13
  6177  000050  CFF7 F00F          	movff	tblptrh,??_BASSEPRIORITEInterrupt+14
  6178  000054  CFF8 F010          	movff	tblptru,??_BASSEPRIORITEInterrupt+15
  6179  000058  CFF5 F011          	movff	tablat,??_BASSEPRIORITEInterrupt+16
  6180  00005C  C011  FFF5         	movff	??_BASSEPRIORITEInterrupt+16,tablat
  6181  000060  C010  FFF8         	movff	??_BASSEPRIORITEInterrupt+15,tblptru
  6182  000064  C00F  FFF7         	movff	??_BASSEPRIORITEInterrupt+14,tblptrh
  6183  000068  C00E  FFF6         	movff	??_BASSEPRIORITEInterrupt+13,tblptrl
  6184  00006C  C00D  FFF4         	movff	??_BASSEPRIORITEInterrupt+12,prodh
  6185  000070  C00C  FFF3         	movff	??_BASSEPRIORITEInterrupt+11,prodl
  6186  000074  C00B  FFDA         	movff	??_BASSEPRIORITEInterrupt+10,fsr2h
  6187  000078  C00A  FFD9         	movff	??_BASSEPRIORITEInterrupt+9,fsr2l
  6188  00007C  C009  FFE2         	movff	??_BASSEPRIORITEInterrupt+8,fsr1h
  6189  000080  C008  FFE1         	movff	??_BASSEPRIORITEInterrupt+7,fsr1l
  6190  000084  C007  FFEA         	movff	??_BASSEPRIORITEInterrupt+6,fsr0h
  6191  000088  C006  FFE9         	movff	??_BASSEPRIORITEInterrupt+5,fsr0l
  6192  00008C  C005  FFFB         	movff	??_BASSEPRIORITEInterrupt+4,pclatu
  6193  000090  C004  FFFA         	movff	??_BASSEPRIORITEInterrupt+3,pclath
  6194  000094  C003  FFE0         	movff	??_BASSEPRIORITEInterrupt+2,bsr
  6195  000098  C002  FFE8         	movff	??_BASSEPRIORITEInterrupt+1,wreg
  6196  00009C  C001  FFD8         	movff	??_BASSEPRIORITEInterrupt,status
  6197  0000A0  0010               	retfie	
  6198  0000A2                     __end_of_BASSEPRIORITEInterrupt:
  6199                           	opt stack 0
  6200                           pclatu	equ	0xFFB
  6201                           pclath	equ	0xFFA
  6202                           tblptru	equ	0xFF8
  6203                           tblptrh	equ	0xFF7
  6204                           tblptrl	equ	0xFF6
  6205                           tablat	equ	0xFF5
  6206                           prodh	equ	0xFF4
  6207                           prodl	equ	0xFF3
  6208                           intcon	equ	0xFF2
  6209                           intcon2	equ	0xFF1
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           fsr1h	equ	0xFE2
  6215                           fsr1l	equ	0xFE1
  6216                           bsr	equ	0xFE0
  6217                           indf2	equ	0xFDF
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function _HAUTEPRIORITEInterrupt *****************
  6223 ;; Defined at:
  6224 ;;		line 171 in file "C:/Users/etu20261/Desktop/1wire+usart/Main.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;		None               void
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:       15 bytes
  6243 ;; Hardware stack levels used:    1
  6244 ;; This function calls:
  6245 ;;		Nothing
  6246 ;; This function is called by:
  6247 ;;		Interrupt level 2
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	intcode
  6252  000008                     __pintcode:
  6253                           	opt stack 0
  6254  000008                     _HAUTEPRIORITEInterrupt:
  6255                           	opt stack 25
  6256                           
  6257                           ;incstack = 0
  6258  000008  CFFA F013          	movff	pclath,??_HAUTEPRIORITEInterrupt+1
  6259  00000C  CFFB F014          	movff	pclatu,??_HAUTEPRIORITEInterrupt+2
  6260  000010  CFE9 F015          	movff	fsr0l,??_HAUTEPRIORITEInterrupt+3
  6261  000014  EF30  F011         	goto	int_func
  6262                           pclatu	equ	0xFFB
  6263                           pclath	equ	0xFFA
  6264                           tblptru	equ	0xFF8
  6265                           tblptrh	equ	0xFF7
  6266                           tblptrl	equ	0xFF6
  6267                           tablat	equ	0xFF5
  6268                           prodh	equ	0xFF4
  6269                           prodl	equ	0xFF3
  6270                           intcon	equ	0xFF2
  6271                           intcon2	equ	0xFF1
  6272                           postinc0	equ	0xFEE
  6273                           fsr0h	equ	0xFEA
  6274                           fsr0l	equ	0xFE9
  6275                           wreg	equ	0xFE8
  6276                           fsr1h	equ	0xFE2
  6277                           fsr1l	equ	0xFE1
  6278                           bsr	equ	0xFE0
  6279                           indf2	equ	0xFDF
  6280                           fsr2h	equ	0xFDA
  6281                           fsr2l	equ	0xFD9
  6282                           status	equ	0xFD8
  6283                           
  6284                           	psect	intcode_body
  6285  002260                     __pintcode_body:
  6286                           	opt stack 25
  6287  002260                     int_func:
  6288                           	opt stack 25
  6289  002260  CFEA F016          	movff	fsr0h,??_HAUTEPRIORITEInterrupt+4
  6290  002264  CFE1 F017          	movff	fsr1l,??_HAUTEPRIORITEInterrupt+5
  6291  002268  CFE2 F018          	movff	fsr1h,??_HAUTEPRIORITEInterrupt+6
  6292  00226C  CFD9 F019          	movff	fsr2l,??_HAUTEPRIORITEInterrupt+7
  6293  002270  CFDA F01A          	movff	fsr2h,??_HAUTEPRIORITEInterrupt+8
  6294  002274  CFF3 F01B          	movff	prodl,??_HAUTEPRIORITEInterrupt+9
  6295  002278  CFF4 F01C          	movff	prodh,??_HAUTEPRIORITEInterrupt+10
  6296  00227C  CFF6 F01D          	movff	tblptrl,??_HAUTEPRIORITEInterrupt+11
  6297  002280  CFF7 F01E          	movff	tblptrh,??_HAUTEPRIORITEInterrupt+12
  6298  002284  CFF8 F01F          	movff	tblptru,??_HAUTEPRIORITEInterrupt+13
  6299  002288  CFF5 F020          	movff	tablat,??_HAUTEPRIORITEInterrupt+14
  6300  00228C                     
  6301                           ;Main.c: 172: if(PIR1bits.TMR1IF){
  6302  00228C  A09E               	btfss	3998,0,c	;volatile
  6303  00228E  D001               	goto	i2u66_41
  6304  002290  D001               	goto	i2u66_40
  6305  002292                     i2u66_41:
  6306  002292  D00C               	goto	i2l2074
  6307  002294                     i2u66_40:
  6308  002294                     
  6309                           ;Main.c: 173: flagtimer = 1;
  6310  002294  0E00               	movlw	0
  6311  002296  6E37               	movwf	_flagtimer+1,c	;volatile
  6312  002298  0E01               	movlw	1
  6313  00229A  6E36               	movwf	_flagtimer,c	;volatile
  6314                           
  6315                           ;Main.c: 174: TMR1H=0x3C;
  6316  00229C  0E3C               	movlw	60
  6317  00229E  6ECF               	movwf	4047,c	;volatile
  6318                           
  6319                           ;Main.c: 175: TMR1L=0xAF;
  6320  0022A0  0EAF               	movlw	175
  6321  0022A2  6ECE               	movwf	4046,c	;volatile
  6322  0022A4                     
  6323                           ;Main.c: 176: i++;
  6324  0022A4  4A38               	infsnz	_i,f,c	;volatile
  6325  0022A6  2A39               	incf	_i+1,f,c	;volatile
  6326  0022A8                     
  6327                           ;Main.c: 177: PIR1bits.TMR1IF=0;
  6328  0022A8  909E               	bcf	3998,0,c	;volatile
  6329  0022AA  D000               	goto	i2l2074
  6330  0022AC                     i2l2074:
  6331                           
  6332                           ;Main.c: 178: }
  6333                           ;Main.c: 180: if (INTCONbits.TMR0IF == 1)
  6334  0022AC  A4F2               	btfss	intcon,2,c	;volatile
  6335  0022AE  D001               	goto	i2u67_41
  6336  0022B0  D001               	goto	i2u67_40
  6337  0022B2                     i2u67_41:
  6338  0022B2  D009               	goto	i2l404
  6339  0022B4                     i2u67_40:
  6340  0022B4                     
  6341                           ;Main.c: 181: {
  6342                           ;Main.c: 182: bouton = 'g';
  6343  0022B4  6E12               	movwf	??_HAUTEPRIORITEInterrupt& (0+255),c
  6344  0022B6  0E67               	movlw	103
  6345  0022B8  6E3F               	movwf	_bouton,c
  6346  0022BA  5012               	movf	??_HAUTEPRIORITEInterrupt& (0+255),w,c
  6347  0022BC  D000               	goto	i2l2078
  6348  0022BE                     i2l2078:
  6349  0022BE  0EDB               	movlw	219
  6350  0022C0  6ED6               	movwf	4054,c	;volatile
  6351  0022C2                     
  6352                           ;Main.c: 184: INTCONbits.TMR0IF=0;
  6353  0022C2  94F2               	bcf	intcon,2,c	;volatile
  6354  0022C4  D000               	goto	i2l404
  6355  0022C6                     i2l404:
  6356  0022C6  C020  FFF5         	movff	??_HAUTEPRIORITEInterrupt+14,tablat
  6357  0022CA  C01F  FFF8         	movff	??_HAUTEPRIORITEInterrupt+13,tblptru
  6358  0022CE  C01E  FFF7         	movff	??_HAUTEPRIORITEInterrupt+12,tblptrh
  6359  0022D2  C01D  FFF6         	movff	??_HAUTEPRIORITEInterrupt+11,tblptrl
  6360  0022D6  C01C  FFF4         	movff	??_HAUTEPRIORITEInterrupt+10,prodh
  6361  0022DA  C01B  FFF3         	movff	??_HAUTEPRIORITEInterrupt+9,prodl
  6362  0022DE  C01A  FFDA         	movff	??_HAUTEPRIORITEInterrupt+8,fsr2h
  6363  0022E2  C019  FFD9         	movff	??_HAUTEPRIORITEInterrupt+7,fsr2l
  6364  0022E6  C018  FFE2         	movff	??_HAUTEPRIORITEInterrupt+6,fsr1h
  6365  0022EA  C017  FFE1         	movff	??_HAUTEPRIORITEInterrupt+5,fsr1l
  6366  0022EE  C016  FFEA         	movff	??_HAUTEPRIORITEInterrupt+4,fsr0h
  6367  0022F2  C015  FFE9         	movff	??_HAUTEPRIORITEInterrupt+3,fsr0l
  6368  0022F6  C014  FFFB         	movff	??_HAUTEPRIORITEInterrupt+2,pclatu
  6369  0022FA  C013  FFFA         	movff	??_HAUTEPRIORITEInterrupt+1,pclath
  6370  0022FE  0011               	retfie		f
  6371  002300                     __end_of_HAUTEPRIORITEInterrupt:
  6372                           	opt stack 0
  6373                           pclatu	equ	0xFFB
  6374                           pclath	equ	0xFFA
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           postinc0	equ	0xFEE
  6384                           fsr0h	equ	0xFEA
  6385                           fsr0l	equ	0xFE9
  6386                           wreg	equ	0xFE8
  6387                           fsr1h	equ	0xFE2
  6388                           fsr1l	equ	0xFE1
  6389                           bsr	equ	0xFE0
  6390                           indf2	equ	0xFDF
  6391                           fsr2h	equ	0xFDA
  6392                           fsr2l	equ	0xFD9
  6393                           status	equ	0xFD8
  6394                           pclatu	equ	0xFFB
  6395                           pclath	equ	0xFFA
  6396                           tblptru	equ	0xFF8
  6397                           tblptrh	equ	0xFF7
  6398                           tblptrl	equ	0xFF6
  6399                           tablat	equ	0xFF5
  6400                           prodh	equ	0xFF4
  6401                           prodl	equ	0xFF3
  6402                           intcon	equ	0xFF2
  6403                           intcon2	equ	0xFF1
  6404                           postinc0	equ	0xFEE
  6405                           fsr0h	equ	0xFEA
  6406                           fsr0l	equ	0xFE9
  6407                           wreg	equ	0xFE8
  6408                           fsr1h	equ	0xFE2
  6409                           fsr1l	equ	0xFE1
  6410                           bsr	equ	0xFE0
  6411                           indf2	equ	0xFDF
  6412                           fsr2h	equ	0xFDA
  6413                           fsr2l	equ	0xFD9
  6414                           status	equ	0xFD8
  6415                           
  6416                           	psect	rparam
  6417  0000                     pclatu	equ	0xFFB
  6418                           pclath	equ	0xFFA
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           prodh	equ	0xFF4
  6424                           prodl	equ	0xFF3
  6425                           intcon	equ	0xFF2
  6426                           intcon2	equ	0xFF1
  6427                           postinc0	equ	0xFEE
  6428                           fsr0h	equ	0xFEA
  6429                           fsr0l	equ	0xFE9
  6430                           wreg	equ	0xFE8
  6431                           fsr1h	equ	0xFE2
  6432                           fsr1l	equ	0xFE1
  6433                           bsr	equ	0xFE0
  6434                           indf2	equ	0xFDF
  6435                           fsr2h	equ	0xFDA
  6436                           fsr2l	equ	0xFD9
  6437                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        1
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      63
    BANK0           160     56      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?___ftpack	float  size(2) Largest target is 3
		 -> ftoa@y(BANK0[3]), ftoa@x(BANK0[3]), 

    ?_Read_Temperature	float  size(2) Largest target is 0

    ?_OWReadByte	int  size(2) Largest target is 0

    ?_OWReadBit	int  size(2) Largest target is 0

    ?_OWInit	int  size(2) Largest target is 0

    ?_ftoa	int  size(2) Largest target is 5
		 -> capteur(COMRAM[5]), 

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?___awdiv	int  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 3
		 -> ftoa@y(BANK0[3]), ftoa@x(BANK0[3]), 

    ?___ftadd	float  size(2) Largest target is 3
		 -> ftoa@y(BANK0[3]), ftoa@x(BANK0[3]), 

    ?___ftmul	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 3
		 -> ftoa@y(BANK0[3]), ftoa@x(BANK0[3]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> capteur(COMRAM[5]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    ftoa@str	PTR unsigned char  size(2) Largest target is 5
		 -> capteur(COMRAM[5]), 

    ftoa@start	PTR unsigned char  size(2) Largest target is 5
		 -> capteur(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _envoyerMessage->_sendToUsart
    _Read_Temperature->___ftmul
    _OWReadByte->_OWReadBit
    _OWReadBit->_Delay10TCYx
    _Convert_Temperature->_OWWriteByte
    _OWWriteByte->_OWWriteBit
    _OWWriteBit->_Delay10TCYx
    _OWInit->_Delay10TCYx
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay10KTCYx
    _ftoa->___ftmul
    ___awtoft->___ftpack
    ___ftmul->___awtoft
    ___ftadd->___ftmul

Critical Paths under _HAUTEPRIORITEInterrupt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ftoa
    _Read_Temperature->___ftmul
    _ftoa->___ftadd
    ___ftadd->___ftmul

Critical Paths under _HAUTEPRIORITEInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HAUTEPRIORITEInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8787
                                             54 BANK0      2     2      0
                               _ftoa
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
                       _Delay10KTCYx
                       _SetDDRamAddr
                          _putrsXLCD
                           _putsXLCD
                           _initBout
                            _initLCD
                _Convert_Temperature
                   _Read_Temperature
                     _envoyerMessage
 ---------------------------------------------------------------------------------
 (1) _envoyerMessage                                       1     1      0      15
                                             33 COMRAM     1     1      0
                        _sendToUsart
 ---------------------------------------------------------------------------------
 (2) _sendToUsart                                          1     0      1      15
                                             32 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _Read_Temperature                                    25    22      3    2120
                                             12 BANK0     25    22      3
                             _OWInit
                        _OWWriteByte
                         _OWReadByte
                            ___ftmul
                           ___awtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OWReadByte                                           6     4      2     116
                                             38 COMRAM     6     4      2
                          _OWReadBit
 ---------------------------------------------------------------------------------
 (3) _OWReadBit                                            5     3      2      45
                                             33 COMRAM     5     3      2
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (1) _Convert_Temperature                                  0     0      0     164
                             _OWInit
                        _OWWriteByte
 ---------------------------------------------------------------------------------
 (2) _OWWriteByte                                          4     2      2     135
                                             36 COMRAM     4     2      2
                         _OWWriteBit
 ---------------------------------------------------------------------------------
 (3) _OWWriteBit                                           3     1      2      66
                                             33 COMRAM     3     1      2
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (2) _OWInit                                               3     3      0      29
                                             33 COMRAM     3     3      0
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (4) _Delay10TCYx                                          1     0      1      22
                                             32 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBout                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2      60
                                             33 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            2     0      2      60
                                             33 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     0      1      30
                                             32 COMRAM     1     0      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             2     1      1     105
                                             36 COMRAM     2     1      1
                           _BusyXLCD
                       _DelayPORXLCD
                       _WriteCmdXLCD
                       _Delay10KTCYx
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _SetDDRamAddr                                         4     3      1      30
                                             32 COMRAM     4     3      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     0      1      30
                                             32 COMRAM     1     0      1
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0      15
                                             34 COMRAM     1     1      0
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _Delay10KTCYx                                         2     1      1      15
                                             32 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                28    21      7    6188
                                             26 BANK0     28    21      7
                            ___ftadd
                            ___ftmul
                            ___awdiv
                           ___awtoft
                             ___ftge
                            ___ftneg
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     159
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                             32 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      45
                                             32 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     136
                                             32 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     445
                                             40 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                             32 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             17    11      6     800
                                             45 COMRAM     5     5      0
                                              0 BANK0     12     6      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             14     8      6    1537
                                             12 BANK0     14     8      6
                           ___ftpack
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     312
                                             32 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _BASSEPRIORITEInterrupt                              17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 (6) _HAUTEPRIORITEInterrupt                              15    15      0       0
                                             17 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ftoa
     ___ftadd
       ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
     ___ftmul
       ___ftpack
       ___awtoft (ARG)
         ___ftpack
     ___awdiv
     ___awtoft
       ___ftpack
     ___ftge
     ___ftneg
     ___fttol
     ___wmul
   _BusyXLCD
     _DelayFor18TCY
   _OpenXLCD
     _BusyXLCD
       _DelayFor18TCY
     _DelayPORXLCD
       _Delay10KTCYx
     _WriteCmdXLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _SetDDRamAddr
       _DelayFor18TCY
   _WriteCmdXLCD
     _DelayFor18TCY
   _Delay10KTCYx
   _SetDDRamAddr
     _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _putsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _initBout
   _initLCD
   _Convert_Temperature
     _OWInit
       _Delay10TCYx
     _OWWriteByte
       _OWWriteBit
         _Delay10TCYx
   _Read_Temperature
     _OWInit
       _Delay10TCYx
     _OWWriteByte
       _OWWriteBit
         _Delay10TCYx
     _OWReadByte
       _OWReadBit
         _Delay10TCYx
     ___ftmul
       ___ftpack
       ___awtoft (ARG)
         ___ftpack
     ___awtoft
       ___ftpack
     ___wmul
   _envoyerMessage
     _sendToUsart

 _BASSEPRIORITEInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      38       5       35.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      3F       1       66.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77      12        0.0%
DATA                 0      0      7B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Dec 03 13:34:57 2013

            __end_of_OWWriteByte 275E                                l4 1040  
                              l8 109A                                _i 0038  
         Read_Temperature@result 007F                               l57 26A6  
                   ___awdiv@sign 0027                 _Read_Temperature 1E94  
                             bsr 000FE0              ___wmul@multiplicand 0023  
                   ___ftadd@exp1 0079                     ___ftadd@exp2 0078  
                   ___ftadd@sign 0077                              l261 2586  
                            l413 2874                              l248 24FC  
                            l634 2858                              l627 2820  
                            l761 17A8                              l818 27D2  
                            l765 17EA                              l767 1824  
                            l776 1936                              l785 196E  
                            u415 243A                       _OWReadByte 254E  
          __size_of_WriteCmdXLCD 003C                              wreg 000FE8  
                     _TXSTA1bits 000FAC                     __CFG_LVP$OFF 000000  
                           l3020 23DE                             l3012 23BC  
                           l3100 2068                             l3030 23FE  
                           l3022 23E2                             l3006 23AC  
                           l3110 2090                             l3112 209C  
                           l3104 2078                             l3200 10F6  
                           l3018 23D6                             l3034 2408  
                           l3114 20A0                             l3210 116C  
                           l1610 2138                             l3220 11F6  
                           l3204 110C                             l1604 211C  
                           l3038 2416                             l3062 2360  
                           l3118 20B6                             l3230 1262  
                           l3214 11A8                             l1622 217A  
                           l1614 214E                             l1606 2126  
                           l3304 1590                             l3208 114A  
                           l3058 2330                             l3082 2002  
                           l3322 160E                             l3234 129E  
                           l1626 2190                             l1618 2164  
                           l1722 2760                             l3068 238C  
                           l3324 161E                             l3244 135C  
                           l3228 123A                             l2612 24DA  
                           l3326 163A                             l3342 16E6  
                           l3270 1408                             l3262 13DE  
                           l3190 108C                             l2614 24E6  
                           l3502 1BF6                             l3600 18A6  
                           l3328 1660                             l3264 13EA  
                           l3272 142E                             l3184 1066  
                           l1728 277E                             l3602 18BC  
                           l3274 143E                             l3258 13A2  
                           l3186 1074                             l3362 1EFC  
                           l3522 1C8C                             l3540 21D0  
                           l3620 19A6                             l3612 1912  
                           l3604 18CC                             l3284 1488  
                           l3550 222C                             l3542 21EE  
                           l3534 21B8                             l3630 1A22  
                           l3614 1928                             l3606 18DA  
                           l3294 14D0                             l1694 2716  
                           l3374 1F78                             l3518 1C72  
                           l3640 1CFE                             l3288 14B2  
                           l1688 26F6                             l3480 1B3E  
                           l3546 2204                             l3538 21C6  
                           l3548 2222                             l3572 17B6  
                           l3660 1DBA                             l3476 1B14  
                           l3670 1E1A                             l3646 1D4E  
                           l3494 1BC6                             l3584 1816  
                           l3664 1DE6                             l3594 186E  
                           l3578 17F8                             l3674 1E46  
                           l3690 2526                             l3498 1BE0  
                           STR_1 1000                             u3000 1D22  
                           u2200 2020                             u3005 1D1A  
                           u2205 2018                             u2315 10C2  
                           u2180 1FE4                             u2185 1FDC  
                           u3057 285A                             u3067 2826  
                           u2495 14AE                             u2770 1728  
                           u2780 1764                             u2775 171E  
                           u2785 175A                             u2980 1CD2  
                           u2985 1CCA                             _main 1A48  
                           _ftoa 1008                     ___ftpack@arg 0021  
                   ___ftpack@exp 0024                             _temp 0033  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             pclat 000FFA  
         __size_of_WriteDataXLCD 003C                             prodh 000FF4  
                           prodl 000FF3                             start 00A2  
                     _OWWriteBit 24C0                    __CFG_IESO$OFF 000000  
                   ___ftmul@cntr 006A                     ___ftmul@sign 006B  
                    _Delay10TCYx 2858                     ___fttol@exp1 002F  
                   ___fttol@lval 002B                     _WriteCmdXLCD 260A  
                   _BAUDCON1bits 000FB8                    ?_SetDDRamAddr 0021  
                          ?_main 0001                            ?_ftoa 007A  
                __end_of___awdiv 2420                  __end_of___ftadd 1A48  
                __end_of___ftneg 27E0                  __end_of___ftmul 1E94  
                ___awdiv@divisor 0023                  __end_of___fttol 20C8  
                          i1l407 005C                            i2l401 22AC  
                          i2l402 22C6                            i2l403 22BE  
                          i2l404 22C6                  ___awdiv@counter 0026  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _PORTD 000F83  
                          _TRISD 000F95            __size_of_Delay10KTCYx 0016  
                 __CFG_FCMEN$OFF 000000  __size_of_HAUTEPRIORITEInterrupt 22F8  
                __end_of_initLCD 2858                    ___awtoft@sign 002D  
                  ___ftpack@sign 0025                            ftoa@b 0089  
                          ftoa@i 008C                            ftoa@k 0092  
                          ftoa@t 0085                            ftoa@x 007A  
                          ftoa@y 0086                   __CFG_BOREN$OFF 000000  
                          tablat 000FF5                            status 000FD8  
                    _OWWriteByte 272A     __size_of_Convert_Temperature 001E  
             __size_of_OWReadBit 004A                  __initialization 278E  
                   __end_of_main 1CAE                     __end_of_ftoa 16FC  
               __end_of_BusyXLCD 26BA                     _Delay10KTCYx 2820  
          __size_of_DelayPORXLCD 000E                   ??_SetDDRamAddr 0022  
               __end_of_OpenXLCD 21A8                           ??_main 0096  
                  ___fttol@sign1 002A                           ??_ftoa 0081  
    Read_Temperature@temperature 007A                    __activetblptr 000001  
                  _WriteDataXLCD 25CE                   __CFG_PLLCFG$ON 000000  
                   ?_sendToUsart 0021                      ?_OWReadByte 0027  
               ___awdiv@dividend 0021                 __end_of___awtoft 254E  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _ANSELD 000F3B  
                         _ANSELE 000F3C                 __end_of___ftpack 2260  
                         i2l2070 22A4                           i2l2080 22C2  
                         i2l2072 22A8                           i2l2074 22AC  
                         i2l2066 228C                           i2l2076 22B4  
                         i2l2068 2294                           i2l2078 22BE  
                 __CFG_WDTEN$OFF 000000                           _SPBRG1 000FAF  
                         _TXREG1 000FAD                           _OWInit 2646  
                    ?_OWWriteBit 0022                     _DelayPORXLCD 2866  
         _HAUTEPRIORITEInterrupt 0008                           ___ftge 2300  
                         ___wmul 26BA                        ??___awdiv 0025  
                      ??___ftadd 0072                        ??___ftneg 0024  
                      ??___ftmul 002E                        ??___fttol 0025  
               __end_of_initBout 2848                           _bouton 003F  
                         clear_0 2794                 ___awdiv@quotient 0028  
                 ?_WriteDataXLCD 0021                           ftoa@ie 0094  
          ___ftmul@f3_as_product 0067                        ??_initLCD 0021  
                   __pdataCOMRAM 003F                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                __end_of_OWReadBit 24C0  
               __end_of_putsXLCD 278E         __end_of_Read_Temperature 1FC6  
                     __accesstop 0060          __end_of__initialization 27AC  
                     ___ftadd@f1 006C                       ___ftadd@f2 006F  
                     ___ftge@ff1 0021                       ___ftge@ff2 0024  
                     ___ftneg@f1 0021                       ___awtoft@c 0029  
     Read_Temperature@scratchpad 0070              __size_of_OWReadByte 0042  
                     ___ftmul@f1 0060                       ___ftmul@f2 0063  
                     ___fttol@f1 0021                   __pcstackCOMRAM 0001  
       ??_BASSEPRIORITEInterrupt 0001              __size_of_OWWriteBit 004A  
         __size_of_DelayFor18TCY 0022                        ?_BusyXLCD 0001  
                WriteCmdXLCD@cmd 0021             __end_of_SetDDRamAddr 2476  
                        ?_OWInit 0001                        ?_OpenXLCD 0025  
                        ?___ftge 0021                WriteDataXLCD@data 0021  
                   ?_Delay10TCYx 0021                          ?___wmul 0021  
                ??_WriteDataXLCD 0022                        ?___awtoft 0029  
                      ?___ftpack 0021              _Convert_Temperature 2802  
                        i2u66_40 2294                          i2u66_41 2292  
                        i2u67_40 22B4                          i2u67_41 22B2  
           __size_of_sendToUsart 000A                Read_Temperature@i 0081  
             __size_of_putrsXLCD 0036                       ??_BusyXLCD 0021  
                      ?_initBout 0001                     ?_OWWriteByte 0025  
           ?_Convert_Temperature 0001                       ??_OpenXLCD 0026  
                __size_of_OWInit 003A                  __CFG_PWRTEN$OFF 000000  
                 OWReadByte@byte 0029                          __Hparam 0000  
                        __Lparam 0000                  __size_of___ftge 0090  
                        ___awdiv 2390                    _DelayFor18TCY 27E0  
                        ___ftadd 16FC                          ___ftneg 27BA  
                __size_of___wmul 003A                          ___ftmul 1CAE  
                        ___fttol 1FC6                        ?_putsXLCD 0022  
                   __psmallconst 1000                          __pcinit 278E  
                     ??___awtoft 002C                       ??___ftpack 0026  
                putrsXLCD@buffer 0022                          _capteur 003A  
                Delay10TCYx@unit 0021                          __ramtop 1000  
        __size_of_envoyerMessage 003E                          __ptext0 1A48  
                        __ptext1 2590                          __ptext2 2874  
                        __ptext3 1E94                          __ptext4 254E  
                        __ptext5 2476                          __ptext6 2802  
                        __ptext7 272A                          __ptext8 24C0  
                        __ptext9 2646                        _T0CONbits 000FD5  
                        _initLCD 2848                        _T1CONbits 000FCD  
                   ??_OWReadByte 0029  __size_of_BASSEPRIORITEInterrupt 008A  
                 __pintcode_body 2260             end_of_initialization 27AC  
                        ftoa@str 007D                       ??_initBout 0021  
          ??_Convert_Temperature 0029                          int_func 2260  
        ?_HAUTEPRIORITEInterrupt 0001                     ??_OWWriteBit 0024  
             __end_of_OWReadByte 2590                   ?_DelayFor18TCY 0001  
                 OWWriteBit@bite 0022                          postinc0 000FEE  
                     ??_putsXLCD 0024                __end_of_putrsXLCD 272A  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96              Read_Temperature@lsb 007D  
            Read_Temperature@msb 0083               __end_of_OWWriteBit 250A  
          __size_of_SetDDRamAddr 0056                        _OWReadBit 2476  
 __end_of_HAUTEPRIORITEInterrupt 2300                ?_Read_Temperature 006C  
             ??_Read_Temperature 006F           _BASSEPRIORITEInterrupt 0018  
                 __end_of_OWInit 2680                      ___ftmul@exp 0066  
                 __end_of___ftge 2390                   __end_of___wmul 26F4  
           __size_of_Delay10TCYx 000E                    __pidataCOMRAM 287E  
                   _SetDDRamAddr 2420               SetDDRamAddr@DDaddr 0021  
            start_initialization 278E                       ftoa@format 0080  
                     ftoa@fstyle 008E                       ?_OWReadBit 0022  
                       ??_OWInit 0022                __size_of_BusyXLCD 003A  
                ??_DelayFor18TCY 0021             __size_of_OWWriteByte 0034  
              __size_of_OpenXLCD 00E0                         ??___ftge 0027  
                       ??___wmul 0025                    ?_WriteCmdXLCD 0021  
                 _envoyerMessage 2590                     OWWriteByte@i 0027  
              __size_of___awtoft 0044                __size_of___ftpack 00B8  
                    __pbssCOMRAM 0033                    __pcstackBANK0 0060  
            __end_of__stringdata 1006                __size_of_initBout 0012  
                 putsXLCD@buffer 0022                      OWInit@state 0023  
                      __pintcode 0008                   ??_WriteCmdXLCD 0022  
                       ?___awdiv 0021                         ?___ftadd 006C  
                    OWReadByte@i 002B           __end_of_envoyerMessage 25CE  
                       ?___ftneg 0021                    OWReadBit@bite 0025  
                       ?___ftmul 0060                         ?___fttol 0021  
                  ?_Delay10KTCYx 0021                        _flagtimer 0036  
                    __pintcodelo 0018                 __CFG_PRICLKEN$ON 000000  
              __size_of_putsXLCD 0030            __end_of_WriteDataXLCD 260A  
                       ?_initLCD 0001                      __smallconst 1000  
                  ??_sendToUsart 0022                sendToUsart@lettre 0021  
                    ??_OWReadBit 0024                   ___wmul@product 0025  
                       _LATAbits 000F89                         _LATDbits 000F8C  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?_DelayPORXLCD 0001                         _PIR1bits 000F9E  
                OpenXLCD@lcdtype 0025                         _RCONbits 000FD0  
                 ??_Delay10KTCYx 0022                  ?_envoyerMessage 0001  
                    __stringdata 1000                ___wmul@multiplier 0021  
                      _putrsXLCD 26F4                 Delay10KTCYx@unit 0021  
    __end_of_Convert_Temperature 2820                      _INTCON2bits 000FF1  
            __end_of_sendToUsart 287E                         _BusyXLCD 2680  
        ?_BASSEPRIORITEInterrupt 0001                        ftoa@start 0083  
                 ??_DelayPORXLCD 0023                         _OpenXLCD 20C8  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 1000                 __size_of___awdiv 0090  
               __size_of___ftadd 034C                 __size_of___ftneg 0026  
               __size_of___ftmul 01E6                 __size_of___fttol 0102  
      __size_of_Read_Temperature 0132                         ___awtoft 250A  
                       ___ftpack 21A8                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       ?_putrsXLCD 0022  
               __size_of_initLCD 0010                         __ptext10 2858  
                       __ptext11 2848                         __ptext20 2820  
                       __ptext12 2836                         __ptext21 2680  
                       __ptext13 275E                       _T1GCONbits 000FCC  
                       __ptext30 1CAE                         __ptext22 27E0  
                       __ptext14 26F4                         __ptext31 16FC  
                       __ptext23 1008                         __ptext15 25CE  
                       __ptext32 21A8                         __ptext24 26BA  
                       __ptext16 20C8                         __ptext25 1FC6  
                       __ptext17 2420                         __ptext26 27BA  
                       __ptext18 260A                         __ptext27 2300  
                       __ptext19 2866                         __ptext28 250A  
                       __ptext29 2390   __end_of_BASSEPRIORITEInterrupt 00A2  
           __end_of_WriteCmdXLCD 2646                         _initBout 2836  
                  __size_of_main 0266                    __size_of_ftoa 06F4  
                  ??_Delay10TCYx 0022                         _putsXLCD 275E  
                       ftoa@ndig 0090                         ftoa@prec 007F  
                    _sendToUsart 2874                       _INTCONbits 000FF2  
           __end_of_Delay10KTCYx 2836                         intlevel1 0000  
                       intlevel2 0000                    ??_OWWriteByte 0027  
                     _RCSTA1bits 000FAB                       _OSCCONbits 000FD3  
          __end_of_DelayFor18TCY 2802              __end_of_Delay10TCYx 2866  
           __end_of_DelayPORXLCD 2874                      ??_putrsXLCD 0024  
       ??_HAUTEPRIORITEInterrupt 0012                  OWWriteByte@byte 0025  
              __CFG_FOSC$INTIO67 000000                 ??_envoyerMessage 0022  
